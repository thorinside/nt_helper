Resolving dependencies...
Downloading packages...
  _fe_analyzer_shared 85.0.0 (88.0.0 available)
  analyzer 7.7.1 (8.1.1 available)
  build 3.0.2 (4.0.0 available)
  build_resolvers 3.0.2 (3.0.4 available)
  build_runner 2.7.0 (2.8.0 available)
  build_runner_core 9.3.0 (9.3.2 available)
  built_value 8.11.1 (8.12.0 available)
  camera_android_camerax 0.6.19+1 (0.6.21 available)
  camera_avfoundation 0.9.21+1 (0.9.21+2 available)
  characters 1.4.0 (1.4.1 available)
  code_builder 4.10.1 (4.11.0 available)
  dart_style 3.1.1 (3.1.2 available)
  drift_dev 2.28.1 (2.28.2 available)
  file_picker 10.3.2 (10.3.3 available)
! flutter_midi_command_linux 0.3.0 from git https://github.com/thorinside/flutter_midi_command_linux.git at af9089 (overridden)
  flutter_plugin_android_lifecycle 2.0.29 (2.0.30 available)
  flutter_web_bluetooth 0.2.4 (1.1.0 available)
  freezed 3.2.0 (3.2.3 available)
  json_serializable 6.10.0 (6.11.1 available)
  leak_tracker 11.0.1 (11.0.2 available)
  material_color_utilities 0.11.1 (0.13.0 available)
  meta 1.16.0 (1.17.0 available)
  mockito 5.5.0 (5.5.1 available)
  package_info_plus 8.3.1 (9.0.0 available)
  path_provider_android 2.2.17 (2.2.18 available)
  share_plus 11.1.0 (12.0.0 available)
  shared_preferences_android 2.4.11 (2.4.12 available)
  source_gen 3.1.0 (4.0.1 available)
  source_helper 1.3.7 (1.3.8 available)
  sqlparser 0.41.1 (0.41.2 available)
  test 1.26.2 (1.26.3 available)
  test_api 0.7.6 (0.7.7 available)
  test_core 0.6.11 (0.6.12 available)
  universal_ble 0.9.11 (0.21.1 available)
  url_launcher_android 6.3.17 (6.3.21 available)
  webview_flutter_android 4.10.1 (4.10.2 available)
Got dependencies!
35 packages have newer versions incompatible with dependency constraints.
Try `flutter pub outdated` for more information.
{"protocolVersion":"0.1.1","runnerVersion":"1.26.2","pid":72731,"type":"start","time":0}
{"suite":{"id":0,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/ui/widgets/preset_browser_dialog_test.dart"},"type":"suite","time":0}
{"test":{"id":1,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/ui/widgets/preset_browser_dialog_test.dart","suiteID":0,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":0}
{"suite":{"id":2,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/algorithm_node_widget_test.dart"},"type":"suite","time":4}
{"test":{"id":3,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/algorithm_node_widget_test.dart","suiteID":2,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":4}
{"suite":{"id":4,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_painter_test.dart"},"type":"suite","time":4}
{"test":{"id":5,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_painter_test.dart","suiteID":4,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":4}
{"suite":{"id":6,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"suite","time":4}
{"test":{"id":7,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart","suiteID":6,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":4}
{"suite":{"id":8,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/invalid_connection_tooltip_test.dart"},"type":"suite","time":4}
{"test":{"id":9,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/invalid_connection_tooltip_test.dart","suiteID":8,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":4}
{"count":44,"time":6,"type":"allSuites"}
{"testID":1,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":1700}
{"group":{"id":10,"suiteID":0,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":9,"line":null,"column":null,"url":null},"type":"group","time":1702}
{"test":{"id":11,"name":"(setUpAll)","suiteID":0,"groupIDs":[10],"metadata":{"skip":false,"skipReason":null},"line":22,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/preset_browser_dialog_test.dart"},"type":"testStart","time":1702}
{"testID":11,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":1714}
{"group":{"id":12,"suiteID":0,"parentID":10,"name":"PresetBrowserDialog","metadata":{"skip":false,"skipReason":null},"testCount":6,"line":44,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/preset_browser_dialog_test.dart"},"type":"group","time":1714}
{"test":{"id":13,"name":"PresetBrowserDialog displays three panels in row layout","suiteID":0,"groupIDs":[10,12],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":45,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/preset_browser_dialog_test.dart"},"type":"testStart","time":1714}
{"testID":3,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":1891}
{"group":{"id":14,"suiteID":2,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":null,"column":null,"url":null},"type":"group","time":1891}
{"test":{"id":15,"name":"(setUpAll)","suiteID":2,"groupIDs":[14],"metadata":{"skip":false,"skipReason":null},"line":23,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/algorithm_node_widget_test.dart"},"type":"testStart","time":1891}
{"testID":15,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":1913}
{"group":{"id":16,"suiteID":2,"parentID":14,"name":"AlgorithmNodeWidget Mapping Tests","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":28,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/algorithm_node_widget_test.dart"},"type":"group","time":1914}
{"test":{"id":17,"name":"AlgorithmNodeWidget Mapping Tests should show mapping icon when slot has mapped parameters","suiteID":2,"groupIDs":[14,16],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":37,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/algorithm_node_widget_test.dart"},"type":"testStart","time":1914}
{"testID":5,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":1978}
{"group":{"id":18,"suiteID":4,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":23,"line":null,"column":null,"url":null},"type":"group","time":1978}
{"group":{"id":19,"suiteID":4,"parentID":18,"name":"ConnectionPainter","metadata":{"skip":false,"skipReason":null},"testCount":23,"line":9,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_painter_test.dart"},"type":"group","time":1978}
{"group":{"id":20,"suiteID":4,"parentID":19,"name":"ConnectionPainter Label Bounds Storage","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":33,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_painter_test.dart"},"type":"group","time":1978}
{"test":{"id":21,"name":"ConnectionPainter Label Bounds Storage should store label bounds during painting","suiteID":4,"groupIDs":[18,19,20],"metadata":{"skip":false,"skipReason":null},"line":34,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_painter_test.dart"},"type":"testStart","time":1978}
{"testID":21,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2039}
{"test":{"id":22,"name":"ConnectionPainter Label Bounds Storage should not store bounds when labels are disabled","suiteID":4,"groupIDs":[18,19,20],"metadata":{"skip":false,"skipReason":null},"line":60,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_painter_test.dart"},"type":"testStart","time":2039}
{"testID":22,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2041}
{"test":{"id":23,"name":"ConnectionPainter Label Bounds Storage should clear previous bounds on repaint","suiteID":4,"groupIDs":[18,19,20],"metadata":{"skip":false,"skipReason":null},"line":80,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_painter_test.dart"},"type":"testStart","time":2041}
{"testID":23,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2044}
{"group":{"id":24,"suiteID":4,"parentID":19,"name":"ConnectionPainter Hit Testing","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":127,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_painter_test.dart"},"type":"group","time":2044}
{"test":{"id":25,"name":"ConnectionPainter Hit Testing should hit test label bounds correctly","suiteID":4,"groupIDs":[18,19,24],"metadata":{"skip":false,"skipReason":null},"line":128,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_painter_test.dart"},"type":"testStart","time":2044}
{"testID":25,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2047}
{"test":{"id":26,"name":"ConnectionPainter Hit Testing should return null for hit test when no labels exist","suiteID":4,"groupIDs":[18,19,24],"metadata":{"skip":false,"skipReason":null},"line":156,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_painter_test.dart"},"type":"testStart","time":2047}
{"testID":26,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2049}
{"test":{"id":27,"name":"ConnectionPainter Hit Testing should return first matching connection for overlapping labels","suiteID":4,"groupIDs":[18,19,24],"metadata":{"skip":false,"skipReason":null},"line":174,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_painter_test.dart"},"type":"testStart","time":2050}
{"testID":27,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2053}
{"group":{"id":28,"suiteID":4,"parentID":19,"name":"ConnectionPainter Hover Visual Feedback","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":231,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_painter_test.dart"},"type":"group","time":2053}
{"test":{"id":29,"name":"ConnectionPainter Hover Visual Feedback should apply teal color and increased border width on hover","suiteID":4,"groupIDs":[18,19,28],"metadata":{"skip":false,"skipReason":null},"line":232,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_painter_test.dart"},"type":"testStart","time":2053}
{"testID":29,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2056}
{"test":{"id":30,"name":"ConnectionPainter Hover Visual Feedback should not apply hover styling when not hovered","suiteID":4,"groupIDs":[18,19,28],"metadata":{"skip":false,"skipReason":null},"line":256,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_painter_test.dart"},"type":"testStart","time":2056}
{"testID":30,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2059}
{"test":{"id":31,"name":"ConnectionPainter Hover Visual Feedback should not apply hover styling when hoveredConnectionId is null","suiteID":4,"groupIDs":[18,19,28],"metadata":{"skip":false,"skipReason":null},"line":280,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_painter_test.dart"},"type":"testStart","time":2059}
{"testID":31,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2061}
{"group":{"id":32,"suiteID":4,"parentID":19,"name":"ConnectionPainter Invalid Connection Rendering","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":308,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_painter_test.dart"},"type":"group","time":2061}
{"test":{"id":33,"name":"ConnectionPainter Invalid Connection Rendering should render invalid connections with dashed lines and error color","suiteID":4,"groupIDs":[18,19,32],"metadata":{"skip":false,"skipReason":null},"line":309,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_painter_test.dart"},"type":"testStart","time":2061}
{"testID":33,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2064}
{"test":{"id":34,"name":"ConnectionPainter Invalid Connection Rendering should group invalid connections separately for batch rendering","suiteID":4,"groupIDs":[18,19,32],"metadata":{"skip":false,"skipReason":null},"line":339,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_painter_test.dart"},"type":"testStart","time":2064}
{"testID":34,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2066}
{"test":{"id":35,"name":"ConnectionPainter Invalid Connection Rendering should handle mixed connection types with proper grouping","suiteID":4,"groupIDs":[18,19,32],"metadata":{"skip":false,"skipReason":null},"line":385,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_painter_test.dart"},"type":"testStart","time":2066}
{"testID":35,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2068}
{"group":{"id":36,"suiteID":4,"parentID":19,"name":"ConnectionPainter ConnectionData Model","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":488,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_painter_test.dart"},"type":"group","time":2068}
{"test":{"id":37,"name":"ConnectionPainter ConnectionData Model should correctly identify invalid order from isBackwardEdge","suiteID":4,"groupIDs":[18,19,36],"metadata":{"skip":false,"skipReason":null},"line":489,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_painter_test.dart"},"type":"testStart","time":2068}
{"testID":37,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2070}
{"test":{"id":38,"name":"ConnectionPainter ConnectionData Model should correctly identify valid connections","suiteID":4,"groupIDs":[18,19,36],"metadata":{"skip":false,"skipReason":null},"line":505,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_painter_test.dart"},"type":"testStart","time":2070}
{"testID":38,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2072}
{"test":{"id":39,"name":"ConnectionPainter ConnectionData Model should handle physical connections as valid","suiteID":4,"groupIDs":[18,19,36],"metadata":{"skip":false,"skipReason":null},"line":521,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_painter_test.dart"},"type":"testStart","time":2072}
{"testID":39,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2074}
{"group":{"id":40,"suiteID":4,"parentID":19,"name":"ConnectionPainter Dash Pattern Support","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":540,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_painter_test.dart"},"type":"group","time":2074}
{"test":{"id":41,"name":"ConnectionPainter Dash Pattern Support should create painter with dash pattern support enabled","suiteID":4,"groupIDs":[18,19,40],"metadata":{"skip":false,"skipReason":null},"line":541,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_painter_test.dart"},"type":"testStart","time":2074}
{"testID":41,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2087}
{"test":{"id":42,"name":"ConnectionPainter Dash Pattern Support should handle anti-overlap and animations settings for invalid connections","suiteID":4,"groupIDs":[18,19,40],"metadata":{"skip":false,"skipReason":null},"line":550,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_painter_test.dart"},"type":"testStart","time":2088}
{"testID":42,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2090}
{"group":{"id":43,"suiteID":4,"parentID":19,"name":"ConnectionPainter Theme Integration","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":581,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_painter_test.dart"},"type":"group","time":2090}
{"test":{"id":44,"name":"ConnectionPainter Theme Integration should use error color from light theme for invalid connections","suiteID":4,"groupIDs":[18,19,43],"metadata":{"skip":false,"skipReason":null},"line":582,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_painter_test.dart"},"type":"testStart","time":2090}
{"testID":44,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2092}
{"test":{"id":45,"name":"ConnectionPainter Theme Integration should use error color from dark theme for invalid connections","suiteID":4,"groupIDs":[18,19,43],"metadata":{"skip":false,"skipReason":null},"line":597,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_painter_test.dart"},"type":"testStart","time":2092}
{"testID":45,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2094}
{"test":{"id":46,"name":"ConnectionPainter Theme Integration should ensure error color contrast in both themes","suiteID":4,"groupIDs":[18,19,43],"metadata":{"skip":false,"skipReason":null},"line":612,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_painter_test.dart"},"type":"testStart","time":2094}
{"testID":46,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2096}
{"group":{"id":47,"suiteID":4,"parentID":19,"name":"ConnectionPainter Performance","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":628,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_painter_test.dart"},"type":"group","time":2096}
{"test":{"id":48,"name":"ConnectionPainter Performance should handle large numbers of invalid connections efficiently","suiteID":4,"groupIDs":[18,19,47],"metadata":{"skip":false,"skipReason":null},"line":629,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_painter_test.dart"},"type":"testStart","time":2096}
{"testID":48,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2098}
{"test":{"id":49,"name":"ConnectionPainter Performance should maintain performance with mixed connection types","suiteID":4,"groupIDs":[18,19,47],"metadata":{"skip":false,"skipReason":null},"line":658,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_painter_test.dart"},"type":"testStart","time":2098}
{"testID":49,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2101}
{"group":{"id":50,"suiteID":4,"parentID":19,"name":"ConnectionPainter Rendering Order","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":708,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_painter_test.dart"},"type":"group","time":2101}
{"test":{"id":51,"name":"ConnectionPainter Rendering Order should maintain proper z-order for different connection types","suiteID":4,"groupIDs":[18,19,50],"metadata":{"skip":false,"skipReason":null},"line":709,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_painter_test.dart"},"type":"testStart","time":2101}
{"testID":51,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2103}
{"testID":9,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":2109}
{"group":{"id":52,"suiteID":8,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":10,"line":null,"column":null,"url":null},"type":"group","time":2109}
{"group":{"id":53,"suiteID":8,"parentID":52,"name":"InvalidConnectionTooltip Widget Tests","metadata":{"skip":false,"skipReason":null},"testCount":8,"line":7,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/invalid_connection_tooltip_test.dart"},"type":"group","time":2110}
{"test":{"id":54,"name":"InvalidConnectionTooltip Widget Tests should create tooltip widget with correct structure","suiteID":8,"groupIDs":[52,53],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":8,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/invalid_connection_tooltip_test.dart"},"type":"testStart","time":2110}
{"testID":7,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":2120}
{"group":{"id":55,"suiteID":6,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":35,"line":null,"column":null,"url":null},"type":"group","time":2120}
{"group":{"id":56,"suiteID":6,"parentID":55,"name":"MiniMapWidget","metadata":{"skip":false,"skipReason":null},"testCount":35,"line":6,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"group","time":2120}
{"group":{"id":57,"suiteID":6,"parentID":56,"name":"MiniMapWidget Initialization","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":20,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"group","time":2121}
{"test":{"id":58,"name":"MiniMapWidget Initialization should create widget with default dimensions","suiteID":6,"groupIDs":[55,56,57],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":21,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"testStart","time":2121}
{"suite":{"id":59,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/routing_editor_mini_map_prune_test.dart"},"type":"suite","time":2124}
{"test":{"id":60,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/routing_editor_mini_map_prune_test.dart","suiteID":59,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":2124}
{"testID":13,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2150}
{"test":{"id":61,"name":"PresetBrowserDialog displays loading indicator when loading","suiteID":0,"groupIDs":[10,12],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":78,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/preset_browser_dialog_test.dart"},"type":"testStart","time":2150}
{"testID":61,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2202}
{"test":{"id":62,"name":"PresetBrowserDialog displays error message when error state","suiteID":0,"groupIDs":[10,12],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":91,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/preset_browser_dialog_test.dart"},"type":"testStart","time":2202}
{"testID":62,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2230}
{"test":{"id":63,"name":"PresetBrowserDialog displays back button and sort toggle","suiteID":0,"groupIDs":[10,12],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":104,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/preset_browser_dialog_test.dart"},"type":"testStart","time":2230}
{"testID":63,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2268}
{"test":{"id":64,"name":"PresetBrowserDialog calls selectDirectory when directory tapped","suiteID":0,"groupIDs":[10,12],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":135,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/preset_browser_dialog_test.dart"},"type":"testStart","time":2268}
{"testID":17,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2413}
{"test":{"id":65,"name":"AlgorithmNodeWidget Mapping Tests should show mapped parameter menu items when slot has mappings","suiteID":2,"groupIDs":[14,16],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":155,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/algorithm_node_widget_test.dart"},"type":"testStart","time":2413}
{"testID":64,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2454}
{"test":{"id":66,"name":"PresetBrowserDialog calls selectFile when file tapped","suiteID":0,"groupIDs":[10,12],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":189,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/preset_browser_dialog_test.dart"},"type":"testStart","time":2455}
{"testID":66,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2492}
{"group":{"id":67,"suiteID":0,"parentID":10,"name":"DirectoryPanel","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":245,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/preset_browser_dialog_test.dart"},"type":"group","time":2492}
{"test":{"id":68,"name":"DirectoryPanel displays folder icons for directories","suiteID":0,"groupIDs":[10,67],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":246,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/preset_browser_dialog_test.dart"},"type":"testStart","time":2492}
{"testID":54,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2497}
{"test":{"id":69,"name":"InvalidConnectionTooltip Widget Tests should handle valid connections correctly","suiteID":8,"groupIDs":[52,53],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":45,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/invalid_connection_tooltip_test.dart"},"type":"testStart","time":2497}
{"testID":68,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2510}
{"test":{"id":70,"name":"DirectoryPanel displays file icons for files","suiteID":0,"groupIDs":[10,67],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":271,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/preset_browser_dialog_test.dart"},"type":"testStart","time":2510}
{"testID":58,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2514}
{"test":{"id":71,"name":"MiniMapWidget Initialization should accept custom dimensions","suiteID":6,"groupIDs":[55,56,57],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":47,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"testStart","time":2514}
{"testID":69,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2517}
{"test":{"id":72,"name":"InvalidConnectionTooltip Widget Tests should handle custom messages","suiteID":8,"groupIDs":[52,53],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":81,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/invalid_connection_tooltip_test.dart"},"type":"testStart","time":2517}
{"testID":70,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2533}
{"testID":71,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2534}
{"test":{"id":73,"name":"DirectoryPanel highlights selected item","suiteID":0,"groupIDs":[10,67],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":307,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/preset_browser_dialog_test.dart"},"type":"testStart","time":2534}
{"test":{"id":74,"name":"MiniMapWidget Initialization should properly receive and store canvas dimensions","suiteID":6,"groupIDs":[55,56,57],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":73,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"testStart","time":2534}
{"testID":72,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2536}
{"test":{"id":75,"name":"InvalidConnectionTooltip Widget Tests should handle connection properties","suiteID":8,"groupIDs":[52,53],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":117,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/invalid_connection_tooltip_test.dart"},"type":"testStart","time":2536}
{"testID":74,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2551}
{"group":{"id":76,"suiteID":6,"parentID":56,"name":"MiniMapWidget Scroll Controller Binding","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":100,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"group","time":2551}
{"test":{"id":77,"name":"MiniMapWidget Scroll Controller Binding should accept horizontal scroll controller","suiteID":6,"groupIDs":[55,56,76],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":101,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"testStart","time":2551}
{"testID":73,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2553}
{"test":{"id":78,"name":"(tearDownAll)","suiteID":0,"groupIDs":[10],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":2553}
{"testID":75,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2554}
{"test":{"id":79,"name":"InvalidConnectionTooltip Widget Tests should respect show property","suiteID":8,"groupIDs":[52,53],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":156,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/invalid_connection_tooltip_test.dart"},"type":"testStart","time":2554}
{"testID":78,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":2555}
{"suite":{"id":80,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_data_test.dart"},"type":"suite","time":2562}
{"test":{"id":81,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_data_test.dart","suiteID":80,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":2562}
{"testID":79,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2571}
{"testID":77,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2571}
{"test":{"id":82,"name":"InvalidConnectionTooltip Widget Tests should handle slot numbers","suiteID":8,"groupIDs":[52,53],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":190,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/invalid_connection_tooltip_test.dart"},"type":"testStart","time":2571}
{"test":{"id":83,"name":"MiniMapWidget Scroll Controller Binding should accept vertical scroll controller","suiteID":6,"groupIDs":[55,56,76],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":124,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"testStart","time":2572}
{"testID":82,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2587}
{"testID":83,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2588}
{"test":{"id":84,"name":"InvalidConnectionTooltip Widget Tests should handle missing slot numbers","suiteID":8,"groupIDs":[52,53],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":226,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/invalid_connection_tooltip_test.dart"},"type":"testStart","time":2588}
{"test":{"id":85,"name":"MiniMapWidget Scroll Controller Binding should add listeners to scroll controllers on initialization","suiteID":6,"groupIDs":[55,56,76],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":147,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"testStart","time":2588}
{"testID":84,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2604}
{"test":{"id":86,"name":"InvalidConnectionTooltip Widget Tests should handle different connection types","suiteID":8,"groupIDs":[52,53],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":263,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/invalid_connection_tooltip_test.dart"},"type":"testStart","time":2604}
{"testID":85,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2608}
{"group":{"id":87,"suiteID":6,"parentID":56,"name":"MiniMapWidget Scale Factor Calculation","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":188,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"group","time":2608}
{"test":{"id":88,"name":"MiniMapWidget Scale Factor Calculation should calculate correct scale factor","suiteID":6,"groupIDs":[55,56,87],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":189,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"testStart","time":2608}
{"testID":65,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2616}
{"test":{"id":89,"name":"AlgorithmNodeWidget Mapping Tests should not show mapping icon when no parameters are mapped","suiteID":2,"groupIDs":[14,16],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":331,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/algorithm_node_widget_test.dart"},"type":"testStart","time":2616}
{"testID":86,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2622}
{"group":{"id":90,"suiteID":8,"parentID":52,"name":"InvalidConnectionTooltip Animation Tests","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":303,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/invalid_connection_tooltip_test.dart"},"type":"group","time":2622}
{"test":{"id":91,"name":"InvalidConnectionTooltip Animation Tests should create widget with animation controller structure","suiteID":8,"groupIDs":[52,90],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":304,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/invalid_connection_tooltip_test.dart"},"type":"testStart","time":2622}
{"testID":88,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2623}
{"group":{"id":92,"suiteID":6,"parentID":56,"name":"MiniMapWidget Viewport Position Tracking","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":220,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"group","time":2623}
{"test":{"id":93,"name":"MiniMapWidget Viewport Position Tracking should update viewport position when scroll controllers change","suiteID":6,"groupIDs":[55,56,92],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":221,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"testStart","time":2623}
{"testID":91,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2637}
{"test":{"id":94,"name":"InvalidConnectionTooltip Animation Tests should handle different delay durations","suiteID":8,"groupIDs":[52,90],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":338,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/invalid_connection_tooltip_test.dart"},"type":"testStart","time":2637}
{"testID":89,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2648}
{"test":{"id":95,"name":"(tearDownAll)","suiteID":2,"groupIDs":[14],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":2649}
{"testID":95,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":2652}
{"testID":94,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2653}
{"suite":{"id":96,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/physical_io_movement_test.dart"},"type":"suite","time":2661}
{"test":{"id":97,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/physical_io_movement_test.dart","suiteID":96,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":2661}
{"suite":{"id":98,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_hover_detection_test.dart"},"type":"suite","time":2663}
{"test":{"id":99,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_hover_detection_test.dart","suiteID":98,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":2663}
{"testID":93,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2676}
{"test":{"id":100,"name":"MiniMapWidget Viewport Position Tracking should handle scroll controller disposal gracefully","suiteID":6,"groupIDs":[55,56,92],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":269,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"testStart","time":2676}
{"testID":100,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2709}
{"group":{"id":101,"suiteID":6,"parentID":56,"name":"MiniMapWidget Widget Lifecycle Management","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":296,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"group","time":2709}
{"test":{"id":102,"name":"MiniMapWidget Widget Lifecycle Management should properly dispose of listeners when widget is disposed","suiteID":6,"groupIDs":[55,56,101],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":297,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"testStart","time":2709}
{"testID":102,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2729}
{"group":{"id":103,"suiteID":6,"parentID":56,"name":"MiniMapWidget MiniMapPainter","metadata":{"skip":false,"skipReason":null},"testCount":6,"line":330,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"group","time":2729}
{"group":{"id":104,"suiteID":6,"parentID":103,"name":"MiniMapWidget MiniMapPainter Coordinate Scaling Calculations","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":331,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"group","time":2729}
{"test":{"id":105,"name":"MiniMapWidget MiniMapPainter Coordinate Scaling Calculations should correctly scale canvas coordinates to mini-map coordinates","suiteID":6,"groupIDs":[55,56,103,104],"metadata":{"skip":false,"skipReason":null},"line":332,"column":9,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"testStart","time":2729}
{"testID":105,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2731}
{"test":{"id":106,"name":"MiniMapWidget MiniMapPainter Coordinate Scaling Calculations should correctly calculate viewport rectangle dimensions","suiteID":6,"groupIDs":[55,56,103,104],"metadata":{"skip":false,"skipReason":null},"line":366,"column":9,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"testStart","time":2732}
{"testID":106,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2734}
{"test":{"id":107,"name":"MiniMapWidget MiniMapPainter Coordinate Scaling Calculations should handle edge cases for coordinate scaling","suiteID":6,"groupIDs":[55,56,103,104],"metadata":{"skip":false,"skipReason":null},"line":380,"column":9,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"testStart","time":2734}
{"testID":107,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2736}
{"group":{"id":108,"suiteID":6,"parentID":103,"name":"MiniMapWidget MiniMapPainter Node Position Scaling","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":414,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"group","time":2736}
{"test":{"id":109,"name":"MiniMapWidget MiniMapPainter Node Position Scaling should correctly scale node positions from canvas to mini-map space","suiteID":6,"groupIDs":[55,56,103,108],"metadata":{"skip":false,"skipReason":null},"line":415,"column":9,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"testStart","time":2736}
{"testID":109,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2738}
{"group":{"id":110,"suiteID":6,"parentID":103,"name":"MiniMapWidget MiniMapPainter Connection Path Scaling","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":456,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"group","time":2738}
{"test":{"id":111,"name":"MiniMapWidget MiniMapPainter Connection Path Scaling should correctly scale connection start and end points","suiteID":6,"groupIDs":[55,56,103,110],"metadata":{"skip":false,"skipReason":null},"line":457,"column":9,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"testStart","time":2738}
{"testID":111,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2740}
{"group":{"id":112,"suiteID":6,"parentID":103,"name":"MiniMapWidget MiniMapPainter Clipping and Bounds","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":493,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"group","time":2740}
{"test":{"id":113,"name":"MiniMapWidget MiniMapPainter Clipping and Bounds should correctly calculate clipping bounds for overflow prevention","suiteID":6,"groupIDs":[55,56,103,112],"metadata":{"skip":false,"skipReason":null},"line":494,"column":9,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"testStart","time":2740}
{"testID":113,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2742}
{"group":{"id":114,"suiteID":6,"parentID":56,"name":"MiniMapWidget Tap-to-Navigate Interaction","metadata":{"skip":false,"skipReason":null},"testCount":6,"line":557,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"group","time":2742}
{"group":{"id":115,"suiteID":6,"parentID":114,"name":"MiniMapWidget Tap-to-Navigate Interaction Coordinate Transformation","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":558,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"group","time":2742}
{"test":{"id":116,"name":"MiniMapWidget Tap-to-Navigate Interaction Coordinate Transformation should convert mini-map tap coordinates to canvas coordinates","suiteID":6,"groupIDs":[55,56,114,115],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":559,"root_column":9,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"testStart","time":2742}
{"testID":116,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2758}
{"test":{"id":117,"name":"MiniMapWidget Tap-to-Navigate Interaction Coordinate Transformation should handle edge cases for coordinate transformation","suiteID":6,"groupIDs":[55,56,114,115],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":638,"root_column":9,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"testStart","time":2759}
{"testID":117,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2773}
{"group":{"id":118,"suiteID":6,"parentID":114,"name":"MiniMapWidget Tap-to-Navigate Interaction Tap Detection and Response","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":690,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"group","time":2773}
{"test":{"id":119,"name":"MiniMapWidget Tap-to-Navigate Interaction Tap Detection and Response should detect tap on mini-map widget","suiteID":6,"groupIDs":[55,56,114,118],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":691,"root_column":9,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"testStart","time":2773}
{"testID":119,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2824}
{"test":{"id":120,"name":"MiniMapWidget Tap-to-Navigate Interaction Tap Detection and Response should respond to tap within 50ms requirement","suiteID":6,"groupIDs":[55,56,114,118],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":735,"root_column":9,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"testStart","time":2824}
{"testID":120,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2843}
{"group":{"id":121,"suiteID":6,"parentID":114,"name":"MiniMapWidget Tap-to-Navigate Interaction Scroll Navigation","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":786,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"group","time":2843}
{"test":{"id":122,"name":"MiniMapWidget Tap-to-Navigate Interaction Scroll Navigation should animate scroll controllers to target position","suiteID":6,"groupIDs":[55,56,114,121],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":787,"root_column":9,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"testStart","time":2843}
{"testID":122,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2867}
{"test":{"id":123,"name":"MiniMapWidget Tap-to-Navigate Interaction Scroll Navigation should apply boundary checking for scroll positions","suiteID":6,"groupIDs":[55,56,114,121],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":843,"root_column":9,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"testStart","time":2868}
{"testID":123,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2890}
{"group":{"id":124,"suiteID":6,"parentID":56,"name":"MiniMapWidget Viewport Rectangle Dragging","metadata":{"skip":false,"skipReason":null},"testCount":13,"line":913,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"group","time":2891}
{"group":{"id":125,"suiteID":6,"parentID":124,"name":"MiniMapWidget Viewport Rectangle Dragging Drag Gesture Handling","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":915,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"group","time":2891}
{"test":{"id":126,"name":"MiniMapWidget Viewport Rectangle Dragging Drag Gesture Handling should detect pan start gesture on viewport rectangle","suiteID":6,"groupIDs":[55,56,124,125],"metadata":{"skip":true,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":916,"root_column":9,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"testStart","time":2891}
{"testID":126,"result":"success","skipped":true,"hidden":false,"type":"testDone","time":2891}
{"test":{"id":127,"name":"MiniMapWidget Viewport Rectangle Dragging Drag Gesture Handling should track drag state during pan gesture","suiteID":6,"groupIDs":[55,56,124,125],"metadata":{"skip":true,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":981,"root_column":9,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"testStart","time":2891}
{"testID":127,"result":"success","skipped":true,"hidden":false,"type":"testDone","time":2891}
{"test":{"id":128,"name":"MiniMapWidget Viewport Rectangle Dragging Drag Gesture Handling should calculate correct viewport movement deltas during drag","suiteID":6,"groupIDs":[55,56,124,125],"metadata":{"skip":true,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":1039,"root_column":9,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"testStart","time":2891}
{"testID":128,"result":"success","skipped":true,"hidden":false,"type":"testDone","time":2891}
{"group":{"id":129,"suiteID":6,"parentID":124,"name":"MiniMapWidget Viewport Rectangle Dragging Real-time Position Updates","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":1119,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"group","time":2892}
{"test":{"id":130,"name":"MiniMapWidget Viewport Rectangle Dragging Real-time Position Updates should update scroll positions continuously during drag","suiteID":6,"groupIDs":[55,56,124,129],"metadata":{"skip":true,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":1120,"root_column":9,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"testStart","time":2892}
{"testID":130,"result":"success","skipped":true,"hidden":false,"type":"testDone","time":2892}
{"test":{"id":131,"name":"MiniMapWidget Viewport Rectangle Dragging Real-time Position Updates should maintain smooth updates during rapid drag movements","suiteID":6,"groupIDs":[55,56,124,129],"metadata":{"skip":true,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":1190,"root_column":9,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"testStart","time":2892}
{"testID":131,"result":"success","skipped":true,"hidden":false,"type":"testDone","time":2892}
{"group":{"id":132,"suiteID":6,"parentID":124,"name":"MiniMapWidget Viewport Rectangle Dragging Edge Clamping","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":1256,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"group","time":2892}
{"test":{"id":133,"name":"MiniMapWidget Viewport Rectangle Dragging Edge Clamping should prevent dragging viewport beyond left canvas edge","suiteID":6,"groupIDs":[55,56,124,132],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":1257,"root_column":9,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"testStart","time":2892}
{"testID":60,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":2911}
{"group":{"id":134,"suiteID":59,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":null,"column":null,"url":null},"type":"group","time":2912}
{"group":{"id":135,"suiteID":59,"parentID":134,"name":"MiniMap node pruning on routing structure change","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":19,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/routing_editor_mini_map_prune_test.dart"},"type":"group","time":2912}
{"test":{"id":136,"name":"MiniMap node pruning on routing structure change (setUpAll)","suiteID":59,"groupIDs":[134,135],"metadata":{"skip":false,"skipReason":null},"line":20,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/routing_editor_mini_map_prune_test.dart"},"type":"testStart","time":2912}
{"testID":133,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2922}
{"test":{"id":137,"name":"MiniMapWidget Viewport Rectangle Dragging Edge Clamping should prevent dragging viewport beyond right canvas edge","suiteID":6,"groupIDs":[55,56,124,132],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":1319,"root_column":9,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"testStart","time":2922}
{"testID":136,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":2930}
{"test":{"id":138,"name":"MiniMap node pruning on routing structure change old algorithm nodes are removed and new ones initialized","suiteID":59,"groupIDs":[134,135],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":41,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/routing_editor_mini_map_prune_test.dart"},"type":"testStart","time":2930}
{"testID":137,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2949}
{"test":{"id":139,"name":"MiniMapWidget Viewport Rectangle Dragging Edge Clamping should keep viewport within canvas bounds during drag","suiteID":6,"groupIDs":[55,56,124,132],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":1386,"root_column":9,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"testStart","time":2949}
{"testID":139,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":2976}
{"group":{"id":140,"suiteID":6,"parentID":124,"name":"MiniMapWidget Viewport Rectangle Dragging Visual Feedback","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":1474,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"group","time":2977}
{"test":{"id":141,"name":"MiniMapWidget Viewport Rectangle Dragging Visual Feedback should show drag cursor during viewport rectangle drag","suiteID":6,"groupIDs":[55,56,124,140],"metadata":{"skip":true,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":1475,"root_column":9,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"testStart","time":2977}
{"testID":141,"result":"success","skipped":true,"hidden":false,"type":"testDone","time":2977}
{"test":{"id":142,"name":"MiniMapWidget Viewport Rectangle Dragging Visual Feedback should highlight viewport rectangle during drag","suiteID":6,"groupIDs":[55,56,124,140],"metadata":{"skip":true,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":1538,"root_column":9,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"testStart","time":2977}
{"testID":142,"result":"success","skipped":true,"hidden":false,"type":"testDone","time":2977}
{"test":{"id":143,"name":"MiniMapWidget Viewport Rectangle Dragging Visual Feedback should show pointer cursor on hover over viewport rectangle","suiteID":6,"groupIDs":[55,56,124,140],"metadata":{"skip":true,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":1597,"root_column":9,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"testStart","time":2977}
{"testID":143,"result":"success","skipped":true,"hidden":false,"type":"testDone","time":2977}
{"group":{"id":144,"suiteID":6,"parentID":124,"name":"MiniMapWidget Viewport Rectangle Dragging Performance Requirements","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":1653,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"group","time":2977}
{"test":{"id":145,"name":"MiniMapWidget Viewport Rectangle Dragging Performance Requirements should maintain 60 FPS during drag operations","suiteID":6,"groupIDs":[55,56,124,144],"metadata":{"skip":true,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":1654,"root_column":9,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"testStart","time":2977}
{"testID":145,"result":"success","skipped":true,"hidden":false,"type":"testDone","time":2977}
{"test":{"id":146,"name":"MiniMapWidget Viewport Rectangle Dragging Performance Requirements should update viewport position within 16ms of drag event","suiteID":6,"groupIDs":[55,56,124,144],"metadata":{"skip":true,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":1712,"root_column":9,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/mini_map_widget_test.dart"},"type":"testStart","time":2977}
{"testID":146,"result":"success","skipped":true,"hidden":false,"type":"testDone","time":2977}
{"suite":{"id":147,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/invalid_connection_tooltip_simple_test.dart"},"type":"suite","time":2985}
{"test":{"id":148,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/invalid_connection_tooltip_simple_test.dart","suiteID":147,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":2985}
{"testID":81,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":3391}
{"group":{"id":149,"suiteID":80,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":null,"column":null,"url":null},"type":"group","time":3392}
{"group":{"id":150,"suiteID":80,"parentID":149,"name":"ConnectionData","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":6,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_data_test.dart"},"type":"group","time":3392}
{"test":{"id":151,"name":"ConnectionData should create ConnectionData with hover callbacks","suiteID":80,"groupIDs":[149,150],"metadata":{"skip":false,"skipReason":null},"line":18,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_data_test.dart"},"type":"testStart","time":3392}
{"testID":151,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3409}
{"test":{"id":152,"name":"ConnectionData should create ConnectionData without hover callbacks","suiteID":80,"groupIDs":[149,150],"metadata":{"skip":false,"skipReason":null},"line":51,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_data_test.dart"},"type":"testStart","time":3409}
{"testID":152,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3411}
{"suite":{"id":153,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/interactive_connection_widget_test.dart"},"type":"suite","time":3416}
{"test":{"id":154,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/interactive_connection_widget_test.dart","suiteID":153,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":3416}
{"testID":97,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":3515}
{"group":{"id":155,"suiteID":96,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":4,"line":null,"column":null,"url":null},"type":"group","time":3516}
{"group":{"id":156,"suiteID":96,"parentID":155,"name":"Physical I/O Node Movement Tests","metadata":{"skip":false,"skipReason":null},"testCount":4,"line":44,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/physical_io_movement_test.dart"},"type":"group","time":3516}
{"group":{"id":157,"suiteID":96,"parentID":156,"name":"Physical I/O Node Movement Tests Position Constraints and Grid Snapping","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":45,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/physical_io_movement_test.dart"},"type":"group","time":3516}
{"test":{"id":158,"name":"Physical I/O Node Movement Tests Position Constraints and Grid Snapping Grid snapping works correctly","suiteID":96,"groupIDs":[155,156,157],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":46,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/physical_io_movement_test.dart"},"type":"testStart","time":3516}
{"testID":138,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3564}
{"test":{"id":159,"name":"MiniMap node pruning on routing structure change (tearDownAll)","suiteID":59,"groupIDs":[134,135],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":3565}
{"testID":159,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":3568}
{"suite":{"id":160,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/routing_editor_widget_test.dart"},"type":"suite","time":3577}
{"test":{"id":161,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/routing_editor_widget_test.dart","suiteID":160,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":3577}
{"testID":99,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":3626}
{"group":{"id":162,"suiteID":98,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":11,"line":null,"column":null,"url":null},"type":"group","time":3626}
{"group":{"id":163,"suiteID":98,"parentID":162,"name":"Connection Hover Detection","metadata":{"skip":false,"skipReason":null},"testCount":11,"line":16,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_hover_detection_test.dart"},"type":"group","time":3626}
{"group":{"id":164,"suiteID":98,"parentID":163,"name":"Connection Hover Detection Mouse Hover Enter/Exit Events","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":58,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_hover_detection_test.dart"},"type":"group","time":3626}
{"test":{"id":165,"name":"Connection Hover Detection Mouse Hover Enter/Exit Events detects mouse hover enter event","suiteID":98,"groupIDs":[162,163,164],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":59,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_hover_detection_test.dart"},"type":"testStart","time":3626}
{"testID":148,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":3694}
{"group":{"id":166,"suiteID":147,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":9,"line":null,"column":null,"url":null},"type":"group","time":3695}
{"group":{"id":167,"suiteID":147,"parentID":166,"name":"InvalidConnectionTooltip Widget Tests","metadata":{"skip":false,"skipReason":null},"testCount":5,"line":7,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/invalid_connection_tooltip_simple_test.dart"},"type":"group","time":3695}
{"test":{"id":168,"name":"InvalidConnectionTooltip Widget Tests should create widget with invalid connection","suiteID":147,"groupIDs":[166,167],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":8,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/invalid_connection_tooltip_simple_test.dart"},"type":"testStart","time":3695}
{"testID":158,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":3988}
{"group":{"id":169,"suiteID":96,"parentID":156,"name":"Physical I/O Node Movement Tests Port Position Updates During Movement","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":95,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/physical_io_movement_test.dart"},"type":"group","time":3988}
{"test":{"id":170,"name":"Physical I/O Node Movement Tests Port Position Updates During Movement All port types update positions correctly","suiteID":96,"groupIDs":[155,156,169],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":96,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/physical_io_movement_test.dart"},"type":"testStart","time":3988}
{"testID":170,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":4037}
{"group":{"id":171,"suiteID":96,"parentID":156,"name":"Physical I/O Node Movement Tests Visual Feedback During Movement","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":148,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/physical_io_movement_test.dart"},"type":"group","time":4037}
{"test":{"id":172,"name":"Physical I/O Node Movement Tests Visual Feedback During Movement Node appearance changes during drag","suiteID":96,"groupIDs":[155,156,171],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":149,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/physical_io_movement_test.dart"},"type":"testStart","time":4037}
{"testID":165,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":4057}
{"test":{"id":173,"name":"Connection Hover Detection Mouse Hover Enter/Exit Events detects mouse hover exit event","suiteID":98,"groupIDs":[162,163,164],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":93,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_hover_detection_test.dart"},"type":"testStart","time":4058}
{"testID":168,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":4072}
{"test":{"id":174,"name":"InvalidConnectionTooltip Widget Tests should create widget with valid connection","suiteID":147,"groupIDs":[166,167],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":43,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/invalid_connection_tooltip_simple_test.dart"},"type":"testStart","time":4072}
{"testID":172,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":4076}
{"group":{"id":175,"suiteID":96,"parentID":156,"name":"Physical I/O Node Movement Tests Error Handling and Edge Cases","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":184,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/physical_io_movement_test.dart"},"type":"group","time":4077}
{"test":{"id":176,"name":"Physical I/O Node Movement Tests Error Handling and Edge Cases Handles missing position callback gracefully","suiteID":96,"groupIDs":[155,156,175],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":185,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/physical_io_movement_test.dart"},"type":"testStart","time":4077}
{"testID":173,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":4081}
{"test":{"id":177,"name":"Connection Hover Detection Mouse Hover Enter/Exit Events maintains hover state while cursor remains over widget","suiteID":98,"groupIDs":[162,163,164],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":121,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_hover_detection_test.dart"},"type":"testStart","time":4081}
{"testID":174,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":4091}
{"test":{"id":178,"name":"InvalidConnectionTooltip Widget Tests should handle custom message","suiteID":147,"groupIDs":[166,167],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":77,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/invalid_connection_tooltip_simple_test.dart"},"type":"testStart","time":4091}
{"testID":176,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":4109}
{"testID":178,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":4111}
{"test":{"id":179,"name":"InvalidConnectionTooltip Widget Tests should handle connection with properties","suiteID":147,"groupIDs":[166,167],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":109,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/invalid_connection_tooltip_simple_test.dart"},"type":"testStart","time":4112}
{"testID":177,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":4114}
{"group":{"id":180,"suiteID":98,"parentID":163,"name":"Connection Hover Detection Hover State Persistence and Cleanup","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":157,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_hover_detection_test.dart"},"type":"group","time":4114}
{"test":{"id":181,"name":"Connection Hover Detection Hover State Persistence and Cleanup cleans up hover state when widget is disposed","suiteID":98,"groupIDs":[162,163,180],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":158,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_hover_detection_test.dart"},"type":"testStart","time":4114}
{"suite":{"id":182,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/integration_validation_test.dart"},"type":"suite","time":4117}
{"test":{"id":183,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/integration_validation_test.dart","suiteID":182,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":4117}
{"testID":179,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":4130}
{"test":{"id":184,"name":"InvalidConnectionTooltip Widget Tests should be disabled when show is false","suiteID":147,"groupIDs":[166,167],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":143,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/invalid_connection_tooltip_simple_test.dart"},"type":"testStart","time":4130}
{"testID":184,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":4145}
{"group":{"id":185,"suiteID":147,"parentID":166,"name":"InvalidConnectionTooltip Tooltip Message Generation","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":177,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/invalid_connection_tooltip_simple_test.dart"},"type":"group","time":4145}
{"test":{"id":186,"name":"InvalidConnectionTooltip Tooltip Message Generation should generate correct message for invalid connection with slots","suiteID":147,"groupIDs":[166,185],"metadata":{"skip":false,"skipReason":null},"line":178,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/invalid_connection_tooltip_simple_test.dart"},"type":"testStart","time":4145}
{"testID":186,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":4149}
{"test":{"id":187,"name":"InvalidConnectionTooltip Tooltip Message Generation should generate message for valid connection","suiteID":147,"groupIDs":[166,185],"metadata":{"skip":false,"skipReason":null},"line":199,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/invalid_connection_tooltip_simple_test.dart"},"type":"testStart","time":4149}
{"testID":187,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":4151}
{"testID":181,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":4152}
{"test":{"id":188,"name":"InvalidConnectionTooltip Tooltip Message Generation should handle custom message","suiteID":147,"groupIDs":[166,185],"metadata":{"skip":false,"skipReason":null},"line":218,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/invalid_connection_tooltip_simple_test.dart"},"type":"testStart","time":4152}
{"test":{"id":189,"name":"Connection Hover Detection Hover State Persistence and Cleanup handles rapid hover enter/exit cycles gracefully","suiteID":98,"groupIDs":[162,163,180],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":186,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_hover_detection_test.dart"},"type":"testStart","time":4152}
{"testID":188,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":4154}
{"group":{"id":190,"suiteID":147,"parentID":166,"name":"InvalidConnectionTooltip Animation Setup","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":235,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/invalid_connection_tooltip_simple_test.dart"},"type":"group","time":4154}
{"test":{"id":191,"name":"InvalidConnectionTooltip Animation Setup should have animation controller setup","suiteID":147,"groupIDs":[166,190],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":236,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/invalid_connection_tooltip_simple_test.dart"},"type":"testStart","time":4154}
{"testID":191,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":4171}
{"suite":{"id":192,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/performance_test.dart"},"type":"suite","time":4178}
{"test":{"id":193,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/performance_test.dart","suiteID":192,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":4178}
{"testID":189,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":4193}
{"test":{"id":194,"name":"Connection Hover Detection Hover State Persistence and Cleanup preserves hover state during widget rebuilds","suiteID":98,"groupIDs":[162,163,180],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":219,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_hover_detection_test.dart"},"type":"testStart","time":4193}
{"testID":154,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":4202}
{"group":{"id":195,"suiteID":153,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":6,"line":null,"column":null,"url":null},"type":"group","time":4202}
{"group":{"id":196,"suiteID":153,"parentID":195,"name":"InteractiveConnectionWidget","metadata":{"skip":false,"skipReason":null},"testCount":6,"line":14,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/interactive_connection_widget_test.dart"},"type":"group","time":4202}
{"group":{"id":197,"suiteID":153,"parentID":196,"name":"InteractiveConnectionWidget Desktop platform behavior","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":48,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/interactive_connection_widget_test.dart"},"type":"group","time":4202}
{"test":{"id":198,"name":"InteractiveConnectionWidget Desktop platform behavior wraps child with GestureDetector for desktop interaction","suiteID":153,"groupIDs":[195,196,197],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":57,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/interactive_connection_widget_test.dart"},"type":"testStart","time":4202}
{"testID":194,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":4220}
{"group":{"id":199,"suiteID":98,"parentID":163,"name":"Connection Hover Detection Mock Mouse Event Handling","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":281,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_hover_detection_test.dart"},"type":"group","time":4220}
{"test":{"id":200,"name":"Connection Hover Detection Mock Mouse Event Handling properly handles mock PointerEnterEvent","suiteID":98,"groupIDs":[162,163,199],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":282,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_hover_detection_test.dart"},"type":"testStart","time":4220}
{"testID":200,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":4239}
{"test":{"id":201,"name":"Connection Hover Detection Mock Mouse Event Handling handles null mouse event callbacks gracefully","suiteID":98,"groupIDs":[162,163,199],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":296,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_hover_detection_test.dart"},"type":"testStart","time":4240}
{"testID":201,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":4253}
{"test":{"id":202,"name":"Connection Hover Detection Mock Mouse Event Handling validates event handling performance","suiteID":98,"groupIDs":[162,163,199],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":309,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_hover_detection_test.dart"},"type":"testStart","time":4253}
{"testID":202,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":4272}
{"group":{"id":203,"suiteID":98,"parentID":163,"name":"Connection Hover Detection Integration with Platform Detection","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":333,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_hover_detection_test.dart"},"type":"group","time":4273}
{"test":{"id":204,"name":"Connection Hover Detection Integration with Platform Detection only enables hover detection on desktop platforms","suiteID":98,"groupIDs":[162,163,203],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":334,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_hover_detection_test.dart"},"type":"testStart","time":4273}
{"testID":204,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":4289}
{"test":{"id":205,"name":"Connection Hover Detection Integration with Platform Detection disables hover interactions when platform service indicates mobile","suiteID":98,"groupIDs":[162,163,203],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":351,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/connection_hover_detection_test.dart"},"type":"testStart","time":4289}
{"testID":205,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":4305}
{"suite":{"id":206,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/interactive_connection_labels_test.dart"},"type":"suite","time":4312}
{"test":{"id":207,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/interactive_connection_labels_test.dart","suiteID":206,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":4312}
{"testID":161,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":4318}
{"group":{"id":208,"suiteID":160,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":4,"line":null,"column":null,"url":null},"type":"group","time":4318}
{"test":{"id":209,"name":"(setUpAll)","suiteID":160,"groupIDs":[208],"metadata":{"skip":false,"skipReason":null},"line":20,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/routing_editor_widget_test.dart"},"type":"testStart","time":4318}
{"testID":209,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":4332}
{"group":{"id":210,"suiteID":160,"parentID":208,"name":"RoutingEditorWidget Hover State","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":27,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/routing_editor_widget_test.dart"},"type":"group","time":4332}
{"test":{"id":211,"name":"RoutingEditorWidget Hover State manages hover state for connections","suiteID":160,"groupIDs":[208,210],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":36,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/routing_editor_widget_test.dart"},"type":"testStart","time":4332}
{"testID":198,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":4595}
{"group":{"id":212,"suiteID":153,"parentID":196,"name":"InteractiveConnectionWidget Mobile platform behavior","metadata":{"skip":false,"skipReason":null},"testCount":4,"line":68,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/interactive_connection_widget_test.dart"},"type":"group","time":4595}
{"test":{"id":213,"name":"InteractiveConnectionWidget Mobile platform behavior shows confirmation dialog on tap","suiteID":153,"groupIDs":[195,196,212],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":75,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/interactive_connection_widget_test.dart"},"type":"testStart","time":4595}
{"testID":213,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":4737}
{"test":{"id":214,"name":"InteractiveConnectionWidget Mobile platform behavior deletes connection when confirmed in dialog","suiteID":153,"groupIDs":[195,196,212],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":92,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/interactive_connection_widget_test.dart"},"type":"testStart","time":4738}
{"testID":211,"messageType":"print","message":"RoutingEditorWidget: No bus number found for connection test_connection_1","type":"print","time":4779}
{"testID":211,"messageType":"print","message":"  - busNumber: null","type":"print","time":4779}
{"testID":211,"messageType":"print","message":"  - busId: null","type":"print","time":4779}
{"testID":214,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":4840}
{"test":{"id":215,"name":"InteractiveConnectionWidget Mobile platform behavior does not delete when cancelled in dialog","suiteID":153,"groupIDs":[195,196,212],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":114,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/interactive_connection_widget_test.dart"},"type":"testStart","time":4840}
{"testID":211,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":4860}
{"test":{"id":216,"name":"RoutingEditorWidget Hover State supports stylus hover events","suiteID":160,"groupIDs":[208,210],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":125,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/routing_editor_widget_test.dart"},"type":"testStart","time":4860}
{"testID":215,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":4892}
{"test":{"id":217,"name":"InteractiveConnectionWidget Mobile platform behavior shows confirmation dialog on long press","suiteID":153,"groupIDs":[195,196,212],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":128,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/interactive_connection_widget_test.dart"},"type":"testStart","time":4892}
{"testID":216,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":4896}
{"group":{"id":218,"suiteID":160,"parentID":208,"name":"RoutingEditorWidget Connection Label Tap","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":175,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/routing_editor_widget_test.dart"},"type":"group","time":4897}
{"test":{"id":219,"name":"RoutingEditorWidget Connection Label Tap handles connection label tap to toggle output mode","suiteID":160,"groupIDs":[208,218],"metadata":{"skip":true,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":184,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/routing_editor_widget_test.dart"},"type":"testStart","time":4897}
{"testID":219,"result":"success","skipped":true,"hidden":false,"type":"testDone","time":4897}
{"test":{"id":220,"name":"RoutingEditorWidget Connection Label Tap toggles output mode from replace to add on label tap","suiteID":160,"groupIDs":[208,218],"metadata":{"skip":true,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":269,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/routing_editor_widget_test.dart"},"type":"testStart","time":4897}
{"testID":220,"result":"success","skipped":true,"hidden":false,"type":"testDone","time":4897}
{"test":{"id":221,"name":"(tearDownAll)","suiteID":160,"groupIDs":[208],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":4897}
{"testID":221,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":4900}
{"suite":{"id":222,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/port_widget_test.dart"},"type":"suite","time":4908}
{"test":{"id":223,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/port_widget_test.dart","suiteID":222,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":4908}
{"testID":217,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":4933}
{"group":{"id":224,"suiteID":153,"parentID":196,"name":"InteractiveConnectionWidget Platform detection fallback","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":140,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/interactive_connection_widget_test.dart"},"type":"group","time":4933}
{"test":{"id":225,"name":"InteractiveConnectionWidget Platform detection fallback uses real PlatformInteractionService when none provided","suiteID":153,"groupIDs":[195,196,224],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":141,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/interactive_connection_widget_test.dart"},"type":"testStart","time":4933}
{"testID":183,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":4940}
{"group":{"id":226,"suiteID":182,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":6,"line":null,"column":null,"url":null},"type":"group","time":4941}
{"group":{"id":227,"suiteID":182,"parentID":226,"name":"Task 3 Integration Validation","metadata":{"skip":false,"skipReason":null},"testCount":6,"line":48,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/integration_validation_test.dart"},"type":"group","time":4941}
{"test":{"id":228,"name":"Task 3 Integration Validation Universal port widget works across all node types","suiteID":182,"groupIDs":[226,227],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":49,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/integration_validation_test.dart"},"type":"testStart","time":4941}
{"testID":225,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":4951}
{"suite":{"id":229,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/universal_port_widget_integration_test.dart"},"type":"suite","time":4959}
{"test":{"id":230,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/universal_port_widget_integration_test.dart","suiteID":229,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":4959}
{"testID":193,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":5037}
{"group":{"id":231,"suiteID":192,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":5,"line":null,"column":null,"url":null},"type":"group","time":5037}
{"group":{"id":232,"suiteID":192,"parentID":231,"name":"Performance Tests","metadata":{"skip":false,"skipReason":null},"testCount":5,"line":49,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/performance_test.dart"},"type":"group","time":5037}
{"group":{"id":233,"suiteID":192,"parentID":232,"name":"Performance Tests Drag Operation Performance","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":50,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/performance_test.dart"},"type":"group","time":5037}
{"test":{"id":234,"name":"Performance Tests Drag Operation Performance Simultaneous node drags maintain performance","suiteID":192,"groupIDs":[231,232,233],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":51,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/performance_test.dart"},"type":"testStart","time":5037}
{"testID":207,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":5116}
{"group":{"id":235,"suiteID":206,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":5,"line":null,"column":null,"url":null},"type":"group","time":5116}
{"group":{"id":236,"suiteID":206,"parentID":235,"name":"Task 6 - Interactive Connection Labels Integration","metadata":{"skip":false,"skipReason":null},"testCount":5,"line":16,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/interactive_connection_labels_test.dart"},"type":"group","time":5116}
{"test":{"id":237,"name":"Task 6 - Interactive Connection Labels Integration Connection data structure supports hover and tap callbacks","suiteID":206,"groupIDs":[235,236],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":17,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/interactive_connection_labels_test.dart"},"type":"testStart","time":5116}
{"testID":237,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":5296}
{"test":{"id":238,"name":"Task 6 - Interactive Connection Labels Integration ConnectionPainter renders with hover callbacks correctly","suiteID":206,"groupIDs":[235,236],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":55,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/interactive_connection_labels_test.dart"},"type":"testStart","time":5297}
{"testID":228,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":5485}
{"test":{"id":239,"name":"Task 3 Integration Validation Port widgets handle hover states consistently","suiteID":182,"groupIDs":[226,227],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":130,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/integration_validation_test.dart"},"type":"testStart","time":5485}
{"testID":238,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":5534}
{"test":{"id":240,"name":"Task 6 - Interactive Connection Labels Integration Multiple connections maintain independent callback state","suiteID":206,"groupIDs":[235,236],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":96,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/interactive_connection_labels_test.dart"},"type":"testStart","time":5534}
{"testID":240,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":5557}
{"test":{"id":241,"name":"Task 6 - Interactive Connection Labels Integration RoutingEditorCubit setPortOutputMode integration","suiteID":206,"groupIDs":[235,236],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":158,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/interactive_connection_labels_test.dart"},"type":"testStart","time":5557}
{"testID":223,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":5584}
{"group":{"id":242,"suiteID":222,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":16,"line":null,"column":null,"url":null},"type":"group","time":5585}
{"group":{"id":243,"suiteID":222,"parentID":242,"name":"PortWidget","metadata":{"skip":false,"skipReason":null},"testCount":16,"line":6,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/port_widget_test.dart"},"type":"group","time":5585}
{"test":{"id":244,"name":"PortWidget renders port with label on right by default","suiteID":222,"groupIDs":[242,243],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":7,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/port_widget_test.dart"},"type":"testStart","time":5585}
{"testID":239,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":5588}
{"test":{"id":245,"name":"Task 3 Integration Validation Physical port generation creates correct port structures","suiteID":182,"groupIDs":[226,227],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":203,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/integration_validation_test.dart"},"type":"testStart","time":5588}
{"testID":234,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":5593}
{"group":{"id":246,"suiteID":192,"parentID":232,"name":"Performance Tests Port Position Update Performance","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":145,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/performance_test.dart"},"type":"group","time":5593}
{"test":{"id":247,"name":"Performance Tests Port Position Update Performance Large number of port position updates","suiteID":192,"groupIDs":[231,232,246],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":146,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/performance_test.dart"},"type":"testStart","time":5593}
{"testID":241,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":5620}
{"test":{"id":248,"name":"Task 6 - Interactive Connection Labels Integration Performance validation for rendering multiple connections with callbacks","suiteID":206,"groupIDs":[235,236],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":199,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/interactive_connection_labels_test.dart"},"type":"testStart","time":5620}
{"testID":245,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":5640}
{"test":{"id":249,"name":"Task 3 Integration Validation Port position updates work consistently","suiteID":182,"groupIDs":[226,227],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":263,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/integration_validation_test.dart"},"type":"testStart","time":5640}
{"testID":248,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":5642}
{"testID":247,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":5648}
{"suite":{"id":250,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/layout_algorithm_button_test.dart"},"type":"suite","time":5650}
{"test":{"id":251,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/layout_algorithm_button_test.dart","suiteID":250,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":5650}
{"group":{"id":252,"suiteID":192,"parentID":232,"name":"Performance Tests Large Scale Performance","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":204,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/performance_test.dart"},"type":"group","time":5651}
{"test":{"id":253,"name":"Performance Tests Large Scale Performance Many nodes with many ports perform well","suiteID":192,"groupIDs":[231,232,252],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":205,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/performance_test.dart"},"type":"testStart","time":5651}
{"testID":249,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":5664}
{"test":{"id":254,"name":"Task 3 Integration Validation Drag operations work across node types","suiteID":182,"groupIDs":[226,227],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":294,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/integration_validation_test.dart"},"type":"testStart","time":5664}
{"testID":254,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":5704}
{"test":{"id":255,"name":"Task 3 Integration Validation Port widgets maintain consistent sizing","suiteID":182,"groupIDs":[226,227],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":355,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/integration_validation_test.dart"},"type":"testStart","time":5704}
{"testID":253,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":5705}
{"group":{"id":256,"suiteID":192,"parentID":232,"name":"Performance Tests Animation Performance","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":255,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/performance_test.dart"},"type":"group","time":5706}
{"test":{"id":257,"name":"Performance Tests Animation Performance Smooth drag animations","suiteID":192,"groupIDs":[231,232,256],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":256,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/performance_test.dart"},"type":"testStart","time":5706}
{"testID":255,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":5735}
{"suite":{"id":258,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/cubit/routing_editor_cubit_validation_test.dart"},"type":"suite","time":5743}
{"test":{"id":259,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/cubit/routing_editor_cubit_validation_test.dart","suiteID":258,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":5743}
{"testID":257,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":5759}
{"group":{"id":260,"suiteID":192,"parentID":232,"name":"Performance Tests Memory Usage","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":327,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/performance_test.dart"},"type":"group","time":5760}
{"test":{"id":261,"name":"Performance Tests Memory Usage No memory leaks during repeated operations","suiteID":192,"groupIDs":[231,232,260],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":328,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/performance_test.dart"},"type":"testStart","time":5760}
{"testID":230,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":5834}
{"group":{"id":262,"suiteID":229,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":9,"line":null,"column":null,"url":null},"type":"group","time":5835}
{"group":{"id":263,"suiteID":229,"parentID":262,"name":"Universal Port Widget Integration Tests","metadata":{"skip":false,"skipReason":null},"testCount":9,"line":52,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/universal_port_widget_integration_test.dart"},"type":"group","time":5835}
{"group":{"id":264,"suiteID":229,"parentID":263,"name":"Universal Port Widget Integration Tests Port Widget Cross-Node Compatibility","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":53,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/universal_port_widget_integration_test.dart"},"type":"group","time":5835}
{"test":{"id":265,"name":"Universal Port Widget Integration Tests Port Widget Cross-Node Compatibility PortWidget works consistently in algorithm nodes","suiteID":229,"groupIDs":[262,263,264],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":54,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/universal_port_widget_integration_test.dart"},"type":"testStart","time":5835}
{"testID":261,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":5933}
{"suite":{"id":266,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/cubit/bus_number_resolution_test.dart"},"type":"suite","time":5940}
{"test":{"id":267,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/cubit/bus_number_resolution_test.dart","suiteID":266,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":5941}
{"testID":244,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6012}
{"test":{"id":268,"name":"PortWidget renders input port with primary color","suiteID":222,"groupIDs":[242,243],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":35,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/port_widget_test.dart"},"type":"testStart","time":6012}
{"testID":268,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6036}
{"test":{"id":269,"name":"PortWidget renders output port with secondary color","suiteID":222,"groupIDs":[242,243],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":56,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/port_widget_test.dart"},"type":"testStart","time":6036}
{"testID":269,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6054}
{"test":{"id":270,"name":"PortWidget positions label on left when specified","suiteID":222,"groupIDs":[242,243],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":77,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/port_widget_test.dart"},"type":"testStart","time":6055}
{"testID":270,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6073}
{"test":{"id":271,"name":"PortWidget positions label on right by default","suiteID":222,"groupIDs":[242,243],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":105,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/port_widget_test.dart"},"type":"testStart","time":6073}
{"testID":271,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6089}
{"test":{"id":272,"name":"PortWidget uses custom theme when provided","suiteID":222,"groupIDs":[242,243],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":132,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/port_widget_test.dart"},"type":"testStart","time":6090}
{"testID":272,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6107}
{"test":{"id":273,"name":"PortWidget calls position resolved callback when portId is provided","suiteID":222,"groupIDs":[242,243],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":168,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/port_widget_test.dart"},"type":"testStart","time":6107}
{"testID":273,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6125}
{"test":{"id":274,"name":"PortWidget does not call position callback when portId is null","suiteID":222,"groupIDs":[242,243],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":211,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/port_widget_test.dart"},"type":"testStart","time":6126}
{"testID":274,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6141}
{"test":{"id":275,"name":"PortWidget handles widget updates and recalls position callback","suiteID":222,"groupIDs":[242,243],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":237,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/port_widget_test.dart"},"type":"testStart","time":6141}
{"testID":275,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6174}
{"group":{"id":276,"suiteID":222,"parentID":243,"name":"PortWidget PortLabelPosition enum","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":276,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/port_widget_test.dart"},"type":"group","time":6174}
{"test":{"id":277,"name":"PortWidget PortLabelPosition enum has correct values","suiteID":222,"groupIDs":[242,243,276],"metadata":{"skip":false,"skipReason":null},"line":277,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/port_widget_test.dart"},"type":"testStart","time":6174}
{"testID":277,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6177}
{"group":{"id":278,"suiteID":222,"parentID":243,"name":"PortWidget PortStyle enum","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":284,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/port_widget_test.dart"},"type":"group","time":6177}
{"test":{"id":279,"name":"PortWidget PortStyle enum has correct values","suiteID":222,"groupIDs":[242,243,278],"metadata":{"skip":false,"skipReason":null},"line":285,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/port_widget_test.dart"},"type":"testStart","time":6177}
{"testID":279,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6178}
{"test":{"id":280,"name":"PortWidget renders jack style port correctly","suiteID":222,"groupIDs":[242,243],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":292,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/port_widget_test.dart"},"type":"testStart","time":6178}
{"testID":280,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6197}
{"test":{"id":281,"name":"PortWidget handles tap callback correctly","suiteID":222,"groupIDs":[242,243],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":326,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/port_widget_test.dart"},"type":"testStart","time":6198}
{"testID":281,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6241}
{"test":{"id":282,"name":"PortWidget handles drag callbacks correctly","suiteID":222,"groupIDs":[242,243],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":353,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/port_widget_test.dart"},"type":"testStart","time":6241}
{"testID":282,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6267}
{"test":{"id":283,"name":"PortWidget maintains consistent visual spacing","suiteID":222,"groupIDs":[242,243],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":397,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/port_widget_test.dart"},"type":"testStart","time":6267}
{"testID":283,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6286}
{"test":{"id":284,"name":"PortWidget properly handles theme changes","suiteID":222,"groupIDs":[242,243],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":437,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/port_widget_test.dart"},"type":"testStart","time":6286}
{"testID":265,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6326}
{"test":{"id":285,"name":"Universal Port Widget Integration Tests Port Widget Cross-Node Compatibility PortWidget works consistently in physical I/O nodes","suiteID":229,"groupIDs":[262,263,264],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":88,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/universal_port_widget_integration_test.dart"},"type":"testStart","time":6326}
{"testID":284,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6329}
{"suite":{"id":286,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/cubit/preset_browser_cubit_test.dart"},"type":"suite","time":6335}
{"test":{"id":287,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/cubit/preset_browser_cubit_test.dart","suiteID":286,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":6335}
{"testID":285,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6357}
{"test":{"id":288,"name":"Universal Port Widget Integration Tests Port Widget Cross-Node Compatibility Physical output nodes use consistent port widgets","suiteID":229,"groupIDs":[262,263,264],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":117,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/universal_port_widget_integration_test.dart"},"type":"testStart","time":6357}
{"testID":288,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6383}
{"group":{"id":289,"suiteID":229,"parentID":263,"name":"Universal Port Widget Integration Tests Multi-Node Integration Tests","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":147,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/universal_port_widget_integration_test.dart"},"type":"group","time":6383}
{"test":{"id":290,"name":"Universal Port Widget Integration Tests Multi-Node Integration Tests Multiple node types work together seamlessly","suiteID":229,"groupIDs":[262,263,289],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":148,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/universal_port_widget_integration_test.dart"},"type":"testStart","time":6383}
{"testID":290,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6445}
{"group":{"id":291,"suiteID":229,"parentID":263,"name":"Universal Port Widget Integration Tests Position and State Management","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":221,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/universal_port_widget_integration_test.dart"},"type":"group","time":6445}
{"test":{"id":292,"name":"Universal Port Widget Integration Tests Position and State Management Port positions update correctly when nodes move","suiteID":229,"groupIDs":[262,263,291],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":222,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/universal_port_widget_integration_test.dart"},"type":"testStart","time":6445}
{"testID":251,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":6466}
{"group":{"id":293,"suiteID":250,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":6,"line":null,"column":null,"url":null},"type":"group","time":6467}
{"group":{"id":294,"suiteID":250,"parentID":293,"name":"Layout Algorithm Button UI Integration","metadata":{"skip":false,"skipReason":null},"testCount":6,"line":19,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/layout_algorithm_button_test.dart"},"type":"group","time":6467}
{"test":{"id":295,"name":"Layout Algorithm Button UI Integration shows layout algorithm button when routing editor is loaded","suiteID":250,"groupIDs":[293,294],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":52,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/layout_algorithm_button_test.dart"},"type":"testStart","time":6467}
{"testID":267,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":6470}
{"group":{"id":296,"suiteID":266,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":14,"line":null,"column":null,"url":null},"type":"group","time":6471}
{"group":{"id":297,"suiteID":266,"parentID":296,"name":"Bus Number Resolution Logic","metadata":{"skip":false,"skipReason":null},"testCount":14,"line":5,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/bus_number_resolution_test.dart"},"type":"group","time":6471}
{"group":{"id":298,"suiteID":266,"parentID":297,"name":"Bus Number Resolution Logic Port properties validation","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":6,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/bus_number_resolution_test.dart"},"type":"group","time":6471}
{"test":{"id":299,"name":"Bus Number Resolution Logic Port properties validation should create port with busParam property","suiteID":266,"groupIDs":[296,297,298],"metadata":{"skip":false,"skipReason":null},"line":7,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/bus_number_resolution_test.dart"},"type":"testStart","time":6471}
{"testID":299,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6488}
{"test":{"id":300,"name":"Bus Number Resolution Logic Port properties validation should create port with polyphonic gate properties","suiteID":266,"groupIDs":[296,297,298],"metadata":{"skip":false,"skipReason":null},"line":22,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/bus_number_resolution_test.dart"},"type":"testStart","time":6488}
{"testID":300,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6490}
{"test":{"id":301,"name":"Bus Number Resolution Logic Port properties validation should create port with polyphonic CV properties","suiteID":266,"groupIDs":[296,297,298],"metadata":{"skip":false,"skipReason":null},"line":36,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/bus_number_resolution_test.dart"},"type":"testStart","time":6490}
{"testID":301,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6491}
{"group":{"id":302,"suiteID":266,"parentID":297,"name":"Bus Number Resolution Logic Bus number validation ranges","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":51,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/bus_number_resolution_test.dart"},"type":"group","time":6492}
{"test":{"id":303,"name":"Bus Number Resolution Logic Bus number validation ranges should validate input bus range (1-12)","suiteID":266,"groupIDs":[296,297,302],"metadata":{"skip":false,"skipReason":null},"line":52,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/bus_number_resolution_test.dart"},"type":"testStart","time":6492}
{"testID":303,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6494}
{"test":{"id":304,"name":"Bus Number Resolution Logic Bus number validation ranges should validate output bus range (13-20)","suiteID":266,"groupIDs":[296,297,302],"metadata":{"skip":false,"skipReason":null},"line":60,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/bus_number_resolution_test.dart"},"type":"testStart","time":6494}
{"testID":304,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6495}
{"test":{"id":305,"name":"Bus Number Resolution Logic Bus number validation ranges should identify invalid bus numbers","suiteID":266,"groupIDs":[296,297,302],"metadata":{"skip":false,"skipReason":null},"line":68,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/bus_number_resolution_test.dart"},"type":"testStart","time":6496}
{"testID":305,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6497}
{"group":{"id":306,"suiteID":266,"parentID":297,"name":"Bus Number Resolution Logic Bus resolution strategy documentation","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":80,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/bus_number_resolution_test.dart"},"type":"group","time":6497}
{"test":{"id":307,"name":"Bus Number Resolution Logic Bus resolution strategy documentation should document Strategy 1: busParam resolution","suiteID":266,"groupIDs":[296,297,306],"metadata":{"skip":false,"skipReason":null},"line":81,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/bus_number_resolution_test.dart"},"type":"testStart","time":6497}
{"testID":307,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6499}
{"test":{"id":308,"name":"Bus Number Resolution Logic Bus resolution strategy documentation should document Strategy 2: polyphonic fallback","suiteID":266,"groupIDs":[296,297,306],"metadata":{"skip":false,"skipReason":null},"line":100,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/bus_number_resolution_test.dart"},"type":"testStart","time":6499}
{"testID":308,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6501}
{"test":{"id":309,"name":"Bus Number Resolution Logic Bus resolution strategy documentation should document Strategy 3: no assignment","suiteID":266,"groupIDs":[296,297,306],"metadata":{"skip":false,"skipReason":null},"line":128,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/bus_number_resolution_test.dart"},"type":"testStart","time":6501}
{"testID":309,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6503}
{"group":{"id":310,"suiteID":266,"parentID":297,"name":"Bus Number Resolution Logic Edge cases documentation","metadata":{"skip":false,"skipReason":null},"testCount":4,"line":162,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/bus_number_resolution_test.dart"},"type":"group","time":6503}
{"test":{"id":311,"name":"Bus Number Resolution Logic Edge cases documentation should document bus 0 handling (None)","suiteID":266,"groupIDs":[296,297,310],"metadata":{"skip":false,"skipReason":null},"line":163,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/bus_number_resolution_test.dart"},"type":"testStart","time":6503}
{"testID":311,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6504}
{"test":{"id":312,"name":"Bus Number Resolution Logic Edge cases documentation should document missing parameter handling","suiteID":266,"groupIDs":[296,297,310],"metadata":{"skip":false,"skipReason":null},"line":169,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/bus_number_resolution_test.dart"},"type":"testStart","time":6505}
{"testID":312,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6506}
{"test":{"id":313,"name":"Bus Number Resolution Logic Edge cases documentation should document invalid parameter number handling","suiteID":266,"groupIDs":[296,297,310],"metadata":{"skip":false,"skipReason":null},"line":184,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/bus_number_resolution_test.dart"},"type":"testStart","time":6506}
{"testID":313,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6508}
{"test":{"id":314,"name":"Bus Number Resolution Logic Edge cases documentation should document precedence rules","suiteID":266,"groupIDs":[296,297,310],"metadata":{"skip":false,"skipReason":null},"line":192,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/bus_number_resolution_test.dart"},"type":"testStart","time":6508}
{"testID":292,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6509}
{"testID":314,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6509}
{"test":{"id":315,"name":"Universal Port Widget Integration Tests Position and State Management Port interaction states work across all node types","suiteID":229,"groupIDs":[262,263,291],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":270,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/universal_port_widget_integration_test.dart"},"type":"testStart","time":6509}
{"group":{"id":316,"suiteID":266,"parentID":297,"name":"Bus Number Resolution Logic Method implementation validation","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":212,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/bus_number_resolution_test.dart"},"type":"group","time":6509}
{"test":{"id":317,"name":"Bus Number Resolution Logic Method implementation validation should have correct method signature expectations","suiteID":266,"groupIDs":[296,297,316],"metadata":{"skip":false,"skipReason":null},"line":213,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/bus_number_resolution_test.dart"},"type":"testStart","time":6510}
{"testID":317,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6511}
{"suite":{"id":318,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/cubit/routing_editor_cubit_layout_test.dart"},"type":"suite","time":6516}
{"test":{"id":319,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/cubit/routing_editor_cubit_layout_test.dart","suiteID":318,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":6516}
{"testID":259,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":6521}
{"group":{"id":320,"suiteID":258,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":6,"line":null,"column":null,"url":null},"type":"group","time":6521}
{"group":{"id":321,"suiteID":258,"parentID":320,"name":"RoutingEditorCubit Connection Validation Tests","metadata":{"skip":false,"skipReason":null},"testCount":6,"line":16,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/routing_editor_cubit_validation_test.dart"},"type":"group","time":6521}
{"group":{"id":322,"suiteID":258,"parentID":321,"name":"RoutingEditorCubit Connection Validation Tests Connection Validation Integration","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":79,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/routing_editor_cubit_validation_test.dart"},"type":"group","time":6521}
{"test":{"id":323,"name":"RoutingEditorCubit Connection Validation Tests Connection Validation Integration should initialize with correct state when cubit provided","suiteID":258,"groupIDs":[320,321,322],"metadata":{"skip":false,"skipReason":null},"line":80,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/routing_editor_cubit_validation_test.dart"},"type":"testStart","time":6521}
{"testID":315,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6530}
{"group":{"id":324,"suiteID":229,"parentID":263,"name":"Universal Port Widget Integration Tests Large Scale Integration Tests","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":309,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/universal_port_widget_integration_test.dart"},"type":"group","time":6530}
{"test":{"id":325,"name":"Universal Port Widget Integration Tests Large Scale Integration Tests System handles large routing graphs efficiently","suiteID":229,"groupIDs":[262,263,324],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":310,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/universal_port_widget_integration_test.dart"},"type":"testStart","time":6530}
{"testID":323,"messageType":"print","message":"[RoutingEditor] Processing synchronized state with 0 slots","type":"print","time":6549}
{"testID":323,"messageType":"print","message":"[ConnectionDiscovery] Starting discovery for 0 algorithms","type":"print","time":6551}
{"testID":323,"messageType":"print","message":"[ConnectionDiscovery] Bus registry summary:","type":"print","time":6551}
{"testID":323,"messageType":"print","message":"[ConnectionDiscovery] Creating partial connections for unmatched ports","type":"print","time":6552}
{"testID":323,"messageType":"print","message":"[ConnectionDiscovery] Created 0 full connections","type":"print","time":6552}
{"testID":323,"messageType":"print","message":"[ConnectionDiscovery] Created 0 partial connections","type":"print","time":6552}
{"testID":323,"messageType":"print","message":"[ConnectionDiscovery] Total connections: 0","type":"print","time":6552}
{"testID":323,"messageType":"print","message":"[ConnectionDiscovery]   Hardware connections: 0","type":"print","time":6553}
{"testID":323,"messageType":"print","message":"[ConnectionDiscovery]   Algorithm-to-algorithm: 0","type":"print","time":6553}
{"testID":323,"messageType":"print","message":"[ConnectionDiscovery]   Partial connections: 0","type":"print","time":6553}
{"testID":323,"messageType":"print","message":"Initialized 3 default buses","type":"print","time":6556}
{"testID":323,"messageType":"print","message":"[RoutingEditor] Processing synchronized state with 0 slots","type":"print","time":6559}
{"testID":323,"messageType":"print","message":"[ConnectionDiscovery] Starting discovery for 0 algorithms","type":"print","time":6559}
{"testID":323,"messageType":"print","message":"[ConnectionDiscovery] Bus registry summary:","type":"print","time":6559}
{"testID":323,"messageType":"print","message":"[ConnectionDiscovery] Creating partial connections for unmatched ports","type":"print","time":6559}
{"testID":323,"messageType":"print","message":"[ConnectionDiscovery] Created 0 full connections","type":"print","time":6559}
{"testID":323,"messageType":"print","message":"[ConnectionDiscovery] Created 0 partial connections","type":"print","time":6559}
{"testID":323,"messageType":"print","message":"[ConnectionDiscovery] Total connections: 0","type":"print","time":6559}
{"testID":323,"messageType":"print","message":"[ConnectionDiscovery]   Hardware connections: 0","type":"print","time":6559}
{"testID":323,"messageType":"print","message":"[ConnectionDiscovery]   Algorithm-to-algorithm: 0","type":"print","time":6559}
{"testID":323,"messageType":"print","message":"[ConnectionDiscovery]   Partial connections: 0","type":"print","time":6559}
{"testID":323,"messageType":"print","message":"Initialized 3 default buses","type":"print","time":6560}
{"testID":323,"messageType":"print","message":"[RoutingEditorCubit] Error loading node positions: Binding has not yet been initialized.","type":"print","time":6565}
{"testID":323,"messageType":"print","message":"The \"instance\" getter on the ServicesBinding binding mixin is only available once that binding has been initialized.","type":"print","time":6565}
{"testID":323,"messageType":"print","message":"Typically, this is done by calling \"WidgetsFlutterBinding.ensureInitialized()\" or \"runApp()\" (the latter calls the former). Typically this call is done in the \"void main()\" method. The \"ensureInitialized\" method is idempotent; calling it multiple times is not harmful. After calling that method, the \"instance\" getter will return the binding.","type":"print","time":6565}
{"testID":323,"messageType":"print","message":"In a test, one can call \"TestWidgetsFlutterBinding.ensureInitialized()\" as the first line in the test's \"main()\" method to initialize the binding.","type":"print","time":6565}
{"testID":323,"messageType":"print","message":"If ServicesBinding is a custom binding mixin, there must also be a custom binding class, like WidgetsFlutterBinding, but that mixes in the selected binding, and that is the class that must be constructed before using the \"instance\" getter.","type":"print","time":6565}
{"testID":323,"messageType":"print","message":"Error loading persisted routing editor state: Binding has not yet been initialized.","type":"print","time":6566}
{"testID":323,"messageType":"print","message":"The \"instance\" getter on the ServicesBinding binding mixin is only available once that binding has been initialized.","type":"print","time":6566}
{"testID":323,"messageType":"print","message":"Typically, this is done by calling \"WidgetsFlutterBinding.ensureInitialized()\" or \"runApp()\" (the latter calls the former). Typically this call is done in the \"void main()\" method. The \"ensureInitialized\" method is idempotent; calling it multiple times is not harmful. After calling that method, the \"instance\" getter will return the binding.","type":"print","time":6566}
{"testID":323,"messageType":"print","message":"In a test, one can call \"TestWidgetsFlutterBinding.ensureInitialized()\" as the first line in the test's \"main()\" method to initialize the binding.","type":"print","time":6566}
{"testID":323,"messageType":"print","message":"If ServicesBinding is a custom binding mixin, there must also be a custom binding class, like WidgetsFlutterBinding, but that mixes in the selected binding, and that is the class that must be constructed before using the \"instance\" getter.","type":"print","time":6566}
{"testID":323,"messageType":"print","message":"[RoutingEditorCubit] Error loading node positions: Binding has not yet been initialized.","type":"print","time":6569}
{"testID":323,"messageType":"print","message":"The \"instance\" getter on the ServicesBinding binding mixin is only available once that binding has been initialized.","type":"print","time":6569}
{"testID":323,"messageType":"print","message":"Typically, this is done by calling \"WidgetsFlutterBinding.ensureInitialized()\" or \"runApp()\" (the latter calls the former). Typically this call is done in the \"void main()\" method. The \"ensureInitialized\" method is idempotent; calling it multiple times is not harmful. After calling that method, the \"instance\" getter will return the binding.","type":"print","time":6570}
{"testID":323,"messageType":"print","message":"In a test, one can call \"TestWidgetsFlutterBinding.ensureInitialized()\" as the first line in the test's \"main()\" method to initialize the binding.","type":"print","time":6570}
{"testID":323,"messageType":"print","message":"If ServicesBinding is a custom binding mixin, there must also be a custom binding class, like WidgetsFlutterBinding, but that mixes in the selected binding, and that is the class that must be constructed before using the \"instance\" getter.","type":"print","time":6570}
{"testID":323,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6584}
{"test":{"id":326,"name":"RoutingEditorCubit Connection Validation Tests Connection Validation Integration should handle synchronized state with slots","suiteID":258,"groupIDs":[320,321,322],"metadata":{"skip":false,"skipReason":null},"line":94,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/routing_editor_cubit_validation_test.dart"},"type":"testStart","time":6584}
{"testID":326,"messageType":"print","message":"[RoutingEditor] Processing synchronized state with 0 slots","type":"print","time":6587}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery] Starting discovery for 0 algorithms","type":"print","time":6587}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery] Bus registry summary:","type":"print","time":6587}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery] Creating partial connections for unmatched ports","type":"print","time":6587}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery] Created 0 full connections","type":"print","time":6587}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery] Created 0 partial connections","type":"print","time":6587}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery] Total connections: 0","type":"print","time":6587}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery]   Hardware connections: 0","type":"print","time":6587}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery]   Algorithm-to-algorithm: 0","type":"print","time":6587}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery]   Partial connections: 0","type":"print","time":6587}
{"testID":326,"messageType":"print","message":"Initialized 3 default buses","type":"print","time":6588}
{"testID":326,"messageType":"print","message":"[RoutingEditor] Processing synchronized state with 0 slots","type":"print","time":6588}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery] Starting discovery for 0 algorithms","type":"print","time":6588}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery] Bus registry summary:","type":"print","time":6588}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery] Creating partial connections for unmatched ports","type":"print","time":6588}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery] Created 0 full connections","type":"print","time":6588}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery] Created 0 partial connections","type":"print","time":6588}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery] Total connections: 0","type":"print","time":6589}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery]   Hardware connections: 0","type":"print","time":6589}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery]   Algorithm-to-algorithm: 0","type":"print","time":6589}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery]   Partial connections: 0","type":"print","time":6589}
{"testID":326,"messageType":"print","message":"Initialized 3 default buses","type":"print","time":6589}
{"testID":326,"messageType":"print","message":"[RoutingEditorCubit] Error loading node positions: Binding has not yet been initialized.","type":"print","time":6590}
{"testID":326,"messageType":"print","message":"The \"instance\" getter on the ServicesBinding binding mixin is only available once that binding has been initialized.","type":"print","time":6590}
{"testID":326,"messageType":"print","message":"Typically, this is done by calling \"WidgetsFlutterBinding.ensureInitialized()\" or \"runApp()\" (the latter calls the former). Typically this call is done in the \"void main()\" method. The \"ensureInitialized\" method is idempotent; calling it multiple times is not harmful. After calling that method, the \"instance\" getter will return the binding.","type":"print","time":6590}
{"testID":326,"messageType":"print","message":"In a test, one can call \"TestWidgetsFlutterBinding.ensureInitialized()\" as the first line in the test's \"main()\" method to initialize the binding.","type":"print","time":6590}
{"testID":326,"messageType":"print","message":"If ServicesBinding is a custom binding mixin, there must also be a custom binding class, like WidgetsFlutterBinding, but that mixes in the selected binding, and that is the class that must be constructed before using the \"instance\" getter.","type":"print","time":6590}
{"testID":326,"messageType":"print","message":"Error loading persisted routing editor state: Binding has not yet been initialized.","type":"print","time":6591}
{"testID":326,"messageType":"print","message":"The \"instance\" getter on the ServicesBinding binding mixin is only available once that binding has been initialized.","type":"print","time":6591}
{"testID":326,"messageType":"print","message":"Typically, this is done by calling \"WidgetsFlutterBinding.ensureInitialized()\" or \"runApp()\" (the latter calls the former). Typically this call is done in the \"void main()\" method. The \"ensureInitialized\" method is idempotent; calling it multiple times is not harmful. After calling that method, the \"instance\" getter will return the binding.","type":"print","time":6591}
{"testID":326,"messageType":"print","message":"In a test, one can call \"TestWidgetsFlutterBinding.ensureInitialized()\" as the first line in the test's \"main()\" method to initialize the binding.","type":"print","time":6591}
{"testID":326,"messageType":"print","message":"If ServicesBinding is a custom binding mixin, there must also be a custom binding class, like WidgetsFlutterBinding, but that mixes in the selected binding, and that is the class that must be constructed before using the \"instance\" getter.","type":"print","time":6591}
{"testID":325,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6593}
{"test":{"id":327,"name":"Universal Port Widget Integration Tests Large Scale Integration Tests Memory management during rapid node operations","suiteID":229,"groupIDs":[262,263,324],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":383,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/universal_port_widget_integration_test.dart"},"type":"testStart","time":6593}
{"testID":326,"messageType":"print","message":"[RoutingEditor] Processing synchronized state with 2 slots","type":"print","time":6593}
{"testID":326,"messageType":"print","message":"AlgorithmRouting: Scanning 1 parameters for mode parameters","type":"print","time":6594}
{"testID":326,"messageType":"print","message":"AlgorithmRouting: Found 0 mode parameters: ()","type":"print","time":6595}
{"testID":326,"messageType":"print","message":"MultiChannelAlgorithmRouting: Initialized with 1 channels, stereo: false, mix: false","type":"print","time":6599}
{"testID":326,"messageType":"print","message":"MultiChannelAlgorithmRouting: Generated 1 input ports (declared)","type":"print","time":6603}
{"testID":326,"messageType":"print","message":"MultiChannelAlgorithmRouting: No output ports declared - returning empty","type":"print","time":6604}
{"testID":326,"messageType":"print","message":"AlgorithmRouting: Scanning 1 parameters for mode parameters","type":"print","time":6605}
{"testID":326,"messageType":"print","message":"AlgorithmRouting: Checking output parameter Output Bus: unit=1, enums=null, isModeParam=false","type":"print","time":6605}
{"testID":326,"messageType":"print","message":"AlgorithmRouting: Found 0 mode parameters: ()","type":"print","time":6605}
{"testID":326,"messageType":"print","message":"MultiChannelAlgorithmRouting: Initialized with 1 channels, stereo: false, mix: false","type":"print","time":6605}
{"testID":326,"messageType":"print","message":"MultiChannelAlgorithmRouting: No input ports declared - returning empty","type":"print","time":6606}
{"testID":326,"messageType":"print","message":"MultiChannelAlgorithmRouting: Generated 1 output ports (declared)","type":"print","time":6606}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery] Starting discovery for 2 algorithms","type":"print","time":6606}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery] Processing algorithm 0 (algo_test-guid-1_1)","type":"print","time":6607}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery]   Input port algo_test-guid-1_1_param_0: bus=22, outputMode=null","type":"print","time":6607}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery] Processing algorithm 1 (algo_test-guid-2_1)","type":"print","time":6608}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery]   Output port algo_test-guid-2_1_param_0: bus=22, outputMode=null","type":"print","time":6608}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery] Bus registry summary:","type":"print","time":6608}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery]   Bus 22: 1 outputs, 1 inputs","type":"print","time":6608}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery] Creating partial connections for unmatched ports","type":"print","time":6610}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery] Bus 22 has 2 unmatched ports","type":"print","time":6610}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery]   Created partial connection: algo_test-guid-1_1_param_0 -> A2","type":"print","time":6614}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery]   Created partial connection: algo_test-guid-2_1_param_0 -> A2","type":"print","time":6614}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery] Created 0 full connections","type":"print","time":6614}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery] Created 2 partial connections","type":"print","time":6614}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery] Total connections: 2","type":"print","time":6614}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery]   Hardware connections: 0","type":"print","time":6615}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery]   Algorithm-to-algorithm: 0","type":"print","time":6615}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery]   Partial connections: 2","type":"print","time":6615}
{"testID":326,"messageType":"print","message":"Initialized 3 default buses","type":"print","time":6616}
{"testID":326,"messageType":"print","message":"[RoutingEditorCubit] Error loading node positions: Binding has not yet been initialized.","type":"print","time":6616}
{"testID":326,"messageType":"print","message":"The \"instance\" getter on the ServicesBinding binding mixin is only available once that binding has been initialized.","type":"print","time":6616}
{"testID":326,"messageType":"print","message":"Typically, this is done by calling \"WidgetsFlutterBinding.ensureInitialized()\" or \"runApp()\" (the latter calls the former). Typically this call is done in the \"void main()\" method. The \"ensureInitialized\" method is idempotent; calling it multiple times is not harmful. After calling that method, the \"instance\" getter will return the binding.","type":"print","time":6616}
{"testID":326,"messageType":"print","message":"In a test, one can call \"TestWidgetsFlutterBinding.ensureInitialized()\" as the first line in the test's \"main()\" method to initialize the binding.","type":"print","time":6616}
{"testID":326,"messageType":"print","message":"If ServicesBinding is a custom binding mixin, there must also be a custom binding class, like WidgetsFlutterBinding, but that mixes in the selected binding, and that is the class that must be constructed before using the \"instance\" getter.","type":"print","time":6617}
{"testID":326,"messageType":"print","message":"[RoutingEditor] Processing synchronized state with 2 slots","type":"print","time":6617}
{"testID":326,"messageType":"print","message":"AlgorithmRouting: Scanning 1 parameters for mode parameters","type":"print","time":6617}
{"testID":326,"messageType":"print","message":"AlgorithmRouting: Found 0 mode parameters: ()","type":"print","time":6617}
{"testID":326,"messageType":"print","message":"MultiChannelAlgorithmRouting: Initialized with 1 channels, stereo: false, mix: false","type":"print","time":6617}
{"testID":326,"messageType":"print","message":"MultiChannelAlgorithmRouting: Generated 1 input ports (declared)","type":"print","time":6618}
{"testID":326,"messageType":"print","message":"MultiChannelAlgorithmRouting: No output ports declared - returning empty","type":"print","time":6618}
{"testID":326,"messageType":"print","message":"AlgorithmRouting: Scanning 1 parameters for mode parameters","type":"print","time":6618}
{"testID":326,"messageType":"print","message":"AlgorithmRouting: Checking output parameter Output Bus: unit=1, enums=null, isModeParam=false","type":"print","time":6618}
{"testID":326,"messageType":"print","message":"AlgorithmRouting: Found 0 mode parameters: ()","type":"print","time":6618}
{"testID":326,"messageType":"print","message":"MultiChannelAlgorithmRouting: Initialized with 1 channels, stereo: false, mix: false","type":"print","time":6618}
{"testID":326,"messageType":"print","message":"MultiChannelAlgorithmRouting: No input ports declared - returning empty","type":"print","time":6619}
{"testID":326,"messageType":"print","message":"MultiChannelAlgorithmRouting: Generated 1 output ports (declared)","type":"print","time":6619}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery] Starting discovery for 2 algorithms","type":"print","time":6619}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery] Processing algorithm 0 (algo_test-guid-1_1)","type":"print","time":6619}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery]   Input port algo_test-guid-1_1_param_0: bus=22, outputMode=null","type":"print","time":6619}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery] Processing algorithm 1 (algo_test-guid-2_1)","type":"print","time":6619}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery]   Output port algo_test-guid-2_1_param_0: bus=22, outputMode=null","type":"print","time":6619}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery] Bus registry summary:","type":"print","time":6619}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery]   Bus 22: 1 outputs, 1 inputs","type":"print","time":6619}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery] Creating partial connections for unmatched ports","type":"print","time":6620}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery] Bus 22 has 2 unmatched ports","type":"print","time":6620}
{"testID":327,"messageType":"print","message":"\nWarning: A call to tap() with finder \"Found 1 widget with type \"PhysicalInputNode\" (ignoring all but first): [\n  PhysicalInputNode,\n]\" derived an Offset (Offset(63.0, 57.5)) that would not hit test on the specified widget.\nMaybe the widget is actually off-screen, or another widget is obscuring it, or the widget cannot receive pointer events.\nThe finder corresponds to this RenderBox: RenderSemanticsAnnotations#1118b relayoutBoundary=up2\nThe hit test result at that offset is: HitTestResult(HitTestEntry<HitTestTarget>#a22f6(TextSpan(debugLabel: (englishLike labelSmall 2021).merge((blackMountainView labelSmall).apply), inherit: false, color: Color(alpha: 1.0000, red: 0.1137, green: 0.1059, blue: 0.1255, colorSpace: ColorSpace.sRGB), family: Roboto, size: 11.0, weight: 500, letterSpacing: 0.5, baseline: alphabetic, height: 1.4x, leadingDistribution: even, decoration: Color(alpha: 1.0000, red: 0.1137, green: 0.1059, blue: 0.1255, colorSpace: ColorSpace.sRGB) TextDecoration.none, \"Output 1\")), RenderParagraph#6d2da@Offset(31.5, 8.0), RenderFlex#7bf2b@Offset(53.5, 14.0), RenderConstrainedBox#91337@Offset(53.5, 14.0), RenderPointerListener#dcfb0@Offset(53.5, 14.0), RenderSemanticsGestureHandler#09c8f@Offset(53.5, 14.0), RenderPadding#be6fd@Offset(53.5, 16.0), RenderFlex#975b0@Offset(53.5, 16.0), RenderPadding#94eca@Offset(61.5, 16.0), RenderFlex#e3c36@Offset(61.5, 56.0), RenderIntrinsicHeight#e0172@Offset(61.5, 56.0), RenderIntrinsicWidth#5ccb6@Offset(61.5, 56.0), RenderPadding#d7a02@Offset(63.0, 57.5), RenderDecoratedBox#4ab35@Offset(63.0, 57.5), RenderPointerListener#85adf@Offset(63.0, 57.5), RenderSemanticsGestureHandler#1f179@Offset(63.0, 57.5), RenderSemanticsAnnotations#cbeeb@Offset(63.0, 57.5), RenderStack#c2e3c@Offset(63.0, 57.5), RenderCustomMultiChildLayoutBox#f4996@Offset(63.0, 57.5), _RenderInkFeatures#b5b42@Offset(63.0, 57.5), RenderPhysicalModel#0eca2@Offset(63.0, 57.5), RenderSemanticsAnnotations#4e81d@Offset(63.0, 57.5), RenderRepaintBoundary#886a5@Offset(63.0, 57.5), RenderIgnorePointer#35ca5@Offset(63.0, 57.5), _RenderSnapshotWidget#e093b@Offset(63.0, 57.5), _RenderSnapshotWidget#608f1@Offset(63.0, 57.5), _RenderSnapshotWidget#3888f@Offset(63.0, 57.5), _RenderSnapshotWidget#77342@Offset(63.0, 57.5), RenderRepaintBoundary#a5215@Offset(63.0, 57.5), RenderSemanticsAnnotations#169e9@Offset(63.0, 57.5), RenderOffstage#abf90@Offset(63.0, 57.5), RenderSemanticsAnnotations#47bd4@Offset(63.0, 57.5), _RenderTheater#c2e76@Offset(63.0, 57.5), RenderAbsorbPointer#c9150@Offset(63.0, 57.5), RenderPointerListener#d422c@Offset(63.0, 57.5), RenderSemanticsAnnotations#ffacd@Offset(63.0, 57.5), RenderCustomPaint#774d4@Offset(63.0, 57.5), RenderSemanticsAnnotations#0b90f@Offset(63.0, 57.5), RenderSemanticsAnnotations#dcd04@Offset(63.0, 57.5), RenderTapRegionSurface#cbf87@Offset(63.0, 57.5), RenderSemanticsAnnotations#43d68@Offset(63.0, 57.5), RenderSemanticsAnnotations#a727c@Offset(63.0, 57.5), RenderSemanticsAnnotations#b1f85@Offset(63.0, 57.5), HitTestEntry<HitTestTarget>#393b2(_ReusableRenderView#813f5), HitTestEntry<HitTestTarget>#98b5b(<AutomatedTestWidgetsFlutterBinding>))\n#0      WidgetController._getElementPoint (package:flutter_test/src/controller.dart:2077:25)\n#1      WidgetController.getCenter (package:flutter_test/src/controller.dart:1861:12)\n#2      WidgetController.tap (package:flutter_test/src/controller.dart:1041:7)\n#3      main.<anonymous closure>.<anonymous closure>.<anonymous closure> (file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/universal_port_widget_integration_test.dart:412:26)\n<asynchronous suspension>\n#4      testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:192:15)\n<asynchronous suspension>\n#5      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1059:5)\n<asynchronous suspension>\n#6      StackZoneSpecification._registerCallback.<anonymous closure> (package:stack_trace/src/stack_zone_specification.dart:114:42)\n<asynchronous suspension>\nTo silence this warning, pass \"warnIfMissed: false\" to \"tap()\".\nTo make this warning fatal, set WidgetController.hitTestWarningShouldBeFatal to true.\n","type":"print","time":6620}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery]   Created partial connection: algo_test-guid-1_1_param_0 -> A2","type":"print","time":6620}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery]   Created partial connection: algo_test-guid-2_1_param_0 -> A2","type":"print","time":6620}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery] Created 0 full connections","type":"print","time":6620}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery] Created 2 partial connections","type":"print","time":6620}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery] Total connections: 2","type":"print","time":6620}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery]   Hardware connections: 0","type":"print","time":6620}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery]   Algorithm-to-algorithm: 0","type":"print","time":6620}
{"testID":326,"messageType":"print","message":"[ConnectionDiscovery]   Partial connections: 2","type":"print","time":6620}
{"testID":326,"messageType":"print","message":"Initialized 3 default buses","type":"print","time":6622}
{"testID":326,"messageType":"print","message":"[RoutingEditorCubit] Error loading node positions: Binding has not yet been initialized.","type":"print","time":6622}
{"testID":326,"messageType":"print","message":"The \"instance\" getter on the ServicesBinding binding mixin is only available once that binding has been initialized.","type":"print","time":6622}
{"testID":326,"messageType":"print","message":"Typically, this is done by calling \"WidgetsFlutterBinding.ensureInitialized()\" or \"runApp()\" (the latter calls the former). Typically this call is done in the \"void main()\" method. The \"ensureInitialized\" method is idempotent; calling it multiple times is not harmful. After calling that method, the \"instance\" getter will return the binding.","type":"print","time":6622}
{"testID":326,"messageType":"print","message":"In a test, one can call \"TestWidgetsFlutterBinding.ensureInitialized()\" as the first line in the test's \"main()\" method to initialize the binding.","type":"print","time":6622}
{"testID":326,"messageType":"print","message":"If ServicesBinding is a custom binding mixin, there must also be a custom binding class, like WidgetsFlutterBinding, but that mixes in the selected binding, and that is the class that must be constructed before using the \"instance\" getter.","type":"print","time":6622}
{"testID":327,"messageType":"print","message":"\nWarning: A call to tap() with finder \"Found 1 widget with type \"PhysicalInputNode\" (ignoring all but first): [\n  PhysicalInputNode,\n]\" derived an Offset (Offset(63.0, 57.5)) that would not hit test on the specified widget.\nMaybe the widget is actually off-screen, or another widget is obscuring it, or the widget cannot receive pointer events.\nThe finder corresponds to this RenderBox: RenderSemanticsAnnotations#432c9 relayoutBoundary=up2\nThe hit test result at that offset is: HitTestResult(HitTestEntry<HitTestTarget>#b75ba(TextSpan(debugLabel: (englishLike labelSmall 2021).merge((blackMountainView labelSmall).apply), inherit: false, color: Color(alpha: 1.0000, red: 0.1137, green: 0.1059, blue: 0.1255, colorSpace: ColorSpace.sRGB), family: Roboto, size: 11.0, weight: 500, letterSpacing: 0.5, baseline: alphabetic, height: 1.4x, leadingDistribution: even, decoration: Color(alpha: 1.0000, red: 0.1137, green: 0.1059, blue: 0.1255, colorSpace: ColorSpace.sRGB) TextDecoration.none, \"Output 1\")), RenderParagraph#1c642@Offset(31.5, 8.0), RenderFlex#22506@Offset(53.5, 14.0), RenderConstrainedBox#c92ff@Offset(53.5, 14.0), RenderPointerListener#3f3fb@Offset(53.5, 14.0), RenderSemanticsGestureHandler#4b96a@Offset(53.5, 14.0), RenderPadding#874a6@Offset(53.5, 16.0), RenderFlex#82722@Offset(53.5, 16.0), RenderPadding#02b1b@Offset(61.5, 16.0), RenderFlex#27347@Offset(61.5, 56.0), RenderIntrinsicHeight#14002@Offset(61.5, 56.0), RenderIntrinsicWidth#b56b4@Offset(61.5, 56.0), RenderPadding#e5e6b@Offset(63.0, 57.5), RenderDecoratedBox#93460@Offset(63.0, 57.5), RenderPointerListener#4d12e@Offset(63.0, 57.5), RenderSemanticsGestureHandler#f85b4@Offset(63.0, 57.5), RenderSemanticsAnnotations#da929@Offset(63.0, 57.5), RenderStack#c9744@Offset(63.0, 57.5), RenderCustomMultiChildLayoutBox#07b3e@Offset(63.0, 57.5), _RenderInkFeatures#11021@Offset(63.0, 57.5), RenderPhysicalModel#28d85@Offset(63.0, 57.5), RenderSemanticsAnnotations#4e81d@Offset(63.0, 57.5), RenderRepaintBoundary#886a5@Offset(63.0, 57.5), RenderIgnorePointer#35ca5@Offset(63.0, 57.5), _RenderSnapshotWidget#e093b@Offset(63.0, 57.5), _RenderSnapshotWidget#608f1@Offset(63.0, 57.5), _RenderSnapshotWidget#3888f@Offset(63.0, 57.5), _RenderSnapshotWidget#77342@Offset(63.0, 57.5), RenderRepaintBoundary#a5215@Offset(63.0, 57.5), RenderSemanticsAnnotations#169e9@Offset(63.0, 57.5), RenderOffstage#abf90@Offset(63.0, 57.5), RenderSemanticsAnnotations#47bd4@Offset(63.0, 57.5), _RenderTheater#c2e76@Offset(63.0, 57.5), RenderAbsorbPointer#c9150@Offset(63.0, 57.5), RenderPointerListener#d422c@Offset(63.0, 57.5), RenderSemanticsAnnotations#ffacd@Offset(63.0, 57.5), RenderCustomPaint#774d4@Offset(63.0, 57.5), RenderSemanticsAnnotations#0b90f@Offset(63.0, 57.5), RenderSemanticsAnnotations#dcd04@Offset(63.0, 57.5), RenderTapRegionSurface#cbf87@Offset(63.0, 57.5), RenderSemanticsAnnotations#43d68@Offset(63.0, 57.5), RenderSemanticsAnnotations#a727c@Offset(63.0, 57.5), RenderSemanticsAnnotations#b1f85@Offset(63.0, 57.5), HitTestEntry<HitTestTarget>#6cd9a(_ReusableRenderView#813f5), HitTestEntry<HitTestTarget>#17ac1(<AutomatedTestWidgetsFlutterBinding>))\n#0      WidgetController._getElementPoint (package:flutter_test/src/controller.dart:2077:25)\n#1      WidgetController.getCenter (package:flutter_test/src/controller.dart:1861:12)\n#2      WidgetController.tap (package:flutter_test/src/controller.dart:1041:7)\n#3      main.<anonymous closure>.<anonymous closure>.<anonymous closure> (file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/universal_port_widget_integration_test.dart:412:26)\n<asynchronous suspension>\n#4      testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:192:15)\n<asynchronous suspension>\n#5      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1059:5)\n<asynchronous suspension>\n#6      StackZoneSpecification._registerCallback.<anonymous closure> (package:stack_trace/src/stack_zone_specification.dart:114:42)\n<asynchronous suspension>\nTo silence this warning, pass \"warnIfMissed: false\" to \"tap()\".\nTo make this warning fatal, set WidgetController.hitTestWarningShouldBeFatal to true.\n","type":"print","time":6648}
{"testID":327,"messageType":"print","message":"\nWarning: A call to tap() with finder \"Found 1 widget with type \"PhysicalInputNode\" (ignoring all but first): [\n  PhysicalInputNode,\n]\" derived an Offset (Offset(63.0, 57.5)) that would not hit test on the specified widget.\nMaybe the widget is actually off-screen, or another widget is obscuring it, or the widget cannot receive pointer events.\nThe finder corresponds to this RenderBox: RenderSemanticsAnnotations#60455 relayoutBoundary=up2\nThe hit test result at that offset is: HitTestResult(HitTestEntry<HitTestTarget>#34054(TextSpan(debugLabel: (englishLike labelSmall 2021).merge((blackMountainView labelSmall).apply), inherit: false, color: Color(alpha: 1.0000, red: 0.1137, green: 0.1059, blue: 0.1255, colorSpace: ColorSpace.sRGB), family: Roboto, size: 11.0, weight: 500, letterSpacing: 0.5, baseline: alphabetic, height: 1.4x, leadingDistribution: even, decoration: Color(alpha: 1.0000, red: 0.1137, green: 0.1059, blue: 0.1255, colorSpace: ColorSpace.sRGB) TextDecoration.none, \"Output 1\")), RenderParagraph#9e56b@Offset(31.5, 8.0), RenderFlex#4d1b2@Offset(53.5, 14.0), RenderConstrainedBox#6312d@Offset(53.5, 14.0), RenderPointerListener#0abd5@Offset(53.5, 14.0), RenderSemanticsGestureHandler#58ee8@Offset(53.5, 14.0), RenderPadding#54227@Offset(53.5, 16.0), RenderFlex#1c056@Offset(53.5, 16.0), RenderPadding#249b6@Offset(61.5, 16.0), RenderFlex#e92b6@Offset(61.5, 56.0), RenderIntrinsicHeight#0d84f@Offset(61.5, 56.0), RenderIntrinsicWidth#4bf0c@Offset(61.5, 56.0), RenderPadding#1563e@Offset(63.0, 57.5), RenderDecoratedBox#92077@Offset(63.0, 57.5), RenderPointerListener#4eea4@Offset(63.0, 57.5), RenderSemanticsGestureHandler#b2175@Offset(63.0, 57.5), RenderSemanticsAnnotations#5200c@Offset(63.0, 57.5), RenderStack#9b620@Offset(63.0, 57.5), RenderCustomMultiChildLayoutBox#a76e6@Offset(63.0, 57.5), _RenderInkFeatures#5f2f9@Offset(63.0, 57.5), RenderPhysicalModel#a7acd@Offset(63.0, 57.5), RenderSemanticsAnnotations#4e81d@Offset(63.0, 57.5), RenderRepaintBoundary#886a5@Offset(63.0, 57.5), RenderIgnorePointer#35ca5@Offset(63.0, 57.5), _RenderSnapshotWidget#e093b@Offset(63.0, 57.5), _RenderSnapshotWidget#608f1@Offset(63.0, 57.5), _RenderSnapshotWidget#3888f@Offset(63.0, 57.5), _RenderSnapshotWidget#77342@Offset(63.0, 57.5), RenderRepaintBoundary#a5215@Offset(63.0, 57.5), RenderSemanticsAnnotations#169e9@Offset(63.0, 57.5), RenderOffstage#abf90@Offset(63.0, 57.5), RenderSemanticsAnnotations#47bd4@Offset(63.0, 57.5), _RenderTheater#c2e76@Offset(63.0, 57.5), RenderAbsorbPointer#c9150@Offset(63.0, 57.5), RenderPointerListener#d422c@Offset(63.0, 57.5), RenderSemanticsAnnotations#ffacd@Offset(63.0, 57.5), RenderCustomPaint#774d4@Offset(63.0, 57.5), RenderSemanticsAnnotations#0b90f@Offset(63.0, 57.5), RenderSemanticsAnnotations#dcd04@Offset(63.0, 57.5), RenderTapRegionSurface#cbf87@Offset(63.0, 57.5), RenderSemanticsAnnotations#43d68@Offset(63.0, 57.5), RenderSemanticsAnnotations#a727c@Offset(63.0, 57.5), RenderSemanticsAnnotations#b1f85@Offset(63.0, 57.5), HitTestEntry<HitTestTarget>#3ef3a(_ReusableRenderView#813f5), HitTestEntry<HitTestTarget>#572dd(<AutomatedTestWidgetsFlutterBinding>))\n#0      WidgetController._getElementPoint (package:flutter_test/src/controller.dart:2077:25)\n#1      WidgetController.getCenter (package:flutter_test/src/controller.dart:1861:12)\n#2      WidgetController.tap (package:flutter_test/src/controller.dart:1041:7)\n#3      main.<anonymous closure>.<anonymous closure>.<anonymous closure> (file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/universal_port_widget_integration_test.dart:412:26)\n<asynchronous suspension>\n#4      testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:192:15)\n<asynchronous suspension>\n#5      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1059:5)\n<asynchronous suspension>\n#6      StackZoneSpecification._registerCallback.<anonymous closure> (package:stack_trace/src/stack_zone_specification.dart:114:42)\n<asynchronous suspension>\nTo silence this warning, pass \"warnIfMissed: false\" to \"tap()\".\nTo make this warning fatal, set WidgetController.hitTestWarningShouldBeFatal to true.\n","type":"print","time":6662}
{"testID":327,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6669}
{"group":{"id":328,"suiteID":229,"parentID":263,"name":"Universal Port Widget Integration Tests Widget Lifecycle and State Persistence","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":427,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/universal_port_widget_integration_test.dart"},"type":"group","time":6670}
{"test":{"id":329,"name":"Universal Port Widget Integration Tests Widget Lifecycle and State Persistence Widget state persists through rebuilds","suiteID":229,"groupIDs":[262,263,328],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":428,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/universal_port_widget_integration_test.dart"},"type":"testStart","time":6670}
{"testID":326,"error":"Expected: true\n  Actual: <false>\n","stackTrace":"package:matcher                                             expect\npackage:flutter_test/src/widget_tester.dart 473:18          expect\ntest/cubit/routing_editor_cubit_validation_test.dart 189:9  main.<fn>.<fn>.<fn>\n","isFailure":true,"type":"error","time":6680}
{"testID":326,"result":"failure","skipped":false,"hidden":false,"type":"testDone","time":6680}
{"test":{"id":330,"name":"RoutingEditorCubit Connection Validation Tests Connection Validation Integration should handle empty slots gracefully","suiteID":258,"groupIDs":[320,321,322],"metadata":{"skip":false,"skipReason":null},"line":204,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/routing_editor_cubit_validation_test.dart"},"type":"testStart","time":6681}
{"testID":329,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6701}
{"suite":{"id":331,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/cubit/routing_editor_integration_test.dart"},"type":"suite","time":6708}
{"test":{"id":332,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/cubit/routing_editor_integration_test.dart","suiteID":331,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":6708}
{"testID":330,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6737}
{"group":{"id":333,"suiteID":258,"parentID":321,"name":"RoutingEditorCubit Connection Validation Tests Connection Highlighting Integration","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":238,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/routing_editor_cubit_validation_test.dart"},"type":"group","time":6737}
{"test":{"id":334,"name":"RoutingEditorCubit Connection Validation Tests Connection Highlighting Integration should correctly identify backward edge connections","suiteID":258,"groupIDs":[320,321,333],"metadata":{"skip":false,"skipReason":null},"line":239,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/routing_editor_cubit_validation_test.dart"},"type":"testStart","time":6737}
{"testID":334,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6793}
{"group":{"id":335,"suiteID":258,"parentID":321,"name":"RoutingEditorCubit Connection Validation Tests Cubit Initialization","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":336,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/routing_editor_cubit_validation_test.dart"},"type":"group","time":6793}
{"test":{"id":336,"name":"RoutingEditorCubit Connection Validation Tests Cubit Initialization should initialize correctly without cubit","suiteID":258,"groupIDs":[320,321,335],"metadata":{"skip":false,"skipReason":null},"line":337,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/routing_editor_cubit_validation_test.dart"},"type":"testStart","time":6793}
{"testID":336,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6796}
{"test":{"id":337,"name":"RoutingEditorCubit Connection Validation Tests Cubit Initialization should handle cubit state changes","suiteID":258,"groupIDs":[320,321,335],"metadata":{"skip":false,"skipReason":null},"line":346,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/routing_editor_cubit_validation_test.dart"},"type":"testStart","time":6796}
{"testID":337,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6801}
{"suite":{"id":338,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/core/platform/platform_interaction_service_test.dart"},"type":"suite","time":6807}
{"test":{"id":339,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/core/platform/platform_interaction_service_test.dart","suiteID":338,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":6807}
{"testID":295,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6901}
{"test":{"id":340,"name":"Layout Algorithm Button UI Integration hides layout algorithm button when routing editor not loaded","suiteID":250,"groupIDs":[293,294],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":76,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/layout_algorithm_button_test.dart"},"type":"testStart","time":6901}
{"testID":340,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":6919}
{"test":{"id":341,"name":"Layout Algorithm Button UI Integration calls applyLayoutAlgorithm when button is tapped","suiteID":250,"groupIDs":[293,294],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":89,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/layout_algorithm_button_test.dart"},"type":"testStart","time":6919}
{"testID":341,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7000}
{"test":{"id":342,"name":"Layout Algorithm Button UI Integration shows loading indicator when layout calculation is in progress","suiteID":250,"groupIDs":[293,294],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":120,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/layout_algorithm_button_test.dart"},"type":"testStart","time":7001}
{"testID":342,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7025}
{"test":{"id":343,"name":"Layout Algorithm Button UI Integration button is positioned beside refresh routing button","suiteID":250,"groupIDs":[293,294],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":146,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/layout_algorithm_button_test.dart"},"type":"testStart","time":7025}
{"testID":343,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7058}
{"test":{"id":344,"name":"Layout Algorithm Button UI Integration shows appropriate tooltip text","suiteID":250,"groupIDs":[293,294],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":192,"root_column":5,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/ui/widgets/routing/layout_algorithm_button_test.dart"},"type":"testStart","time":7058}
{"testID":287,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":7062}
{"group":{"id":345,"suiteID":286,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":13,"line":null,"column":null,"url":null},"type":"group","time":7062}
{"group":{"id":346,"suiteID":286,"parentID":345,"name":"PresetBrowserCubit","metadata":{"skip":false,"skipReason":null},"testCount":13,"line":28,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/preset_browser_cubit_test.dart"},"type":"group","time":7062}
{"test":{"id":347,"name":"PresetBrowserCubit initial state is correct","suiteID":286,"groupIDs":[345,346],"metadata":{"skip":false,"skipReason":null},"line":29,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/preset_browser_cubit_test.dart"},"type":"testStart","time":7062}
{"testID":347,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7077}
{"group":{"id":348,"suiteID":286,"parentID":346,"name":"PresetBrowserCubit loadRootDirectory","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":33,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/preset_browser_cubit_test.dart"},"type":"group","time":7077}
{"test":{"id":349,"name":"PresetBrowserCubit loadRootDirectory emits loading then loaded with presets directory when it exists","suiteID":286,"groupIDs":[345,346,348],"metadata":{"skip":false,"skipReason":null},"line":153,"column":8,"url":"package:bloc_test/src/bloc_test.dart","root_line":34,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/preset_browser_cubit_test.dart"},"type":"testStart","time":7077}
{"testID":349,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7093}
{"test":{"id":350,"name":"PresetBrowserCubit loadRootDirectory emits loading then loaded with root directory when presets does not exist","suiteID":286,"groupIDs":[345,346,348],"metadata":{"skip":false,"skipReason":null},"line":153,"column":8,"url":"package:bloc_test/src/bloc_test.dart","root_line":75,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/preset_browser_cubit_test.dart"},"type":"testStart","time":7093}
{"testID":350,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7097}
{"test":{"id":351,"name":"PresetBrowserCubit loadRootDirectory emits error when directory listing fails","suiteID":286,"groupIDs":[345,346,348],"metadata":{"skip":false,"skipReason":null},"line":153,"column":8,"url":"package:bloc_test/src/bloc_test.dart","root_line":110,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/preset_browser_cubit_test.dart"},"type":"testStart","time":7097}
{"testID":351,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7103}
{"group":{"id":352,"suiteID":286,"parentID":346,"name":"PresetBrowserCubit selectDirectory","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":131,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/preset_browser_cubit_test.dart"},"type":"group","time":7103}
{"test":{"id":353,"name":"PresetBrowserCubit selectDirectory loads directory contents and updates panel states","suiteID":286,"groupIDs":[345,346,352],"metadata":{"skip":false,"skipReason":null},"line":153,"column":8,"url":"package:bloc_test/src/bloc_test.dart","root_line":140,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/preset_browser_cubit_test.dart"},"type":"testStart","time":7104}
{"testID":353,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7108}
{"group":{"id":354,"suiteID":286,"parentID":346,"name":"PresetBrowserCubit toggleSortMode","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":191,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/preset_browser_cubit_test.dart"},"type":"group","time":7108}
{"test":{"id":355,"name":"PresetBrowserCubit toggleSortMode toggles between alphabetic and date sorting","suiteID":286,"groupIDs":[345,346,354],"metadata":{"skip":false,"skipReason":null},"line":153,"column":8,"url":"package:bloc_test/src/bloc_test.dart","root_line":192,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/preset_browser_cubit_test.dart"},"type":"testStart","time":7108}
{"testID":355,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7111}
{"group":{"id":356,"suiteID":286,"parentID":346,"name":"PresetBrowserCubit navigateBack","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":220,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/preset_browser_cubit_test.dart"},"type":"group","time":7111}
{"test":{"id":357,"name":"PresetBrowserCubit navigateBack navigates to previous directory in history","suiteID":286,"groupIDs":[345,346,356],"metadata":{"skip":false,"skipReason":null},"line":153,"column":8,"url":"package:bloc_test/src/bloc_test.dart","root_line":221,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/preset_browser_cubit_test.dart"},"type":"testStart","time":7111}
{"testID":357,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7114}
{"group":{"id":358,"suiteID":286,"parentID":346,"name":"PresetBrowserCubit getSelectedPath","metadata":{"skip":false,"skipReason":null},"testCount":4,"line":255,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/preset_browser_cubit_test.dart"},"type":"group","time":7115}
{"test":{"id":359,"name":"PresetBrowserCubit getSelectedPath returns full path when file is selected in right panel","suiteID":286,"groupIDs":[345,346,358],"metadata":{"skip":false,"skipReason":null},"line":256,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/preset_browser_cubit_test.dart"},"type":"testStart","time":7115}
{"testID":344,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7115}
{"testID":359,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7117}
{"test":{"id":360,"name":"PresetBrowserCubit getSelectedPath returns full path when file is selected in center panel","suiteID":286,"groupIDs":[345,346,358],"metadata":{"skip":false,"skipReason":null},"line":293,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/preset_browser_cubit_test.dart"},"type":"testStart","time":7117}
{"testID":360,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7119}
{"test":{"id":361,"name":"PresetBrowserCubit getSelectedPath returns full path when file is selected in left panel","suiteID":286,"groupIDs":[345,346,358],"metadata":{"skip":false,"skipReason":null},"line":324,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/preset_browser_cubit_test.dart"},"type":"testStart","time":7119}
{"suite":{"id":362,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/core/platform/connection_deletion_state_test.dart"},"type":"suite","time":7134}
{"test":{"id":363,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/core/platform/connection_deletion_state_test.dart","suiteID":362,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":7134}
{"testID":361,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7134}
{"test":{"id":364,"name":"PresetBrowserCubit getSelectedPath returns empty string when no JSON file is selected","suiteID":286,"groupIDs":[345,346,358],"metadata":{"skip":false,"skipReason":null},"line":349,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/preset_browser_cubit_test.dart"},"type":"testStart","time":7137}
{"testID":364,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7139}
{"group":{"id":365,"suiteID":286,"parentID":346,"name":"PresetBrowserCubit preset history","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":375,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/preset_browser_cubit_test.dart"},"type":"group","time":7139}
{"test":{"id":366,"name":"PresetBrowserCubit preset history loadRecentPresets loads from SharedPreferences","suiteID":286,"groupIDs":[345,346,365],"metadata":{"skip":false,"skipReason":null},"line":376,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/preset_browser_cubit_test.dart"},"type":"testStart","time":7139}
{"testID":366,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7142}
{"test":{"id":367,"name":"PresetBrowserCubit preset history addToHistory saves to SharedPreferences","suiteID":286,"groupIDs":[345,346,365],"metadata":{"skip":false,"skipReason":null},"line":386,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/preset_browser_cubit_test.dart"},"type":"testStart","time":7142}
{"testID":367,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7146}
{"suite":{"id":368,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/core/routing/no_metadata_access_test.dart"},"type":"suite","time":7151}
{"test":{"id":369,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/core/routing/no_metadata_access_test.dart","suiteID":368,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":7151}
{"testID":319,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":7262}
{"group":{"id":370,"suiteID":318,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":8,"line":null,"column":null,"url":null},"type":"group","time":7262}
{"group":{"id":371,"suiteID":318,"parentID":370,"name":"RoutingEditorCubit Layout Integration","metadata":{"skip":false,"skipReason":null},"testCount":8,"line":19,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/routing_editor_cubit_layout_test.dart"},"type":"group","time":7262}
{"group":{"id":372,"suiteID":318,"parentID":371,"name":"RoutingEditorCubit Layout Integration applyLayoutAlgorithm","metadata":{"skip":false,"skipReason":null},"testCount":4,"line":49,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/routing_editor_cubit_layout_test.dart"},"type":"group","time":7262}
{"test":{"id":373,"name":"RoutingEditorCubit Layout Integration applyLayoutAlgorithm does nothing when routing editor not loaded","suiteID":318,"groupIDs":[370,371,372],"metadata":{"skip":false,"skipReason":null},"line":50,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/routing_editor_cubit_layout_test.dart"},"type":"testStart","time":7262}
{"testID":373,"messageType":"print","message":"[RoutingEditorCubit] Layout algorithm service injected","type":"print","time":7285}
{"testID":373,"messageType":"print","message":"No persisted routing editor state found","type":"print","time":7286}
{"testID":373,"messageType":"print","message":"Cannot apply layout algorithm - routing editor not loaded","type":"print","time":7289}
{"testID":373,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7296}
{"test":{"id":374,"name":"RoutingEditorCubit Layout Integration applyLayoutAlgorithm applies layout algorithm when routing editor is loaded","suiteID":318,"groupIDs":[370,371,372],"metadata":{"skip":false,"skipReason":null},"line":70,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/routing_editor_cubit_layout_test.dart"},"type":"testStart","time":7296}
{"testID":374,"messageType":"print","message":"[RoutingEditorCubit] Layout algorithm service injected","type":"print","time":7298}
{"testID":374,"messageType":"print","message":"No persisted routing editor state found","type":"print","time":7298}
{"testID":374,"messageType":"print","message":"[RoutingEditorCubit] Applying layout algorithm","type":"print","time":7300}
{"testID":374,"messageType":"print","message":"[RoutingEditorCubit] Layout algorithm applied successfully","type":"print","time":7304}
{"testID":374,"messageType":"print","message":"  Updated positions: 3","type":"print","time":7304}
{"testID":374,"messageType":"print","message":"  Overlap reduction: 0.50","type":"print","time":7305}
{"testID":374,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7308}
{"test":{"id":375,"name":"RoutingEditorCubit Layout Integration applyLayoutAlgorithm handles layout calculation errors gracefully","suiteID":318,"groupIDs":[370,371,372],"metadata":{"skip":false,"skipReason":null},"line":190,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/routing_editor_cubit_layout_test.dart"},"type":"testStart","time":7309}
{"testID":375,"messageType":"print","message":"[RoutingEditorCubit] Layout algorithm service injected","type":"print","time":7310}
{"testID":375,"messageType":"print","message":"No persisted routing editor state found","type":"print","time":7310}
{"testID":375,"messageType":"print","message":"[RoutingEditorCubit] Applying layout algorithm","type":"print","time":7311}
{"testID":375,"messageType":"print","message":"[RoutingEditorCubit] Error applying layout algorithm: Exception: Layout calculation failed","type":"print","time":7311}
{"testID":375,"messageType":"print","message":"Stack trace: #0      When.thenThrow.<anonymous closure> (package:mocktail/src/mocktail.dart:249:7)","type":"print","time":7312}
{"testID":375,"messageType":"print","message":"#1      Mock.noSuchMethod (package:mocktail/src/mocktail.dart:131:37)","type":"print","time":7312}
{"testID":375,"messageType":"print","message":"#2      MockNodeLayoutAlgorithm.calculateLayout (file:///Users/nealsanche/nosuch/nt_helper/test/cubit/routing_editor_cubit_layout_test.dart:16:7)","type":"print","time":7313}
{"testID":375,"messageType":"print","message":"#3      RoutingEditorCubit.applyLayoutAlgorithm (package:nt_helper/cubit/routing_editor_cubit.dart:2105:46)","type":"print","time":7313}
{"testID":375,"messageType":"print","message":"#4      main.<anonymous closure>.<anonymous closure>.<anonymous closure> (file:///Users/nealsanche/nosuch/nt_helper/test/cubit/routing_editor_cubit_layout_test.dart:218:21)","type":"print","time":7313}
{"testID":375,"messageType":"print","message":"#5      Declarer.test.<anonymous closure>.<anonymous closure> (package:test_api/src/backend/declarer.dart:242:19)","type":"print","time":7313}
{"testID":375,"messageType":"print","message":"<asynchronous suspension>","type":"print","time":7313}
{"testID":375,"messageType":"print","message":"#6      Declarer.test.<anonymous closure> (package:test_api/src/backend/declarer.dart:240:7)","type":"print","time":7313}
{"testID":375,"messageType":"print","message":"<asynchronous suspension>","type":"print","time":7313}
{"testID":375,"messageType":"print","message":"#7      Invoker._waitForOutstandingCallbacks.<anonymous closure> (package:test_api/src/backend/invoker.dart:282:9)","type":"print","time":7313}
{"testID":375,"messageType":"print","message":"<asynchronous suspension>","type":"print","time":7313}
{"testID":375,"messageType":"print","message":"","type":"print","time":7314}
{"testID":375,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7314}
{"test":{"id":376,"name":"RoutingEditorCubit Layout Integration applyLayoutAlgorithm applies layout and updates state correctly","suiteID":318,"groupIDs":[370,371,372],"metadata":{"skip":false,"skipReason":null},"line":226,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/routing_editor_cubit_layout_test.dart"},"type":"testStart","time":7315}
{"testID":376,"messageType":"print","message":"[RoutingEditorCubit] Layout algorithm service injected","type":"print","time":7316}
{"testID":376,"messageType":"print","message":"No persisted routing editor state found","type":"print","time":7316}
{"testID":376,"messageType":"print","message":"[RoutingEditorCubit] Applying layout algorithm","type":"print","time":7317}
{"testID":376,"messageType":"print","message":"[RoutingEditorCubit] Layout algorithm applied successfully","type":"print","time":7317}
{"testID":376,"messageType":"print","message":"  Updated positions: 1","type":"print","time":7317}
{"testID":376,"messageType":"print","message":"  Overlap reduction: 0.00","type":"print","time":7317}
{"testID":376,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7318}
{"group":{"id":377,"suiteID":318,"parentID":371,"name":"RoutingEditorCubit Layout Integration layout algorithm service injection","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":276,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/routing_editor_cubit_layout_test.dart"},"type":"group","time":7318}
{"test":{"id":378,"name":"RoutingEditorCubit Layout Integration layout algorithm service injection allows injection of layout algorithm service","suiteID":318,"groupIDs":[370,371,377],"metadata":{"skip":false,"skipReason":null},"line":277,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/routing_editor_cubit_layout_test.dart"},"type":"testStart","time":7318}
{"testID":378,"messageType":"print","message":"[RoutingEditorCubit] Layout algorithm service injected","type":"print","time":7319}
{"testID":378,"messageType":"print","message":"No persisted routing editor state found","type":"print","time":7319}
{"testID":378,"messageType":"print","message":"[RoutingEditorCubit] Layout algorithm service injected","type":"print","time":7320}
{"testID":378,"messageType":"print","message":"No persisted routing editor state found","type":"print","time":7320}
{"testID":378,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7321}
{"test":{"id":379,"name":"RoutingEditorCubit Layout Integration layout algorithm service injection prevents multiple injections of layout algorithm service","suiteID":318,"groupIDs":[370,371,377],"metadata":{"skip":false,"skipReason":null},"line":289,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/routing_editor_cubit_layout_test.dart"},"type":"testStart","time":7321}
{"testID":379,"messageType":"print","message":"[RoutingEditorCubit] Layout algorithm service injected","type":"print","time":7322}
{"testID":379,"messageType":"print","message":"No persisted routing editor state found","type":"print","time":7327}
{"testID":379,"messageType":"print","message":"[RoutingEditorCubit] Layout algorithm service injected","type":"print","time":7327}
{"testID":379,"messageType":"print","message":"No persisted routing editor state found","type":"print","time":7327}
{"testID":379,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7327}
{"group":{"id":380,"suiteID":318,"parentID":371,"name":"RoutingEditorCubit Layout Integration node positions state management","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":305,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/routing_editor_cubit_layout_test.dart"},"type":"group","time":7327}
{"test":{"id":381,"name":"RoutingEditorCubit Layout Integration node positions state management preserves existing node positions when not applying layout","suiteID":318,"groupIDs":[370,371,380],"metadata":{"skip":false,"skipReason":null},"line":306,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/routing_editor_cubit_layout_test.dart"},"type":"testStart","time":7327}
{"testID":381,"messageType":"print","message":"[RoutingEditorCubit] Layout algorithm service injected","type":"print","time":7329}
{"testID":381,"messageType":"print","message":"No persisted routing editor state found","type":"print","time":7329}
{"testID":381,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7330}
{"test":{"id":382,"name":"RoutingEditorCubit Layout Integration node positions state management updates only algorithm positions when applying layout","suiteID":318,"groupIDs":[370,371,380],"metadata":{"skip":false,"skipReason":null},"line":338,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/routing_editor_cubit_layout_test.dart"},"type":"testStart","time":7330}
{"testID":382,"messageType":"print","message":"[RoutingEditorCubit] Layout algorithm service injected","type":"print","time":7332}
{"testID":382,"messageType":"print","message":"No persisted routing editor state found","type":"print","time":7332}
{"testID":382,"messageType":"print","message":"[RoutingEditorCubit] Applying layout algorithm","type":"print","time":7333}
{"testID":382,"messageType":"print","message":"[RoutingEditorCubit] Layout algorithm applied successfully","type":"print","time":7334}
{"testID":382,"messageType":"print","message":"  Updated positions: 3","type":"print","time":7334}
{"testID":382,"messageType":"print","message":"  Overlap reduction: 0.30","type":"print","time":7335}
{"testID":382,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7335}
{"suite":{"id":383,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/core/routing/bus_session_discovery_test.dart"},"type":"suite","time":7341}
{"test":{"id":384,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/core/routing/bus_session_discovery_test.dart","suiteID":383,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":7341}
{"testID":332,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":7455}
{"group":{"id":385,"suiteID":331,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":6,"line":null,"column":null,"url":null},"type":"group","time":7455}
{"group":{"id":386,"suiteID":331,"parentID":385,"name":"RoutingEditorCubit Integration Tests","metadata":{"skip":false,"skipReason":null},"testCount":6,"line":12,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/routing_editor_integration_test.dart"},"type":"group","time":7455}
{"group":{"id":387,"suiteID":331,"parentID":386,"name":"RoutingEditorCubit Integration Tests Connection Validation Integration","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":24,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/routing_editor_integration_test.dart"},"type":"group","time":7455}
{"test":{"id":388,"name":"RoutingEditorCubit Integration Tests Connection Validation Integration should initialize with initial state","suiteID":331,"groupIDs":[385,386,387],"metadata":{"skip":false,"skipReason":null},"line":25,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/routing_editor_integration_test.dart"},"type":"testStart","time":7455}
{"testID":388,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7478}
{"test":{"id":389,"name":"RoutingEditorCubit Integration Tests Connection Validation Integration should maintain initial state when no disting cubit provided","suiteID":331,"groupIDs":[385,386,387],"metadata":{"skip":false,"skipReason":null},"line":29,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/routing_editor_integration_test.dart"},"type":"testStart","time":7478}
{"testID":389,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7481}
{"group":{"id":390,"suiteID":331,"parentID":386,"name":"RoutingEditorCubit Integration Tests ConnectionValidator Integration Tests","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":39,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/routing_editor_integration_test.dart"},"type":"group","time":7481}
{"test":{"id":391,"name":"RoutingEditorCubit Integration Tests ConnectionValidator Integration Tests should correctly validate connections with slot ordering","suiteID":331,"groupIDs":[385,386,390],"metadata":{"skip":false,"skipReason":null},"line":40,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/routing_editor_integration_test.dart"},"type":"testStart","time":7481}
{"testID":391,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7487}
{"test":{"id":392,"name":"RoutingEditorCubit Integration Tests ConnectionValidator Integration Tests should handle physical connections correctly","suiteID":331,"groupIDs":[385,386,390],"metadata":{"skip":false,"skipReason":null},"line":134,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/routing_editor_integration_test.dart"},"type":"testStart","time":7487}
{"testID":392,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7489}
{"test":{"id":393,"name":"RoutingEditorCubit Integration Tests ConnectionValidator Integration Tests should generate stable port IDs","suiteID":331,"groupIDs":[385,386,390],"metadata":{"skip":false,"skipReason":null},"line":193,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/routing_editor_integration_test.dart"},"type":"testStart","time":7489}
{"testID":393,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7491}
{"group":{"id":394,"suiteID":331,"parentID":386,"name":"RoutingEditorCubit Integration Tests Algorithm Reordering Validation","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":217,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/routing_editor_integration_test.dart"},"type":"group","time":7491}
{"test":{"id":395,"name":"RoutingEditorCubit Integration Tests Algorithm Reordering Validation should validate connections when algorithm indices change","suiteID":331,"groupIDs":[385,386,394],"metadata":{"skip":false,"skipReason":null},"line":218,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/cubit/routing_editor_integration_test.dart"},"type":"testStart","time":7491}
{"testID":395,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7493}
{"suite":{"id":396,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/core/routing/usb_from_algorithm_routing_test.dart"},"type":"suite","time":7499}
{"test":{"id":397,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/core/routing/usb_from_algorithm_routing_test.dart","suiteID":396,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":7499}
{"testID":339,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":7539}
{"group":{"id":398,"suiteID":338,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":9,"line":null,"column":null,"url":null},"type":"group","time":7539}
{"group":{"id":399,"suiteID":338,"parentID":398,"name":"PlatformInteractionService","metadata":{"skip":false,"skipReason":null},"testCount":9,"line":6,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/platform/platform_interaction_service_test.dart"},"type":"group","time":7539}
{"group":{"id":400,"suiteID":338,"parentID":399,"name":"PlatformInteractionService platform detection","metadata":{"skip":false,"skipReason":null},"testCount":5,"line":13,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/platform/platform_interaction_service_test.dart"},"type":"group","time":7539}
{"test":{"id":401,"name":"PlatformInteractionService platform detection detects mobile platform on iOS","suiteID":338,"groupIDs":[398,399,400],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":14,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/platform/platform_interaction_service_test.dart"},"type":"testStart","time":7539}
{"testID":401,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7698}
{"test":{"id":402,"name":"PlatformInteractionService platform detection detects mobile platform on Android","suiteID":338,"groupIDs":[398,399,400],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":24,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/platform/platform_interaction_service_test.dart"},"type":"testStart","time":7698}
{"testID":402,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7704}
{"test":{"id":403,"name":"PlatformInteractionService platform detection detects desktop platform on macOS","suiteID":338,"groupIDs":[398,399,400],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":34,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/platform/platform_interaction_service_test.dart"},"type":"testStart","time":7704}
{"testID":403,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7713}
{"test":{"id":404,"name":"PlatformInteractionService platform detection detects desktop platform on Windows","suiteID":338,"groupIDs":[398,399,400],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":44,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/platform/platform_interaction_service_test.dart"},"type":"testStart","time":7713}
{"testID":404,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7718}
{"test":{"id":405,"name":"PlatformInteractionService platform detection detects desktop platform on Linux","suiteID":338,"groupIDs":[398,399,400],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":54,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/platform/platform_interaction_service_test.dart"},"type":"testStart","time":7718}
{"testID":405,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7728}
{"group":{"id":406,"suiteID":338,"parentID":399,"name":"PlatformInteractionService interaction method determination","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":65,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/platform/platform_interaction_service_test.dart"},"type":"group","time":7728}
{"test":{"id":407,"name":"PlatformInteractionService interaction method determination returns tap for mobile platforms","suiteID":338,"groupIDs":[398,399,406],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":66,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/platform/platform_interaction_service_test.dart"},"type":"testStart","time":7728}
{"testID":363,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":7732}
{"group":{"id":408,"suiteID":362,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":13,"line":null,"column":null,"url":null},"type":"group","time":7732}
{"group":{"id":409,"suiteID":362,"parentID":408,"name":"ConnectionDeletionState","metadata":{"skip":false,"skipReason":null},"testCount":13,"line":8,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/platform/connection_deletion_state_test.dart"},"type":"group","time":7732}
{"group":{"id":410,"suiteID":362,"parentID":409,"name":"ConnectionDeletionState constructor","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":9,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/platform/connection_deletion_state_test.dart"},"type":"group","time":7732}
{"test":{"id":411,"name":"ConnectionDeletionState constructor creates initial state with idle mode","suiteID":362,"groupIDs":[408,409,410],"metadata":{"skip":false,"skipReason":null},"line":10,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/platform/connection_deletion_state_test.dart"},"type":"testStart","time":7732}
{"testID":407,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7737}
{"test":{"id":412,"name":"PlatformInteractionService interaction method determination returns hover for desktop platforms","suiteID":338,"groupIDs":[398,399,406],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":76,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/platform/platform_interaction_service_test.dart"},"type":"testStart","time":7737}
{"testID":412,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7743}
{"group":{"id":413,"suiteID":338,"parentID":399,"name":"PlatformInteractionService isDesktopPlatform","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":87,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/platform/platform_interaction_service_test.dart"},"type":"group","time":7744}
{"test":{"id":414,"name":"PlatformInteractionService isDesktopPlatform returns true for desktop platforms","suiteID":338,"groupIDs":[398,399,413],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":88,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/platform/platform_interaction_service_test.dart"},"type":"testStart","time":7744}
{"testID":414,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7748}
{"test":{"id":415,"name":"PlatformInteractionService isDesktopPlatform returns false for mobile platforms","suiteID":338,"groupIDs":[398,399,413],"metadata":{"skip":false,"skipReason":null},"line":174,"column":5,"url":"package:flutter_test/src/widget_tester.dart","root_line":98,"root_column":7,"root_url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/platform/platform_interaction_service_test.dart"},"type":"testStart","time":7748}
{"testID":411,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7750}
{"test":{"id":416,"name":"ConnectionDeletionState constructor creates hover state with connection id","suiteID":362,"groupIDs":[408,409,410],"metadata":{"skip":false,"skipReason":null},"line":18,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/platform/connection_deletion_state_test.dart"},"type":"testStart","time":7750}
{"testID":416,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7752}
{"test":{"id":417,"name":"ConnectionDeletionState constructor creates tap selection state with connection ids","suiteID":362,"groupIDs":[408,409,410],"metadata":{"skip":false,"skipReason":null},"line":26,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/platform/connection_deletion_state_test.dart"},"type":"testStart","time":7752}
{"testID":415,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7754}
{"testID":417,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7755}
{"group":{"id":418,"suiteID":362,"parentID":409,"name":"ConnectionDeletionState equality and hashing","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":36,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/platform/connection_deletion_state_test.dart"},"type":"group","time":7755}
{"test":{"id":419,"name":"ConnectionDeletionState equality and hashing states with same values are equal","suiteID":362,"groupIDs":[408,409,418],"metadata":{"skip":false,"skipReason":null},"line":37,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/platform/connection_deletion_state_test.dart"},"type":"testStart","time":7755}
{"testID":419,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7758}
{"test":{"id":420,"name":"ConnectionDeletionState equality and hashing states with different values are not equal","suiteID":362,"groupIDs":[408,409,418],"metadata":{"skip":false,"skipReason":null},"line":45,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/platform/connection_deletion_state_test.dart"},"type":"testStart","time":7758}
{"suite":{"id":421,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/core/routing/node_layout_algorithm_test.dart"},"type":"suite","time":7760}
{"test":{"id":422,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/core/routing/node_layout_algorithm_test.dart","suiteID":421,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":7760}
{"testID":420,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7761}
{"test":{"id":423,"name":"ConnectionDeletionState equality and hashing different deletion modes are not equal","suiteID":362,"groupIDs":[408,409,418],"metadata":{"skip":false,"skipReason":null},"line":53,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/platform/connection_deletion_state_test.dart"},"type":"testStart","time":7764}
{"testID":423,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7766}
{"group":{"id":424,"suiteID":362,"parentID":409,"name":"ConnectionDeletionState state validation","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":61,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/platform/connection_deletion_state_test.dart"},"type":"group","time":7766}
{"test":{"id":425,"name":"ConnectionDeletionState state validation tap selected state can have empty selection","suiteID":362,"groupIDs":[408,409,424],"metadata":{"skip":false,"skipReason":null},"line":62,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/platform/connection_deletion_state_test.dart"},"type":"testStart","time":7766}
{"testID":425,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7768}
{"test":{"id":426,"name":"ConnectionDeletionState state validation tap selected state validates non-null connection ids","suiteID":362,"groupIDs":[408,409,424],"metadata":{"skip":false,"skipReason":null},"line":69,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/platform/connection_deletion_state_test.dart"},"type":"testStart","time":7768}
{"testID":426,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7769}
{"group":{"id":427,"suiteID":362,"parentID":409,"name":"ConnectionDeletionState convenience methods","metadata":{"skip":false,"skipReason":null},"testCount":5,"line":81,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/platform/connection_deletion_state_test.dart"},"type":"group","time":7770}
{"test":{"id":428,"name":"ConnectionDeletionState convenience methods isHovering returns true for hovering mode","suiteID":362,"groupIDs":[408,409,427],"metadata":{"skip":false,"skipReason":null},"line":82,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/platform/connection_deletion_state_test.dart"},"type":"testStart","time":7770}
{"testID":428,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7771}
{"test":{"id":429,"name":"ConnectionDeletionState convenience methods isTapSelecting returns true for tap selected mode","suiteID":362,"groupIDs":[408,409,427],"metadata":{"skip":false,"skipReason":null},"line":90,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/platform/connection_deletion_state_test.dart"},"type":"testStart","time":7771}
{"testID":429,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7773}
{"test":{"id":430,"name":"ConnectionDeletionState convenience methods isIdle returns true for idle mode","suiteID":362,"groupIDs":[408,409,427],"metadata":{"skip":false,"skipReason":null},"line":98,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/platform/connection_deletion_state_test.dart"},"type":"testStart","time":7773}
{"testID":430,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7774}
{"test":{"id":431,"name":"ConnectionDeletionState convenience methods hasSelectedConnection returns correct values","suiteID":362,"groupIDs":[408,409,427],"metadata":{"skip":false,"skipReason":null},"line":106,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/platform/connection_deletion_state_test.dart"},"type":"testStart","time":7774}
{"testID":431,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7776}
{"test":{"id":432,"name":"ConnectionDeletionState convenience methods isConnectionSelected identifies selected connections","suiteID":362,"groupIDs":[408,409,427],"metadata":{"skip":false,"skipReason":null},"line":118,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/platform/connection_deletion_state_test.dart"},"type":"testStart","time":7776}
{"testID":432,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7779}
{"suite":{"id":433,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/core/routing/port_compatibility_validator_test.dart"},"type":"suite","time":7783}
{"test":{"id":434,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/core/routing/port_compatibility_validator_test.dart","suiteID":433,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":7783}
{"testID":369,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":7839}
{"group":{"id":435,"suiteID":368,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":9,"line":null,"column":null,"url":null},"type":"group","time":7839}
{"group":{"id":436,"suiteID":368,"parentID":435,"name":"No Metadata Access Tests","metadata":{"skip":false,"skipReason":null},"testCount":9,"line":5,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/no_metadata_access_test.dart"},"type":"group","time":7839}
{"group":{"id":437,"suiteID":368,"parentID":436,"name":"No Metadata Access Tests Port Model Validation","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":6,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/no_metadata_access_test.dart"},"type":"group","time":7839}
{"test":{"id":438,"name":"No Metadata Access Tests Port Model Validation should not have metadata field available","suiteID":368,"groupIDs":[435,436,437],"metadata":{"skip":false,"skipReason":null},"line":7,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/no_metadata_access_test.dart"},"type":"testStart","time":7839}
{"testID":438,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7857}
{"test":{"id":439,"name":"No Metadata Access Tests Port Model Validation should only use direct properties in JSON serialization","suiteID":368,"groupIDs":[435,436,437],"metadata":{"skip":false,"skipReason":null},"line":44,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/no_metadata_access_test.dart"},"type":"testStart","time":7857}
{"testID":439,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7861}
{"test":{"id":440,"name":"No Metadata Access Tests Port Model Validation should deserialize from JSON without metadata","suiteID":368,"groupIDs":[435,436,437],"metadata":{"skip":false,"skipReason":null},"line":82,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/no_metadata_access_test.dart"},"type":"testStart","time":7861}
{"testID":440,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7864}
{"group":{"id":441,"suiteID":368,"parentID":436,"name":"No Metadata Access Tests Code Architecture Validation","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":124,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/no_metadata_access_test.dart"},"type":"group","time":7864}
{"test":{"id":442,"name":"No Metadata Access Tests Code Architecture Validation should demonstrate clean architecture without metadata coupling","suiteID":368,"groupIDs":[435,436,441],"metadata":{"skip":false,"skipReason":null},"line":125,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/no_metadata_access_test.dart"},"type":"testStart","time":7864}
{"testID":442,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7867}
{"test":{"id":443,"name":"No Metadata Access Tests Code Architecture Validation should handle edge cases without metadata dependency","suiteID":368,"groupIDs":[435,436,441],"metadata":{"skip":false,"skipReason":null},"line":182,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/no_metadata_access_test.dart"},"type":"testStart","time":7867}
{"testID":443,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7869}
{"group":{"id":444,"suiteID":368,"parentID":436,"name":"No Metadata Access Tests Migration Validation","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":238,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/no_metadata_access_test.dart"},"type":"group","time":7869}
{"test":{"id":445,"name":"No Metadata Access Tests Migration Validation should handle legacy JSON gracefully","suiteID":368,"groupIDs":[435,436,444],"metadata":{"skip":false,"skipReason":null},"line":239,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/no_metadata_access_test.dart"},"type":"testStart","time":7869}
{"testID":445,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7871}
{"test":{"id":446,"name":"No Metadata Access Tests Migration Validation should maintain forward compatibility","suiteID":368,"groupIDs":[435,436,444],"metadata":{"skip":false,"skipReason":null},"line":273,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/no_metadata_access_test.dart"},"type":"testStart","time":7871}
{"testID":446,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7873}
{"group":{"id":447,"suiteID":368,"parentID":436,"name":"No Metadata Access Tests Type Safety Validation","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":309,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/no_metadata_access_test.dart"},"type":"group","time":7873}
{"test":{"id":448,"name":"No Metadata Access Tests Type Safety Validation should enforce type safety for all direct properties","suiteID":368,"groupIDs":[435,436,447],"metadata":{"skip":false,"skipReason":null},"line":310,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/no_metadata_access_test.dart"},"type":"testStart","time":7873}
{"testID":448,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7875}
{"test":{"id":449,"name":"No Metadata Access Tests Type Safety Validation should handle null values correctly in type-safe manner","suiteID":368,"groupIDs":[435,436,447],"metadata":{"skip":false,"skipReason":null},"line":356,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/no_metadata_access_test.dart"},"type":"testStart","time":7875}
{"testID":449,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":7877}
{"suite":{"id":450,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/core/routing/no_ports_test.dart"},"type":"suite","time":7880}
{"test":{"id":451,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/core/routing/no_ports_test.dart","suiteID":450,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":7880}
{"testID":384,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":8078}
{"group":{"id":452,"suiteID":383,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":null,"column":null,"url":null},"type":"group","time":8078}
{"group":{"id":453,"suiteID":383,"parentID":452,"name":"Session-aware discovery","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":69,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/bus_session_discovery_test.dart"},"type":"group","time":8078}
{"test":{"id":454,"name":"Session-aware discovery replace starts a new session and prunes earlier writers","suiteID":383,"groupIDs":[452,453],"metadata":{"skip":false,"skipReason":null},"line":70,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/bus_session_discovery_test.dart"},"type":"testStart","time":8078}
{"testID":454,"messageType":"print","message":"[ConnectionDiscovery] Starting discovery for 4 algorithms","type":"print","time":8105}
{"testID":454,"messageType":"print","message":"[ConnectionDiscovery] Processing algorithm 0 (slot0)","type":"print","time":8105}
{"testID":454,"messageType":"print","message":"[ConnectionDiscovery]   Output port s0_out_b1: bus=1, outputMode=OutputMode.add","type":"print","time":8105}
{"testID":454,"messageType":"print","message":"[ConnectionDiscovery] Processing algorithm 1 (slot1)","type":"print","time":8105}
{"testID":454,"messageType":"print","message":"[ConnectionDiscovery]   Input port s1_in_b1: bus=1, outputMode=null","type":"print","time":8105}
{"testID":454,"messageType":"print","message":"[ConnectionDiscovery] Processing algorithm 2 (slot2)","type":"print","time":8107}
{"testID":454,"messageType":"print","message":"[ConnectionDiscovery]   Output port s2_out_b1: bus=1, outputMode=OutputMode.replace","type":"print","time":8108}
{"testID":454,"messageType":"print","message":"[ConnectionDiscovery] Processing algorithm 3 (slot3)","type":"print","time":8108}
{"testID":454,"messageType":"print","message":"[ConnectionDiscovery]   Input port s3_in_b1: bus=1, outputMode=null","type":"print","time":8108}
{"testID":454,"messageType":"print","message":"[ConnectionDiscovery] Bus registry summary:","type":"print","time":8108}
{"testID":454,"messageType":"print","message":"[ConnectionDiscovery]   Bus 1: 2 outputs, 2 inputs","type":"print","time":8109}
{"testID":454,"messageType":"print","message":"[ConnectionDiscovery] Creating partial connections for unmatched ports","type":"print","time":8113}
{"testID":454,"messageType":"print","message":"[ConnectionDiscovery] Created 3 full connections","type":"print","time":8113}
{"testID":454,"messageType":"print","message":"[ConnectionDiscovery] Created 0 partial connections","type":"print","time":8113}
{"testID":454,"messageType":"print","message":"[ConnectionDiscovery] Total connections: 3","type":"print","time":8113}
{"testID":454,"messageType":"print","message":"[ConnectionDiscovery]   Hardware connections: 1","type":"print","time":8113}
{"testID":454,"messageType":"print","message":"[ConnectionDiscovery]   Algorithm-to-algorithm: 2","type":"print","time":8113}
{"testID":454,"messageType":"print","message":"[ConnectionDiscovery]   Partial connections: 0","type":"print","time":8113}
{"testID":454,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8117}
{"test":{"id":455,"name":"Session-aware discovery hardware output uses final contributors only","suiteID":383,"groupIDs":[452,453],"metadata":{"skip":false,"skipReason":null},"line":106,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/bus_session_discovery_test.dart"},"type":"testStart","time":8117}
{"testID":455,"messageType":"print","message":"[ConnectionDiscovery] Starting discovery for 4 algorithms","type":"print","time":8119}
{"testID":455,"messageType":"print","message":"[ConnectionDiscovery] Processing algorithm 0 (slot0)","type":"print","time":8120}
{"testID":455,"messageType":"print","message":"[ConnectionDiscovery]   Output port s0_out_b18: bus=18, outputMode=OutputMode.add","type":"print","time":8120}
{"testID":455,"messageType":"print","message":"[ConnectionDiscovery] Processing algorithm 1 (slot1)","type":"print","time":8120}
{"testID":455,"messageType":"print","message":"[ConnectionDiscovery] Processing algorithm 2 (slot2)","type":"print","time":8120}
{"testID":455,"messageType":"print","message":"[ConnectionDiscovery]   Output port s2_out_b18: bus=18, outputMode=OutputMode.replace","type":"print","time":8120}
{"testID":455,"messageType":"print","message":"[ConnectionDiscovery] Processing algorithm 3 (slot3)","type":"print","time":8121}
{"testID":455,"messageType":"print","message":"[ConnectionDiscovery]   Output port s3_out_b18: bus=18, outputMode=OutputMode.add","type":"print","time":8121}
{"testID":455,"messageType":"print","message":"[ConnectionDiscovery] Bus registry summary:","type":"print","time":8121}
{"testID":455,"messageType":"print","message":"[ConnectionDiscovery]   Bus 18: 3 outputs, 0 inputs","type":"print","time":8121}
{"testID":455,"messageType":"print","message":"[ConnectionDiscovery] Creating partial connections for unmatched ports","type":"print","time":8122}
{"testID":455,"messageType":"print","message":"[ConnectionDiscovery] Bus 18 has 1 unmatched ports","type":"print","time":8126}
{"testID":455,"messageType":"print","message":"[ConnectionDiscovery]   Created partial connection: s0_out_b18 -> O6","type":"print","time":8126}
{"testID":455,"messageType":"print","message":"[ConnectionDiscovery] Created 2 full connections","type":"print","time":8126}
{"testID":455,"messageType":"print","message":"[ConnectionDiscovery] Created 1 partial connections","type":"print","time":8126}
{"testID":455,"messageType":"print","message":"[ConnectionDiscovery] Total connections: 3","type":"print","time":8126}
{"testID":455,"messageType":"print","message":"[ConnectionDiscovery]   Hardware connections: 2","type":"print","time":8126}
{"testID":455,"messageType":"print","message":"[ConnectionDiscovery]   Algorithm-to-algorithm: 0","type":"print","time":8126}
{"testID":455,"messageType":"print","message":"[ConnectionDiscovery]   Partial connections: 1","type":"print","time":8126}
{"testID":455,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8126}
{"suite":{"id":456,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/core/routing/models/connection_test.dart"},"type":"suite","time":8132}
{"test":{"id":457,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/core/routing/models/connection_test.dart","suiteID":456,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":8132}
{"testID":397,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":8303}
{"group":{"id":458,"suiteID":396,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":null,"column":null,"url":null},"type":"group","time":8303}
{"group":{"id":459,"suiteID":396,"parentID":458,"name":"UsbFromAlgorithmRouting","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":9,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/usb_from_algorithm_routing_test.dart"},"type":"group","time":8303}
{"test":{"id":460,"name":"UsbFromAlgorithmRouting extracts correct number of io and mode parameters","suiteID":396,"groupIDs":[458,459],"metadata":{"skip":false,"skipReason":null},"line":67,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/usb_from_algorithm_routing_test.dart"},"type":"testStart","time":8304}
{"testID":460,"messageType":"print","message":"AlgorithmRouting: Scanning 16 parameters for mode parameters","type":"print","time":8319}
{"testID":460,"messageType":"print","message":"AlgorithmRouting: Found mode parameter: Ch1 mode -> paramNum=8, value=1","type":"print","time":8321}
{"testID":460,"messageType":"print","message":"AlgorithmRouting: Found mode parameter: Ch2 mode -> paramNum=9, value=0","type":"print","time":8321}
{"testID":460,"messageType":"print","message":"AlgorithmRouting: Found mode parameter: Ch3 mode -> paramNum=10, value=0","type":"print","time":8321}
{"testID":460,"messageType":"print","message":"AlgorithmRouting: Found mode parameter: Ch4 mode -> paramNum=11, value=0","type":"print","time":8321}
{"testID":460,"messageType":"print","message":"AlgorithmRouting: Found mode parameter: Ch5 mode -> paramNum=12, value=0","type":"print","time":8321}
{"testID":460,"messageType":"print","message":"AlgorithmRouting: Found mode parameter: Ch6 mode -> paramNum=13, value=0","type":"print","time":8321}
{"testID":460,"messageType":"print","message":"AlgorithmRouting: Found mode parameter: Ch7 mode -> paramNum=14, value=0","type":"print","time":8322}
{"testID":460,"messageType":"print","message":"AlgorithmRouting: Found mode parameter: Ch8 mode -> paramNum=15, value=0","type":"print","time":8322}
{"testID":460,"messageType":"print","message":"AlgorithmRouting: Found 8 mode parameters: (Ch1 mode, Ch2 mode, Ch3 mode, Ch4 mode, Ch5 mode, Ch6 mode, Ch7 mode, Ch8 mode)","type":"print","time":8323}
{"testID":460,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8328}
{"test":{"id":461,"name":"UsbFromAlgorithmRouting should be created by factory and have correct ports","suiteID":396,"groupIDs":[458,459],"metadata":{"skip":false,"skipReason":null},"line":78,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/usb_from_algorithm_routing_test.dart"},"type":"testStart","time":8328}
{"testID":461,"messageType":"print","message":"AlgorithmRouting: Scanning 16 parameters for mode parameters","type":"print","time":8331}
{"testID":461,"messageType":"print","message":"AlgorithmRouting: Found mode parameter: Ch1 mode -> paramNum=8, value=1","type":"print","time":8331}
{"testID":461,"messageType":"print","message":"AlgorithmRouting: Found mode parameter: Ch2 mode -> paramNum=9, value=0","type":"print","time":8331}
{"testID":461,"messageType":"print","message":"AlgorithmRouting: Found mode parameter: Ch3 mode -> paramNum=10, value=0","type":"print","time":8332}
{"testID":461,"messageType":"print","message":"AlgorithmRouting: Found mode parameter: Ch4 mode -> paramNum=11, value=0","type":"print","time":8332}
{"testID":461,"messageType":"print","message":"AlgorithmRouting: Found mode parameter: Ch5 mode -> paramNum=12, value=0","type":"print","time":8332}
{"testID":461,"messageType":"print","message":"AlgorithmRouting: Found mode parameter: Ch6 mode -> paramNum=13, value=0","type":"print","time":8332}
{"testID":461,"messageType":"print","message":"AlgorithmRouting: Found mode parameter: Ch7 mode -> paramNum=14, value=0","type":"print","time":8332}
{"testID":461,"messageType":"print","message":"AlgorithmRouting: Found mode parameter: Ch8 mode -> paramNum=15, value=0","type":"print","time":8332}
{"testID":461,"messageType":"print","message":"AlgorithmRouting: Found 8 mode parameters: (Ch1 mode, Ch2 mode, Ch3 mode, Ch4 mode, Ch5 mode, Ch6 mode, Ch7 mode, Ch8 mode)","type":"print","time":8332}
{"testID":461,"messageType":"print","message":"UsbFromAlgorithmRouting.createFromSlot: Algorithm USB Audio (From Host)","type":"print","time":8337}
{"testID":461,"messageType":"print","message":"UsbFromAlgorithmRouting: Initialized with UUID algo_usbf_1757649901511","type":"print","time":8338}
{"testID":461,"messageType":"print","message":"UsbFromAlgorithmRouting: No input ports (USB from host)","type":"print","time":8338}
{"testID":461,"messageType":"print","message":"UsbFromAlgorithmRouting: Generated 8 output ports from properties","type":"print","time":8339}
{"testID":461,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8341}
{"test":{"id":462,"name":"UsbFromAlgorithmRouting handles spaced channel param names and different max values","suiteID":396,"groupIDs":[458,459],"metadata":{"skip":false,"skipReason":null},"line":97,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/usb_from_algorithm_routing_test.dart"},"type":"testStart","time":8341}
{"testID":462,"messageType":"print","message":"AlgorithmRouting: Scanning 16 parameters for mode parameters","type":"print","time":8342}
{"testID":462,"messageType":"print","message":"AlgorithmRouting: Found mode parameter: Ch 1 mode -> paramNum=8, value=1","type":"print","time":8343}
{"testID":462,"messageType":"print","message":"AlgorithmRouting: Found mode parameter: Ch 2 mode -> paramNum=9, value=0","type":"print","time":8343}
{"testID":462,"messageType":"print","message":"AlgorithmRouting: Found mode parameter: Ch 3 mode -> paramNum=10, value=0","type":"print","time":8343}
{"testID":462,"messageType":"print","message":"AlgorithmRouting: Found mode parameter: Ch 4 mode -> paramNum=11, value=0","type":"print","time":8343}
{"testID":462,"messageType":"print","message":"AlgorithmRouting: Found mode parameter: Ch 5 mode -> paramNum=12, value=0","type":"print","time":8343}
{"testID":462,"messageType":"print","message":"AlgorithmRouting: Found mode parameter: Ch 6 mode -> paramNum=13, value=0","type":"print","time":8343}
{"testID":462,"messageType":"print","message":"AlgorithmRouting: Found mode parameter: Ch 7 mode -> paramNum=14, value=0","type":"print","time":8343}
{"testID":462,"messageType":"print","message":"AlgorithmRouting: Found mode parameter: Ch 8 mode -> paramNum=15, value=0","type":"print","time":8343}
{"testID":462,"messageType":"print","message":"AlgorithmRouting: Found 8 mode parameters: (Ch 1 mode, Ch 2 mode, Ch 3 mode, Ch 4 mode, ..., Ch 7 mode, Ch 8 mode)","type":"print","time":8343}
{"testID":462,"messageType":"print","message":"UsbFromAlgorithmRouting.createFromSlot: Algorithm USB Audio (From Host)","type":"print","time":8344}
{"testID":462,"messageType":"print","message":"UsbFromAlgorithmRouting: Initialized with UUID algo_usbf_1757649901517","type":"print","time":8344}
{"testID":462,"messageType":"print","message":"UsbFromAlgorithmRouting: No input ports (USB from host)","type":"print","time":8344}
{"testID":462,"messageType":"print","message":"UsbFromAlgorithmRouting: Generated 8 output ports from properties","type":"print","time":8344}
{"testID":462,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8345}
{"suite":{"id":463,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_serialization_test.dart"},"type":"suite","time":8351}
{"test":{"id":464,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_serialization_test.dart","suiteID":463,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":8351}
{"testID":422,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":8666}
{"group":{"id":465,"suiteID":421,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":12,"line":null,"column":null,"url":null},"type":"group","time":8667}
{"group":{"id":466,"suiteID":421,"parentID":465,"name":"NodeLayoutAlgorithm","metadata":{"skip":false,"skipReason":null},"testCount":12,"line":9,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/node_layout_algorithm_test.dart"},"type":"group","time":8667}
{"group":{"id":467,"suiteID":421,"parentID":466,"name":"NodeLayoutAlgorithm calculateLayout","metadata":{"skip":false,"skipReason":null},"testCount":6,"line":16,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/node_layout_algorithm_test.dart"},"type":"group","time":8667}
{"test":{"id":468,"name":"NodeLayoutAlgorithm calculateLayout handles empty node list","suiteID":421,"groupIDs":[465,466,467],"metadata":{"skip":false,"skipReason":null},"line":17,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/node_layout_algorithm_test.dart"},"type":"testStart","time":8667}
{"testID":468,"messageType":"print","message":"[NodeLayoutAlgorithm] Starting layout calculation","type":"print","time":8681}
{"testID":468,"messageType":"print","message":"  Physical inputs: 0","type":"print","time":8681}
{"testID":468,"messageType":"print","message":"  Physical outputs: 0","type":"print","time":8681}
{"testID":468,"messageType":"print","message":"  Algorithms: 0","type":"print","time":8681}
{"testID":468,"messageType":"print","message":"  Connections: 0","type":"print","time":8681}
{"testID":468,"messageType":"print","message":"[NodeLayoutAlgorithm] Layout calculation complete","type":"print","time":8683}
{"testID":468,"messageType":"print","message":"  Algorithm positions: 0","type":"print","time":8684}
{"testID":468,"messageType":"print","message":"  Remaining overlaps: 0","type":"print","time":8684}
{"testID":468,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8687}
{"test":{"id":469,"name":"NodeLayoutAlgorithm calculateLayout positions physical inputs on left side","suiteID":421,"groupIDs":[465,466,467],"metadata":{"skip":false,"skipReason":null},"line":30,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/node_layout_algorithm_test.dart"},"type":"testStart","time":8687}
{"testID":469,"messageType":"print","message":"[NodeLayoutAlgorithm] Starting layout calculation","type":"print","time":8690}
{"testID":469,"messageType":"print","message":"  Physical inputs: 2","type":"print","time":8690}
{"testID":469,"messageType":"print","message":"  Physical outputs: 0","type":"print","time":8690}
{"testID":469,"messageType":"print","message":"  Algorithms: 1","type":"print","time":8690}
{"testID":469,"messageType":"print","message":"  Connections: 0","type":"print","time":8690}
{"testID":469,"messageType":"print","message":"[NodeLayout] Column assigned: algo 0 (algo_a) -> col 0","type":"print","time":8692}
{"testID":469,"messageType":"print","message":"[NodeLayout] Physical inputs positioned at x=1950.0, y=2450.0 (left of algorithms with 1.5 grid gap)","type":"print","time":8693}
{"testID":469,"messageType":"print","message":"[NodeLayout] Physical inputs height: 120.0 px","type":"print","time":8693}
{"testID":469,"messageType":"print","message":"[NodeLayoutAlgorithm] Layout calculation complete","type":"print","time":8693}
{"testID":469,"messageType":"print","message":"  Algorithm positions: 1","type":"print","time":8694}
{"testID":469,"messageType":"print","message":"  Remaining overlaps: 0","type":"print","time":8694}
{"testID":469,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8695}
{"test":{"id":470,"name":"NodeLayoutAlgorithm calculateLayout positions physical outputs on right side","suiteID":421,"groupIDs":[465,466,467],"metadata":{"skip":false,"skipReason":null},"line":84,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/node_layout_algorithm_test.dart"},"type":"testStart","time":8695}
{"testID":470,"messageType":"print","message":"[NodeLayoutAlgorithm] Starting layout calculation","type":"print","time":8697}
{"testID":470,"messageType":"print","message":"  Physical inputs: 0","type":"print","time":8697}
{"testID":470,"messageType":"print","message":"  Physical outputs: 2","type":"print","time":8697}
{"testID":470,"messageType":"print","message":"  Algorithms: 1","type":"print","time":8697}
{"testID":470,"messageType":"print","message":"  Connections: 0","type":"print","time":8697}
{"testID":470,"messageType":"print","message":"[NodeLayout] Column assigned: algo 0 (algo_b) -> col 0","type":"print","time":8697}
{"testID":470,"messageType":"print","message":"[NodeLayout] Physical outputs positioned at x=2750.0, y=2450.0 (right of algorithms with 1.5 grid gap)","type":"print","time":8698}
{"testID":470,"messageType":"print","message":"[NodeLayout] Physical outputs height: 120.0 px","type":"print","time":8698}
{"testID":470,"messageType":"print","message":"[NodeLayoutAlgorithm] Layout calculation complete","type":"print","time":8698}
{"testID":470,"messageType":"print","message":"  Algorithm positions: 1","type":"print","time":8698}
{"testID":470,"messageType":"print","message":"  Remaining overlaps: 0","type":"print","time":8698}
{"testID":470,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8699}
{"test":{"id":471,"name":"NodeLayoutAlgorithm calculateLayout positions algorithms in center with slot ordering","suiteID":421,"groupIDs":[465,466,467],"metadata":{"skip":false,"skipReason":null},"line":138,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/node_layout_algorithm_test.dart"},"type":"testStart","time":8699}
{"testID":471,"messageType":"print","message":"[NodeLayoutAlgorithm] Starting layout calculation","type":"print","time":8700}
{"testID":471,"messageType":"print","message":"  Physical inputs: 0","type":"print","time":8700}
{"testID":471,"messageType":"print","message":"  Physical outputs: 0","type":"print","time":8701}
{"testID":471,"messageType":"print","message":"  Algorithms: 2","type":"print","time":8701}
{"testID":471,"messageType":"print","message":"  Connections: 0","type":"print","time":8701}
{"testID":471,"messageType":"print","message":"[NodeLayout] Column assigned: algo 0 (algo_0) -> col 0","type":"print","time":8701}
{"testID":471,"messageType":"print","message":"[NodeLayout] Column assigned: algo 1 (algo_1) -> col 0","type":"print","time":8701}
{"testID":471,"messageType":"print","message":"[NodeLayoutAlgorithm] Layout calculation complete","type":"print","time":8701}
{"testID":471,"messageType":"print","message":"  Algorithm positions: 2","type":"print","time":8702}
{"testID":471,"messageType":"print","message":"  Remaining overlaps: 0","type":"print","time":8702}
{"testID":471,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8702}
{"test":{"id":472,"name":"NodeLayoutAlgorithm calculateLayout reduces connection overlaps with optimal positioning","suiteID":421,"groupIDs":[465,466,467],"metadata":{"skip":false,"skipReason":null},"line":213,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/node_layout_algorithm_test.dart"},"type":"testStart","time":8702}
{"testID":472,"messageType":"print","message":"[NodeLayoutAlgorithm] Starting layout calculation","type":"print","time":8704}
{"testID":472,"messageType":"print","message":"  Physical inputs: 1","type":"print","time":8704}
{"testID":472,"messageType":"print","message":"  Physical outputs: 1","type":"print","time":8704}
{"testID":472,"messageType":"print","message":"  Algorithms: 1","type":"print","time":8704}
{"testID":472,"messageType":"print","message":"  Connections: 2","type":"print","time":8704}
{"testID":472,"messageType":"print","message":"[NodeLayout] Column assigned: algo 0 (algo_0) -> col 0","type":"print","time":8705}
{"testID":472,"messageType":"print","message":"[NodeLayout] Physical inputs positioned at x=1950.0, y=2500.0 (left of algorithms with 1.5 grid gap)","type":"print","time":8705}
{"testID":472,"messageType":"print","message":"[NodeLayout] Physical inputs height: 90.0 px","type":"print","time":8705}
{"testID":472,"messageType":"print","message":"[NodeLayout] Physical outputs positioned at x=2750.0, y=2500.0 (right of algorithms with 1.5 grid gap)","type":"print","time":8705}
{"testID":472,"messageType":"print","message":"[NodeLayout] Physical outputs height: 90.0 px","type":"print","time":8705}
{"testID":472,"messageType":"print","message":"[NodeLayoutAlgorithm] Layout calculation complete","type":"print","time":8705}
{"testID":472,"messageType":"print","message":"  Algorithm positions: 1","type":"print","time":8705}
{"testID":472,"messageType":"print","message":"  Remaining overlaps: 0","type":"print","time":8706}
{"testID":472,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8707}
{"test":{"id":473,"name":"NodeLayoutAlgorithm calculateLayout handles complex routing scenarios","suiteID":421,"groupIDs":[465,466,467],"metadata":{"skip":false,"skipReason":null},"line":295,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/node_layout_algorithm_test.dart"},"type":"testStart","time":8707}
{"testID":434,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":8711}
{"group":{"id":474,"suiteID":433,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":21,"line":null,"column":null,"url":null},"type":"group","time":8711}
{"group":{"id":475,"suiteID":433,"parentID":474,"name":"PortCompatibilityValidator Tests","metadata":{"skip":false,"skipReason":null},"testCount":21,"line":7,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/port_compatibility_validator_test.dart"},"type":"group","time":8711}
{"group":{"id":476,"suiteID":433,"parentID":475,"name":"PortCompatibilityValidator Tests Basic Validation Tests","metadata":{"skip":false,"skipReason":null},"testCount":5,"line":71,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/port_compatibility_validator_test.dart"},"type":"group","time":8711}
{"test":{"id":477,"name":"PortCompatibilityValidator Tests Basic Validation Tests should validate compatible audio connection","suiteID":433,"groupIDs":[474,475,476],"metadata":{"skip":false,"skipReason":null},"line":72,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/port_compatibility_validator_test.dart"},"type":"testStart","time":8711}
{"testID":473,"messageType":"print","message":"[NodeLayoutAlgorithm] Starting layout calculation","type":"print","time":8711}
{"testID":473,"messageType":"print","message":"  Physical inputs: 3","type":"print","time":8712}
{"testID":473,"messageType":"print","message":"  Physical outputs: 2","type":"print","time":8712}
{"testID":473,"messageType":"print","message":"  Algorithms: 5","type":"print","time":8712}
{"testID":473,"messageType":"print","message":"  Connections: 3","type":"print","time":8712}
{"testID":473,"messageType":"print","message":"[NodeLayout] Column assigned: algo 0 (algo_0) -> col 1","type":"print","time":8712}
{"testID":473,"messageType":"print","message":"[NodeLayout] Column assigned: algo 1 (algo_1) -> col 2","type":"print","time":8712}
{"testID":473,"messageType":"print","message":"[NodeLayout] Column assigned: algo 2 (algo_2) -> col 0","type":"print","time":8712}
{"testID":473,"messageType":"print","message":"[NodeLayout] Column assigned: algo 3 (algo_3) -> col 0","type":"print","time":8712}
{"testID":473,"messageType":"print","message":"[NodeLayout] Column assigned: algo 4 (algo_4) -> col 0","type":"print","time":8712}
{"testID":473,"messageType":"print","message":"[NodeLayout] Physical inputs positioned at x=1550.0, y=2450.0 (left of algorithms with 1.5 grid gap)","type":"print","time":8712}
{"testID":473,"messageType":"print","message":"[NodeLayout] Physical inputs height: 150.0 px","type":"print","time":8712}
{"testID":473,"messageType":"print","message":"[NodeLayout] Physical outputs positioned at x=3100.0, y=2450.0 (right of algorithms with 1.5 grid gap)","type":"print","time":8712}
{"testID":473,"messageType":"print","message":"[NodeLayout] Physical outputs height: 120.0 px","type":"print","time":8712}
{"testID":473,"messageType":"print","message":"[NodeLayoutAlgorithm] Layout calculation complete","type":"print","time":8712}
{"testID":473,"messageType":"print","message":"  Algorithm positions: 5","type":"print","time":8712}
{"testID":473,"messageType":"print","message":"  Remaining overlaps: 0","type":"print","time":8712}
{"testID":473,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8712}
{"group":{"id":478,"suiteID":421,"parentID":466,"name":"NodeLayoutAlgorithm detectConnectionOverlaps","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":399,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/node_layout_algorithm_test.dart"},"type":"group","time":8712}
{"test":{"id":479,"name":"NodeLayoutAlgorithm detectConnectionOverlaps detects no overlaps for non-crossing connections","suiteID":421,"groupIDs":[465,466,478],"metadata":{"skip":false,"skipReason":null},"line":400,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/node_layout_algorithm_test.dart"},"type":"testStart","time":8712}
{"testID":479,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8713}
{"test":{"id":480,"name":"NodeLayoutAlgorithm detectConnectionOverlaps detects overlaps for crossing connections","suiteID":421,"groupIDs":[465,466,478],"metadata":{"skip":false,"skipReason":null},"line":422,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/node_layout_algorithm_test.dart"},"type":"testStart","time":8713}
{"testID":480,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8716}
{"group":{"id":481,"suiteID":421,"parentID":466,"name":"NodeLayoutAlgorithm optimizeNodePositionsForConnections","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":457,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/node_layout_algorithm_test.dart"},"type":"group","time":8716}
{"test":{"id":482,"name":"NodeLayoutAlgorithm optimizeNodePositionsForConnections adjusts positions to minimize connection overlap","suiteID":421,"groupIDs":[465,466,481],"metadata":{"skip":false,"skipReason":null},"line":458,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/node_layout_algorithm_test.dart"},"type":"testStart","time":8716}
{"testID":482,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8718}
{"group":{"id":483,"suiteID":421,"parentID":466,"name":"NodeLayoutAlgorithm edge cases","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":517,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/node_layout_algorithm_test.dart"},"type":"group","time":8718}
{"test":{"id":484,"name":"NodeLayoutAlgorithm edge cases handles single node","suiteID":421,"groupIDs":[465,466,483],"metadata":{"skip":false,"skipReason":null},"line":518,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/node_layout_algorithm_test.dart"},"type":"testStart","time":8718}
{"testID":484,"messageType":"print","message":"[NodeLayoutAlgorithm] Starting layout calculation","type":"print","time":8719}
{"testID":484,"messageType":"print","message":"  Physical inputs: 0","type":"print","time":8719}
{"testID":484,"messageType":"print","message":"  Physical outputs: 0","type":"print","time":8719}
{"testID":484,"messageType":"print","message":"  Algorithms: 1","type":"print","time":8719}
{"testID":484,"messageType":"print","message":"  Connections: 0","type":"print","time":8720}
{"testID":484,"messageType":"print","message":"[NodeLayout] Column assigned: algo 0 (algo_0) -> col 0","type":"print","time":8720}
{"testID":484,"messageType":"print","message":"[NodeLayoutAlgorithm] Layout calculation complete","type":"print","time":8720}
{"testID":484,"messageType":"print","message":"  Algorithm positions: 1","type":"print","time":8720}
{"testID":484,"messageType":"print","message":"  Remaining overlaps: 0","type":"print","time":8720}
{"testID":484,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8721}
{"test":{"id":485,"name":"NodeLayoutAlgorithm edge cases handles no connections","suiteID":421,"groupIDs":[465,466,483],"metadata":{"skip":false,"skipReason":null},"line":561,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/node_layout_algorithm_test.dart"},"type":"testStart","time":8721}
{"testID":485,"messageType":"print","message":"[NodeLayoutAlgorithm] Starting layout calculation","type":"print","time":8722}
{"testID":485,"messageType":"print","message":"  Physical inputs: 0","type":"print","time":8722}
{"testID":485,"messageType":"print","message":"  Physical outputs: 0","type":"print","time":8722}
{"testID":485,"messageType":"print","message":"  Algorithms: 3","type":"print","time":8722}
{"testID":485,"messageType":"print","message":"  Connections: 0","type":"print","time":8722}
{"testID":485,"messageType":"print","message":"[NodeLayout] Column assigned: algo 0 (algo_0) -> col 0","type":"print","time":8723}
{"testID":485,"messageType":"print","message":"[NodeLayout] Column assigned: algo 1 (algo_1) -> col 0","type":"print","time":8723}
{"testID":485,"messageType":"print","message":"[NodeLayout] Column assigned: algo 2 (algo_2) -> col 0","type":"print","time":8723}
{"testID":485,"messageType":"print","message":"[NodeLayoutAlgorithm] Layout calculation complete","type":"print","time":8723}
{"testID":485,"messageType":"print","message":"  Algorithm positions: 3","type":"print","time":8723}
{"testID":485,"messageType":"print","message":"  Remaining overlaps: 0","type":"print","time":8723}
{"testID":485,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8724}
{"test":{"id":486,"name":"NodeLayoutAlgorithm edge cases handles maximum node count performance","suiteID":421,"groupIDs":[465,466,483],"metadata":{"skip":false,"skipReason":null},"line":609,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/node_layout_algorithm_test.dart"},"type":"testStart","time":8724}
{"testID":477,"messageType":"print","message":"PortCompatibilityValidator: Validation passed for audio_out -> audio_in","type":"print","time":8724}
{"testID":486,"messageType":"print","message":"[NodeLayoutAlgorithm] Starting layout calculation","type":"print","time":8725}
{"testID":486,"messageType":"print","message":"  Physical inputs: 0","type":"print","time":8725}
{"testID":486,"messageType":"print","message":"  Physical outputs: 0","type":"print","time":8725}
{"testID":486,"messageType":"print","message":"  Algorithms: 20","type":"print","time":8725}
{"testID":486,"messageType":"print","message":"  Connections: 0","type":"print","time":8726}
{"testID":486,"messageType":"print","message":"[NodeLayout] Column assigned: algo 0 (algo_0) -> col 0","type":"print","time":8726}
{"testID":486,"messageType":"print","message":"[NodeLayout] Column assigned: algo 1 (algo_1) -> col 0","type":"print","time":8726}
{"testID":486,"messageType":"print","message":"[NodeLayout] Column assigned: algo 2 (algo_2) -> col 0","type":"print","time":8726}
{"testID":486,"messageType":"print","message":"[NodeLayout] Column assigned: algo 3 (algo_3) -> col 0","type":"print","time":8726}
{"testID":486,"messageType":"print","message":"[NodeLayout] Column assigned: algo 4 (algo_4) -> col 0","type":"print","time":8726}
{"testID":486,"messageType":"print","message":"[NodeLayout] Column assigned: algo 5 (algo_5) -> col 0","type":"print","time":8726}
{"testID":486,"messageType":"print","message":"[NodeLayout] Column assigned: algo 6 (algo_6) -> col 0","type":"print","time":8726}
{"testID":486,"messageType":"print","message":"[NodeLayout] Column assigned: algo 7 (algo_7) -> col 0","type":"print","time":8727}
{"testID":486,"messageType":"print","message":"[NodeLayout] Column assigned: algo 8 (algo_8) -> col 0","type":"print","time":8727}
{"testID":486,"messageType":"print","message":"[NodeLayout] Column assigned: algo 9 (algo_9) -> col 0","type":"print","time":8727}
{"testID":486,"messageType":"print","message":"[NodeLayout] Column assigned: algo 10 (algo_10) -> col 0","type":"print","time":8727}
{"testID":486,"messageType":"print","message":"[NodeLayout] Column assigned: algo 11 (algo_11) -> col 0","type":"print","time":8727}
{"testID":486,"messageType":"print","message":"[NodeLayout] Column assigned: algo 12 (algo_12) -> col 0","type":"print","time":8727}
{"testID":486,"messageType":"print","message":"[NodeLayout] Column assigned: algo 13 (algo_13) -> col 0","type":"print","time":8727}
{"testID":477,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8727}
{"testID":486,"messageType":"print","message":"[NodeLayout] Column assigned: algo 14 (algo_14) -> col 0","type":"print","time":8727}
{"test":{"id":487,"name":"PortCompatibilityValidator Tests Basic Validation Tests should validate cross-compatible audio to CV connection with warning","suiteID":433,"groupIDs":[474,475,476],"metadata":{"skip":false,"skipReason":null},"line":82,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/port_compatibility_validator_test.dart"},"type":"testStart","time":8727}
{"testID":486,"messageType":"print","message":"[NodeLayout] Column assigned: algo 15 (algo_15) -> col 0","type":"print","time":8727}
{"testID":486,"messageType":"print","message":"[NodeLayout] Column assigned: algo 16 (algo_16) -> col 0","type":"print","time":8727}
{"testID":486,"messageType":"print","message":"[NodeLayout] Column assigned: algo 17 (algo_17) -> col 0","type":"print","time":8727}
{"testID":486,"messageType":"print","message":"[NodeLayout] Column assigned: algo 18 (algo_18) -> col 0","type":"print","time":8728}
{"testID":486,"messageType":"print","message":"[NodeLayout] Column assigned: algo 19 (algo_19) -> col 0","type":"print","time":8728}
{"testID":486,"messageType":"print","message":"[NodeLayoutAlgorithm] Layout calculation complete","type":"print","time":8728}
{"testID":486,"messageType":"print","message":"  Algorithm positions: 20","type":"print","time":8728}
{"testID":487,"messageType":"print","message":"PortCompatibilityValidator: Validation passed for audio_out -> cv_in","type":"print","time":8728}
{"testID":486,"messageType":"print","message":"  Remaining overlaps: 0","type":"print","time":8729}
{"testID":486,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8730}
{"testID":487,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8730}
{"test":{"id":488,"name":"PortCompatibilityValidator Tests Basic Validation Tests should reject incompatible audio to MIDI connection","suiteID":433,"groupIDs":[474,475,476],"metadata":{"skip":false,"skipReason":null},"line":97,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/port_compatibility_validator_test.dart"},"type":"testStart","time":8731}
{"testID":488,"messageType":"print","message":"PortCompatibilityValidator: Validation failed for audio_out -> midi_in","type":"print","time":8732}
{"testID":488,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8733}
{"test":{"id":489,"name":"PortCompatibilityValidator Tests Basic Validation Tests should reject connection from input to input","suiteID":433,"groupIDs":[474,475,476],"metadata":{"skip":false,"skipReason":null},"line":112,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/port_compatibility_validator_test.dart"},"type":"testStart","time":8733}
{"suite":{"id":490,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_test.dart"},"type":"suite","time":8736}
{"test":{"id":491,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_test.dart","suiteID":490,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":8736}
{"testID":489,"messageType":"print","message":"PortCompatibilityValidator: Validation failed for audio_in -> cv_in","type":"print","time":8736}
{"testID":489,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8736}
{"test":{"id":492,"name":"PortCompatibilityValidator Tests Basic Validation Tests should reject connection from output to output","suiteID":433,"groupIDs":[474,475,476],"metadata":{"skip":false,"skipReason":null},"line":130,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/port_compatibility_validator_test.dart"},"type":"testStart","time":8740}
{"testID":492,"messageType":"print","message":"PortCompatibilityValidator: Validation failed for audio_out -> cv_out","type":"print","time":8741}
{"testID":492,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8742}
{"group":{"id":493,"suiteID":433,"parentID":475,"name":"PortCompatibilityValidator Tests Port Activity Validation Tests","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":149,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/port_compatibility_validator_test.dart"},"type":"group","time":8742}
{"test":{"id":494,"name":"PortCompatibilityValidator Tests Port Activity Validation Tests should reject connection with inactive source port","suiteID":433,"groupIDs":[474,475,493],"metadata":{"skip":false,"skipReason":null},"line":150,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/port_compatibility_validator_test.dart"},"type":"testStart","time":8742}
{"testID":494,"messageType":"print","message":"PortCompatibilityValidator: Validation failed for inactive -> audio_in","type":"print","time":8743}
{"testID":494,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8744}
{"test":{"id":495,"name":"PortCompatibilityValidator Tests Port Activity Validation Tests should reject connection with inactive destination port","suiteID":433,"groupIDs":[474,475,493],"metadata":{"skip":false,"skipReason":null},"line":165,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/port_compatibility_validator_test.dart"},"type":"testStart","time":8744}
{"testID":495,"messageType":"print","message":"PortCompatibilityValidator: Validation failed for audio_out -> inactive","type":"print","time":8745}
{"testID":495,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8746}
{"test":{"id":496,"name":"PortCompatibilityValidator Tests Port Activity Validation Tests should reject connection with both ports inactive","suiteID":433,"groupIDs":[474,475,493],"metadata":{"skip":false,"skipReason":null},"line":181,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/port_compatibility_validator_test.dart"},"type":"testStart","time":8746}
{"testID":496,"messageType":"print","message":"PortCompatibilityValidator: Validation failed for inactive_out -> inactive","type":"print","time":8747}
{"testID":496,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8748}
{"group":{"id":497,"suiteID":433,"parentID":475,"name":"PortCompatibilityValidator Tests Constraint Validation Tests","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":213,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/port_compatibility_validator_test.dart"},"type":"group","time":8748}
{"test":{"id":498,"name":"PortCompatibilityValidator Tests Constraint Validation Tests should validate compatible voltage ranges","suiteID":433,"groupIDs":[474,475,497],"metadata":{"skip":false,"skipReason":null},"line":214,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/port_compatibility_validator_test.dart"},"type":"testStart","time":8748}
{"testID":498,"messageType":"print","message":"PortCompatibilityValidator: Validation passed for source -> dest","type":"print","time":8750}
{"testID":498,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8750}
{"test":{"id":499,"name":"PortCompatibilityValidator Tests Constraint Validation Tests should reject incompatible voltage ranges","suiteID":433,"groupIDs":[474,475,497],"metadata":{"skip":false,"skipReason":null},"line":244,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/port_compatibility_validator_test.dart"},"type":"testStart","time":8750}
{"testID":499,"messageType":"print","message":"PortCompatibilityValidator: Validation failed for source -> dest","type":"print","time":8752}
{"testID":499,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8752}
{"group":{"id":500,"suiteID":433,"parentID":475,"name":"PortCompatibilityValidator Tests Existing Connections Tests","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":280,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/port_compatibility_validator_test.dart"},"type":"group","time":8752}
{"test":{"id":501,"name":"PortCompatibilityValidator Tests Existing Connections Tests should warn about existing connections on ports","suiteID":433,"groupIDs":[474,475,500],"metadata":{"skip":false,"skipReason":null},"line":281,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/port_compatibility_validator_test.dart"},"type":"testStart","time":8752}
{"testID":451,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":8754}
{"group":{"id":502,"suiteID":450,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":5,"line":null,"column":null,"url":null},"type":"group","time":8754}
{"group":{"id":503,"suiteID":450,"parentID":502,"name":"Algorithms with No Ports Tests","metadata":{"skip":false,"skipReason":null},"testCount":5,"line":8,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/no_ports_test.dart"},"type":"group","time":8754}
{"group":{"id":504,"suiteID":450,"parentID":503,"name":"Algorithms with No Ports Tests AlgorithmRouting","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":29,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/no_ports_test.dart"},"type":"group","time":8754}
{"test":{"id":505,"name":"Algorithms with No Ports Tests AlgorithmRouting should allow algorithms with no ports to return empty lists","suiteID":450,"groupIDs":[502,503,504],"metadata":{"skip":false,"skipReason":null},"line":30,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/no_ports_test.dart"},"type":"testStart","time":8754}
{"testID":501,"messageType":"print","message":"PortCompatibilityValidator: Validation passed for audio_out -> audio_in","type":"print","time":8755}
{"testID":501,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8755}
{"group":{"id":506,"suiteID":433,"parentID":475,"name":"PortCompatibilityValidator Tests Custom Rules Tests","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":323,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/port_compatibility_validator_test.dart"},"type":"group","time":8755}
{"test":{"id":507,"name":"PortCompatibilityValidator Tests Custom Rules Tests should apply custom validation rules","suiteID":433,"groupIDs":[474,475,506],"metadata":{"skip":false,"skipReason":null},"line":324,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/port_compatibility_validator_test.dart"},"type":"testStart","time":8755}
{"testID":507,"messageType":"print","message":"PortCompatibilityValidator: Added custom validation rule","type":"print","time":8757}
{"testID":507,"messageType":"print","message":"PortCompatibilityValidator: Validation failed for audio_out -> cv_in","type":"print","time":8757}
{"testID":507,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8757}
{"test":{"id":508,"name":"PortCompatibilityValidator Tests Custom Rules Tests should handle custom rule exceptions gracefully","suiteID":433,"groupIDs":[474,475,506],"metadata":{"skip":false,"skipReason":null},"line":357,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/port_compatibility_validator_test.dart"},"type":"testStart","time":8757}
{"testID":508,"messageType":"print","message":"PortCompatibilityValidator: Added custom validation rule","type":"print","time":8759}
{"testID":508,"messageType":"print","message":"PortCompatibilityValidator: Custom rule failed - Exception: Test exception","type":"print","time":8759}
{"testID":508,"messageType":"print","message":"PortCompatibilityValidator: Validation failed for audio_out -> audio_in","type":"print","time":8759}
{"testID":508,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8759}
{"test":{"id":509,"name":"PortCompatibilityValidator Tests Custom Rules Tests should clear custom rules","suiteID":433,"groupIDs":[474,475,506],"metadata":{"skip":false,"skipReason":null},"line":383,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/port_compatibility_validator_test.dart"},"type":"testStart","time":8760}
{"testID":509,"messageType":"print","message":"PortCompatibilityValidator: Added custom validation rule","type":"print","time":8761}
{"testID":509,"messageType":"print","message":"PortCompatibilityValidator: Validation failed for audio_out -> audio_in","type":"print","time":8761}
{"testID":509,"messageType":"print","message":"PortCompatibilityValidator: Cleared custom validation rules","type":"print","time":8761}
{"testID":509,"messageType":"print","message":"PortCompatibilityValidator: Validation passed for audio_out -> audio_in","type":"print","time":8761}
{"testID":509,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8762}
{"group":{"id":510,"suiteID":433,"parentID":475,"name":"PortCompatibilityValidator Tests ValidationResult Tests","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":408,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/port_compatibility_validator_test.dart"},"type":"group","time":8762}
{"test":{"id":511,"name":"PortCompatibilityValidator Tests ValidationResult Tests should create successful validation result","suiteID":433,"groupIDs":[474,475,510],"metadata":{"skip":false,"skipReason":null},"line":409,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/port_compatibility_validator_test.dart"},"type":"testStart","time":8762}
{"testID":511,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8764}
{"test":{"id":512,"name":"PortCompatibilityValidator Tests ValidationResult Tests should create failed validation result","suiteID":433,"groupIDs":[474,475,510],"metadata":{"skip":false,"skipReason":null},"line":418,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/port_compatibility_validator_test.dart"},"type":"testStart","time":8764}
{"testID":512,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8765}
{"test":{"id":513,"name":"PortCompatibilityValidator Tests ValidationResult Tests ValidationResult equality should work correctly","suiteID":433,"groupIDs":[474,475,510],"metadata":{"skip":false,"skipReason":null},"line":432,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/port_compatibility_validator_test.dart"},"type":"testStart","time":8765}
{"testID":513,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8769}
{"group":{"id":514,"suiteID":433,"parentID":475,"name":"PortCompatibilityValidator Tests ValidationError Tests","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":453,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/port_compatibility_validator_test.dart"},"type":"group","time":8769}
{"test":{"id":515,"name":"PortCompatibilityValidator Tests ValidationError Tests should create validation error with all fields","suiteID":433,"groupIDs":[474,475,514],"metadata":{"skip":false,"skipReason":null},"line":454,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/port_compatibility_validator_test.dart"},"type":"testStart","time":8769}
{"testID":515,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8771}
{"testID":505,"messageType":"print","message":"AlgorithmRouting: Scanning 1 parameters for mode parameters","type":"print","time":8771}
{"test":{"id":516,"name":"PortCompatibilityValidator Tests ValidationError Tests ValidationError equality should work correctly","suiteID":433,"groupIDs":[474,475,514],"metadata":{"skip":false,"skipReason":null},"line":470,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/port_compatibility_validator_test.dart"},"type":"testStart","time":8771}
{"testID":516,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8773}
{"testID":505,"messageType":"print","message":"AlgorithmRouting: Found 0 mode parameters: ()","type":"print","time":8773}
{"group":{"id":517,"suiteID":433,"parentID":475,"name":"PortCompatibilityValidator Tests ValidationWarning Tests","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":485,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/port_compatibility_validator_test.dart"},"type":"group","time":8773}
{"test":{"id":518,"name":"PortCompatibilityValidator Tests ValidationWarning Tests should create validation warning with all fields","suiteID":433,"groupIDs":[474,475,517],"metadata":{"skip":false,"skipReason":null},"line":486,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/port_compatibility_validator_test.dart"},"type":"testStart","time":8773}
{"testID":505,"messageType":"print","message":"Notes algorithm detected (guid: note) - returning empty I/O parameters (no routing capability)","type":"print","time":8773}
{"testID":518,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8775}
{"test":{"id":519,"name":"PortCompatibilityValidator Tests ValidationWarning Tests ValidationWarning equality should work correctly","suiteID":433,"groupIDs":[474,475,517],"metadata":{"skip":false,"skipReason":null},"line":500,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/port_compatibility_validator_test.dart"},"type":"testStart","time":8775}
{"testID":505,"messageType":"print","message":"MultiChannelAlgorithmRouting: Initialized with 1 channels, stereo: false, mix: false","type":"print","time":8776}
{"testID":519,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8776}
{"testID":505,"messageType":"print","message":"MultiChannelAlgorithmRouting: No input ports declared - returning empty","type":"print","time":8777}
{"testID":505,"messageType":"print","message":"MultiChannelAlgorithmRouting: No output ports declared - returning empty","type":"print","time":8780}
{"suite":{"id":520,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/core/routing/models/routing_state_test.dart"},"type":"suite","time":8782}
{"test":{"id":521,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/core/routing/models/routing_state_test.dart","suiteID":520,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":8782}
{"testID":505,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8783}
{"test":{"id":522,"name":"Algorithms with No Ports Tests AlgorithmRouting should not generate fallback ports when IO parameters are empty","suiteID":450,"groupIDs":[502,503,504],"metadata":{"skip":false,"skipReason":null},"line":57,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/no_ports_test.dart"},"type":"testStart","time":8783}
{"testID":522,"messageType":"print","message":"AlgorithmRouting: Scanning 2 parameters for mode parameters","type":"print","time":8785}
{"testID":522,"messageType":"print","message":"AlgorithmRouting: Found 0 mode parameters: ()","type":"print","time":8785}
{"testID":522,"messageType":"print","message":"MultiChannelAlgorithmRouting: Initialized with 1 channels, stereo: false, mix: false","type":"print","time":8786}
{"testID":522,"messageType":"print","message":"MultiChannelAlgorithmRouting: No input ports declared - returning empty","type":"print","time":8786}
{"testID":522,"messageType":"print","message":"MultiChannelAlgorithmRouting: No output ports declared - returning empty","type":"print","time":8786}
{"testID":522,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8786}
{"group":{"id":523,"suiteID":450,"parentID":503,"name":"Algorithms with No Ports Tests MultiChannelAlgorithmRouting","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":101,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/no_ports_test.dart"},"type":"group","time":8786}
{"test":{"id":524,"name":"Algorithms with No Ports Tests MultiChannelAlgorithmRouting should return empty port lists when no routing parameters exist","suiteID":450,"groupIDs":[502,503,523],"metadata":{"skip":false,"skipReason":null},"line":102,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/no_ports_test.dart"},"type":"testStart","time":8786}
{"testID":524,"messageType":"print","message":"MultiChannelAlgorithmRouting: Initialized with 1 channels, stereo: false, mix: true","type":"print","time":8788}
{"testID":524,"messageType":"print","message":"MultiChannelAlgorithmRouting: No input ports declared - returning empty","type":"print","time":8788}
{"testID":524,"messageType":"print","message":"MultiChannelAlgorithmRouting: No output ports declared - returning empty","type":"print","time":8788}
{"testID":524,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8788}
{"test":{"id":525,"name":"Algorithms with No Ports Tests MultiChannelAlgorithmRouting should not generate default Main 1 ports when inputs/outputs are empty","suiteID":450,"groupIDs":[502,503,523],"metadata":{"skip":false,"skipReason":null},"line":123,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/no_ports_test.dart"},"type":"testStart","time":8788}
{"testID":525,"messageType":"print","message":"MultiChannelAlgorithmRouting: Initialized with 1 channels, stereo: false, mix: false","type":"print","time":8790}
{"testID":525,"messageType":"print","message":"MultiChannelAlgorithmRouting: No input ports declared - returning empty","type":"print","time":8790}
{"testID":525,"messageType":"print","message":"MultiChannelAlgorithmRouting: No output ports declared - returning empty","type":"print","time":8790}
{"testID":525,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8790}
{"group":{"id":526,"suiteID":450,"parentID":503,"name":"Algorithms with No Ports Tests RoutingEditorCubit Filtering","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":153,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/no_ports_test.dart"},"type":"group","time":8790}
{"test":{"id":527,"name":"Algorithms with No Ports Tests RoutingEditorCubit Filtering should filter out algorithms with no ports from visualization","suiteID":450,"groupIDs":[502,503,526],"metadata":{"skip":false,"skipReason":null},"line":154,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/no_ports_test.dart"},"type":"testStart","time":8790}
{"testID":527,"messageType":"print","message":"AlgorithmRouting: Scanning 1 parameters for mode parameters","type":"print","time":8792}
{"testID":527,"messageType":"print","message":"AlgorithmRouting: Found 0 mode parameters: ()","type":"print","time":8792}
{"testID":527,"messageType":"print","message":"MultiChannelAlgorithmRouting: Initialized with 1 channels, stereo: false, mix: false","type":"print","time":8792}
{"testID":527,"messageType":"print","message":"MultiChannelAlgorithmRouting: Generated 1 input ports (declared)","type":"print","time":8793}
{"testID":527,"messageType":"print","message":"AlgorithmRouting: Scanning 0 parameters for mode parameters","type":"print","time":8793}
{"testID":527,"messageType":"print","message":"AlgorithmRouting: Found 0 mode parameters: ()","type":"print","time":8793}
{"testID":527,"messageType":"print","message":"Notes algorithm detected (guid: note) - returning empty I/O parameters (no routing capability)","type":"print","time":8793}
{"testID":527,"messageType":"print","message":"MultiChannelAlgorithmRouting: Initialized with 1 channels, stereo: false, mix: false","type":"print","time":8793}
{"testID":527,"messageType":"print","message":"MultiChannelAlgorithmRouting: No input ports declared - returning empty","type":"print","time":8793}
{"testID":527,"messageType":"print","message":"MultiChannelAlgorithmRouting: No output ports declared - returning empty","type":"print","time":8793}
{"testID":527,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8794}
{"suite":{"id":528,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/core/routing/algorithm_loading_test.dart"},"type":"suite","time":8799}
{"test":{"id":529,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/core/routing/algorithm_loading_test.dart","suiteID":528,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":8799}
{"testID":457,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":8853}
{"group":{"id":530,"suiteID":456,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":23,"line":null,"column":null,"url":null},"type":"group","time":8853}
{"group":{"id":531,"suiteID":456,"parentID":530,"name":"Connection Model Tests","metadata":{"skip":false,"skipReason":null},"testCount":23,"line":5,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/connection_test.dart"},"type":"group","time":8853}
{"test":{"id":532,"name":"Connection Model Tests should create connection with required fields","suiteID":456,"groupIDs":[530,531],"metadata":{"skip":false,"skipReason":null},"line":6,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/connection_test.dart"},"type":"testStart","time":8853}
{"testID":464,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":8858}
{"group":{"id":533,"suiteID":463,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":9,"line":null,"column":null,"url":null},"type":"group","time":8859}
{"group":{"id":534,"suiteID":463,"parentID":533,"name":"Port Serialization Tests","metadata":{"skip":false,"skipReason":null},"testCount":9,"line":5,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_serialization_test.dart"},"type":"group","time":8859}
{"group":{"id":535,"suiteID":463,"parentID":534,"name":"Port Serialization Tests Direct Properties Serialization","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":6,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_serialization_test.dart"},"type":"group","time":8859}
{"test":{"id":536,"name":"Port Serialization Tests Direct Properties Serialization should serialize and deserialize all direct properties correctly","suiteID":463,"groupIDs":[533,534,535],"metadata":{"skip":false,"skipReason":null},"line":7,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_serialization_test.dart"},"type":"testStart","time":8859}
{"testID":532,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8866}
{"test":{"id":537,"name":"Connection Model Tests should create connection with all optional fields","suiteID":456,"groupIDs":[530,531],"metadata":{"skip":false,"skipReason":null},"line":24,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/connection_test.dart"},"type":"testStart","time":8867}
{"testID":537,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8869}
{"test":{"id":538,"name":"Connection Model Tests should serialize to and from JSON correctly","suiteID":456,"groupIDs":[530,531],"metadata":{"skip":false,"skipReason":null},"line":53,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/connection_test.dart"},"type":"testStart","time":8870}
{"testID":536,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8877}
{"test":{"id":539,"name":"Port Serialization Tests Direct Properties Serialization should serialize and deserialize ports with null values correctly","suiteID":463,"groupIDs":[533,534,535],"metadata":{"skip":false,"skipReason":null},"line":89,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_serialization_test.dart"},"type":"testStart","time":8877}
{"testID":538,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8879}
{"testID":539,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8879}
{"group":{"id":540,"suiteID":456,"parentID":531,"name":"Connection Model Tests Connection Status Tests","metadata":{"skip":false,"skipReason":null},"testCount":4,"line":99,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/connection_test.dart"},"type":"group","time":8879}
{"test":{"id":541,"name":"Connection Model Tests Connection Status Tests should correctly identify active connection","suiteID":456,"groupIDs":[530,531,540],"metadata":{"skip":false,"skipReason":null},"line":100,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/connection_test.dart"},"type":"testStart","time":8879}
{"test":{"id":542,"name":"Port Serialization Tests Direct Properties Serialization should handle edge case values in serialization","suiteID":463,"groupIDs":[533,534,535],"metadata":{"skip":false,"skipReason":null},"line":120,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_serialization_test.dart"},"type":"testStart","time":8879}
{"testID":541,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8881}
{"testID":542,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8881}
{"test":{"id":543,"name":"Connection Model Tests Connection Status Tests should correctly identify error connection","suiteID":456,"groupIDs":[530,531,540],"metadata":{"skip":false,"skipReason":null},"line":115,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/connection_test.dart"},"type":"testStart","time":8881}
{"group":{"id":544,"suiteID":463,"parentID":534,"name":"Port Serialization Tests JSON Structure Tests","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":149,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_serialization_test.dart"},"type":"group","time":8881}
{"test":{"id":545,"name":"Port Serialization Tests JSON Structure Tests should include all direct properties in JSON output","suiteID":463,"groupIDs":[533,534,544],"metadata":{"skip":false,"skipReason":null},"line":150,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_serialization_test.dart"},"type":"testStart","time":8881}
{"testID":543,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8882}
{"testID":545,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8883}
{"test":{"id":546,"name":"Connection Model Tests Connection Status Tests should correctly identify connecting connection","suiteID":456,"groupIDs":[530,531,540],"metadata":{"skip":false,"skipReason":null},"line":130,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/connection_test.dart"},"type":"testStart","time":8883}
{"test":{"id":547,"name":"Port Serialization Tests JSON Structure Tests should handle null values in JSON output correctly","suiteID":463,"groupIDs":[533,534,544],"metadata":{"skip":false,"skipReason":null},"line":185,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_serialization_test.dart"},"type":"testStart","time":8883}
{"testID":546,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8884}
{"testID":547,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8884}
{"test":{"id":548,"name":"Connection Model Tests Connection Status Tests should correctly identify disabled connection","suiteID":456,"groupIDs":[530,531,540],"metadata":{"skip":false,"skipReason":null},"line":145,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/connection_test.dart"},"type":"testStart","time":8884}
{"group":{"id":549,"suiteID":463,"parentID":534,"name":"Port Serialization Tests Backward Compatibility Tests","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":218,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_serialization_test.dart"},"type":"group","time":8884}
{"test":{"id":550,"name":"Port Serialization Tests Backward Compatibility Tests should handle JSON without direct properties (legacy format)","suiteID":463,"groupIDs":[533,534,549],"metadata":{"skip":false,"skipReason":null},"line":219,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_serialization_test.dart"},"type":"testStart","time":8884}
{"testID":548,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8886}
{"testID":550,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8886}
{"group":{"id":551,"suiteID":456,"parentID":531,"name":"Connection Model Tests Effective Gain Tests","metadata":{"skip":false,"skipReason":null},"testCount":4,"line":161,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/connection_test.dart"},"type":"group","time":8886}
{"test":{"id":552,"name":"Connection Model Tests Effective Gain Tests should return actual gain when not muted or inverted","suiteID":456,"groupIDs":[530,531,551],"metadata":{"skip":false,"skipReason":null},"line":162,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/connection_test.dart"},"type":"testStart","time":8886}
{"test":{"id":553,"name":"Port Serialization Tests Backward Compatibility Tests should handle mixed JSON with some direct properties","suiteID":463,"groupIDs":[533,534,549],"metadata":{"skip":false,"skipReason":null},"line":253,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_serialization_test.dart"},"type":"testStart","time":8886}
{"testID":552,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8888}
{"testID":553,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8888}
{"test":{"id":554,"name":"Connection Model Tests Effective Gain Tests should return zero gain when muted","suiteID":456,"groupIDs":[530,531,551],"metadata":{"skip":false,"skipReason":null},"line":176,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/connection_test.dart"},"type":"testStart","time":8888}
{"group":{"id":555,"suiteID":463,"parentID":534,"name":"Port Serialization Tests Serialization Round-trip Tests","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":282,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_serialization_test.dart"},"type":"group","time":8888}
{"test":{"id":556,"name":"Port Serialization Tests Serialization Round-trip Tests should maintain data integrity through multiple serialization cycles","suiteID":463,"groupIDs":[533,534,555],"metadata":{"skip":false,"skipReason":null},"line":283,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_serialization_test.dart"},"type":"testStart","time":8888}
{"testID":554,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8890}
{"test":{"id":557,"name":"Connection Model Tests Effective Gain Tests should return negative gain when inverted","suiteID":456,"groupIDs":[530,531,551],"metadata":{"skip":false,"skipReason":null},"line":190,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/connection_test.dart"},"type":"testStart","time":8890}
{"testID":556,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8891}
{"group":{"id":558,"suiteID":463,"parentID":534,"name":"Port Serialization Tests Performance Tests","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":348,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_serialization_test.dart"},"type":"group","time":8891}
{"test":{"id":559,"name":"Port Serialization Tests Performance Tests should handle large-scale serialization efficiently","suiteID":463,"groupIDs":[533,534,558],"metadata":{"skip":false,"skipReason":null},"line":349,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_serialization_test.dart"},"type":"testStart","time":8891}
{"testID":557,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8891}
{"test":{"id":560,"name":"Connection Model Tests Effective Gain Tests should return zero when both muted and inverted","suiteID":456,"groupIDs":[530,531,551],"metadata":{"skip":false,"skipReason":null},"line":204,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/connection_test.dart"},"type":"testStart","time":8892}
{"testID":560,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8893}
{"group":{"id":561,"suiteID":456,"parentID":531,"name":"Connection Model Tests Connection Helper Methods Tests","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":219,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/connection_test.dart"},"type":"group","time":8893}
{"test":{"id":562,"name":"Connection Model Tests Connection Helper Methods Tests withStatus should update status and modifiedAt","suiteID":456,"groupIDs":[530,531,561],"metadata":{"skip":false,"skipReason":null},"line":220,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/connection_test.dart"},"type":"testStart","time":8893}
{"testID":562,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8896}
{"test":{"id":563,"name":"Connection Model Tests Connection Helper Methods Tests withGain should update gain and modifiedAt","suiteID":456,"groupIDs":[530,531,561],"metadata":{"skip":false,"skipReason":null},"line":258,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/connection_test.dart"},"type":"testStart","time":8896}
{"testID":563,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8898}
{"group":{"id":564,"suiteID":456,"parentID":531,"name":"Connection Model Tests Connection Equality Tests","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":282,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/connection_test.dart"},"type":"group","time":8898}
{"test":{"id":565,"name":"Connection Model Tests Connection Equality Tests connections with same values should be equal","suiteID":456,"groupIDs":[530,531,564],"metadata":{"skip":false,"skipReason":null},"line":283,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/connection_test.dart"},"type":"testStart","time":8898}
{"testID":565,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8900}
{"test":{"id":566,"name":"Connection Model Tests Connection Equality Tests connections with different values should not be equal","suiteID":456,"groupIDs":[530,531,564],"metadata":{"skip":false,"skipReason":null},"line":304,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/connection_test.dart"},"type":"testStart","time":8900}
{"testID":566,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8902}
{"group":{"id":567,"suiteID":456,"parentID":531,"name":"Connection Model Tests Connection Copy Tests","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":323,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/connection_test.dart"},"type":"group","time":8902}
{"test":{"id":568,"name":"Connection Model Tests Connection Copy Tests should create modified copy with copyWith","suiteID":456,"groupIDs":[530,531,567],"metadata":{"skip":false,"skipReason":null},"line":324,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/connection_test.dart"},"type":"testStart","time":8902}
{"testID":568,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8903}
{"group":{"id":569,"suiteID":456,"parentID":531,"name":"Connection Model Tests Partial Connection Tests","metadata":{"skip":false,"skipReason":null},"testCount":7,"line":356,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/connection_test.dart"},"type":"group","time":8903}
{"test":{"id":570,"name":"Connection Model Tests Partial Connection Tests should create partial connection with bus endpoint","suiteID":456,"groupIDs":[530,531,569],"metadata":{"skip":false,"skipReason":null},"line":357,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/connection_test.dart"},"type":"testStart","time":8903}
{"testID":570,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8905}
{"test":{"id":571,"name":"Connection Model Tests Partial Connection Tests should identify partial connections correctly","suiteID":456,"groupIDs":[530,531,569],"metadata":{"skip":false,"skipReason":null},"line":374,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/connection_test.dart"},"type":"testStart","time":8905}
{"testID":571,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8906}
{"test":{"id":572,"name":"Connection Model Tests Partial Connection Tests should serialize partial connection to JSON correctly","suiteID":456,"groupIDs":[530,531,569],"metadata":{"skip":false,"skipReason":null},"line":395,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/connection_test.dart"},"type":"testStart","time":8906}
{"testID":559,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8907}
{"testID":572,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8908}
{"test":{"id":573,"name":"Connection Model Tests Partial Connection Tests should handle partial connection with input port","suiteID":456,"groupIDs":[530,531,569],"metadata":{"skip":false,"skipReason":null},"line":415,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/connection_test.dart"},"type":"testStart","time":8908}
{"testID":573,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8909}
{"test":{"id":574,"name":"Connection Model Tests Partial Connection Tests should maintain partial status through copyWith","suiteID":456,"groupIDs":[530,531,569],"metadata":{"skip":false,"skipReason":null},"line":433,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/connection_test.dart"},"type":"testStart","time":8909}
{"suite":{"id":575,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/core/routing/routing_implementations_test.dart"},"type":"suite","time":8911}
{"test":{"id":576,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/core/routing/routing_implementations_test.dart","suiteID":575,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":8911}
{"testID":574,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8912}
{"test":{"id":577,"name":"Connection Model Tests Partial Connection Tests should handle bus label for rendering","suiteID":456,"groupIDs":[530,531,569],"metadata":{"skip":false,"skipReason":null},"line":450,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/connection_test.dart"},"type":"testStart","time":8913}
{"testID":577,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8914}
{"test":{"id":578,"name":"Connection Model Tests Partial Connection Tests should differentiate between partial and full connections in equality","suiteID":456,"groupIDs":[530,531,569],"metadata":{"skip":false,"skipReason":null},"line":465,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/connection_test.dart"},"type":"testStart","time":8914}
{"testID":578,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":8915}
{"suite":{"id":579,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/core/routing/es5_bus_values_test.dart"},"type":"suite","time":8920}
{"test":{"id":580,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/core/routing/es5_bus_values_test.dart","suiteID":579,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":8920}
{"testID":491,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":9446}
{"group":{"id":581,"suiteID":490,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":32,"line":null,"column":null,"url":null},"type":"group","time":9446}
{"group":{"id":582,"suiteID":490,"parentID":581,"name":"OutputMode Enum Tests","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":5,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_test.dart"},"type":"group","time":9446}
{"test":{"id":583,"name":"OutputMode Enum Tests OutputMode should have add and replace values","suiteID":490,"groupIDs":[581,582],"metadata":{"skip":false,"skipReason":null},"line":6,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_test.dart"},"type":"testStart","time":9446}
{"testID":583,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9459}
{"test":{"id":584,"name":"OutputMode Enum Tests OutputMode should serialize to JSON correctly","suiteID":490,"groupIDs":[581,582],"metadata":{"skip":false,"skipReason":null},"line":12,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_test.dart"},"type":"testStart","time":9459}
{"testID":584,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9461}
{"group":{"id":585,"suiteID":490,"parentID":581,"name":"Port Model Tests","metadata":{"skip":false,"skipReason":null},"testCount":21,"line":18,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_test.dart"},"type":"group","time":9461}
{"test":{"id":586,"name":"Port Model Tests should create port with all required fields","suiteID":490,"groupIDs":[581,585],"metadata":{"skip":false,"skipReason":null},"line":19,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_test.dart"},"type":"testStart","time":9462}
{"testID":586,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9463}
{"test":{"id":587,"name":"Port Model Tests should create port with optional fields","suiteID":490,"groupIDs":[581,585],"metadata":{"skip":false,"skipReason":null},"line":34,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_test.dart"},"type":"testStart","time":9463}
{"testID":587,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9465}
{"test":{"id":588,"name":"Port Model Tests should create output port with outputMode","suiteID":490,"groupIDs":[581,585],"metadata":{"skip":false,"skipReason":null},"line":52,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_test.dart"},"type":"testStart","time":9465}
{"testID":588,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9467}
{"test":{"id":589,"name":"Port Model Tests should create output port with default add mode when not specified","suiteID":490,"groupIDs":[581,585],"metadata":{"skip":false,"skipReason":null},"line":64,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_test.dart"},"type":"testStart","time":9467}
{"testID":589,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9468}
{"test":{"id":590,"name":"Port Model Tests input port should not have outputMode","suiteID":490,"groupIDs":[581,585],"metadata":{"skip":false,"skipReason":null},"line":78,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_test.dart"},"type":"testStart","time":9469}
{"testID":590,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9470}
{"test":{"id":591,"name":"Port Model Tests should serialize to and from JSON correctly","suiteID":490,"groupIDs":[581,585],"metadata":{"skip":false,"skipReason":null},"line":92,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_test.dart"},"type":"testStart","time":9470}
{"testID":591,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9476}
{"test":{"id":592,"name":"Port Model Tests should serialize port with outputMode to and from JSON correctly","suiteID":490,"groupIDs":[581,585],"metadata":{"skip":false,"skipReason":null},"line":116,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_test.dart"},"type":"testStart","time":9476}
{"testID":592,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9477}
{"group":{"id":593,"suiteID":490,"parentID":585,"name":"Port Model Tests Port Direction Tests","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":136,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_test.dart"},"type":"group","time":9478}
{"test":{"id":594,"name":"Port Model Tests Port Direction Tests input port should be identified correctly","suiteID":490,"groupIDs":[581,585,593],"metadata":{"skip":false,"skipReason":null},"line":137,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_test.dart"},"type":"testStart","time":9478}
{"testID":594,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9480}
{"test":{"id":595,"name":"Port Model Tests Port Direction Tests output port should be identified correctly","suiteID":490,"groupIDs":[581,585,593],"metadata":{"skip":false,"skipReason":null},"line":149,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_test.dart"},"type":"testStart","time":9480}
{"testID":595,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9481}
{"test":{"id":596,"name":"Port Model Tests Port Direction Tests bidirectional port should be both input and output","suiteID":490,"groupIDs":[581,585,593],"metadata":{"skip":false,"skipReason":null},"line":161,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_test.dart"},"type":"testStart","time":9481}
{"testID":596,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9482}
{"group":{"id":597,"suiteID":490,"parentID":585,"name":"Port Model Tests Port Connection Compatibility Tests","metadata":{"skip":false,"skipReason":null},"testCount":4,"line":174,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_test.dart"},"type":"group","time":9482}
{"test":{"id":598,"name":"Port Model Tests Port Connection Compatibility Tests output port should connect to input port","suiteID":490,"groupIDs":[581,585,597],"metadata":{"skip":false,"skipReason":null},"line":175,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_test.dart"},"type":"testStart","time":9482}
{"testID":598,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9484}
{"test":{"id":599,"name":"Port Model Tests Port Connection Compatibility Tests input port should not connect to input port","suiteID":490,"groupIDs":[581,585,597],"metadata":{"skip":false,"skipReason":null},"line":194,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_test.dart"},"type":"testStart","time":9484}
{"testID":599,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9485}
{"test":{"id":600,"name":"Port Model Tests Port Connection Compatibility Tests output port should not connect to output port","suiteID":490,"groupIDs":[581,585,597],"metadata":{"skip":false,"skipReason":null},"line":212,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_test.dart"},"type":"testStart","time":9485}
{"testID":600,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9487}
{"test":{"id":601,"name":"Port Model Tests Port Connection Compatibility Tests bidirectional port should connect to any port","suiteID":490,"groupIDs":[581,585,597],"metadata":{"skip":false,"skipReason":null},"line":230,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_test.dart"},"type":"testStart","time":9487}
{"testID":601,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9489}
{"group":{"id":602,"suiteID":490,"parentID":585,"name":"Port Model Tests Port Type Compatibility Tests","metadata":{"skip":false,"skipReason":null},"testCount":4,"line":259,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_test.dart"},"type":"group","time":9489}
{"test":{"id":603,"name":"Port Model Tests Port Type Compatibility Tests same types should be compatible","suiteID":490,"groupIDs":[581,585,602],"metadata":{"skip":false,"skipReason":null},"line":260,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_test.dart"},"type":"testStart","time":9489}
{"testID":603,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9490}
{"test":{"id":604,"name":"Port Model Tests Port Type Compatibility Tests audio and CV should be compatible","suiteID":490,"groupIDs":[581,585,602],"metadata":{"skip":false,"skipReason":null},"line":278,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_test.dart"},"type":"testStart","time":9490}
{"testID":604,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9491}
{"test":{"id":605,"name":"Port Model Tests Port Type Compatibility Tests clock and gate should be compatible","suiteID":490,"groupIDs":[581,585,602],"metadata":{"skip":false,"skipReason":null},"line":297,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_test.dart"},"type":"testStart","time":9491}
{"testID":605,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9493}
{"test":{"id":606,"name":"Port Model Tests Port Type Compatibility Tests audio and gate should not be directly compatible","suiteID":490,"groupIDs":[581,585,602],"metadata":{"skip":false,"skipReason":null},"line":316,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_test.dart"},"type":"testStart","time":9493}
{"testID":606,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9494}
{"group":{"id":607,"suiteID":490,"parentID":585,"name":"Port Model Tests Port Equality Tests","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":338,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_test.dart"},"type":"group","time":9494}
{"test":{"id":608,"name":"Port Model Tests Port Equality Tests ports with same values should be equal","suiteID":490,"groupIDs":[581,585,607],"metadata":{"skip":false,"skipReason":null},"line":339,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_test.dart"},"type":"testStart","time":9494}
{"testID":608,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9496}
{"test":{"id":609,"name":"Port Model Tests Port Equality Tests ports with different values should not be equal","suiteID":490,"groupIDs":[581,585,607],"metadata":{"skip":false,"skipReason":null},"line":358,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_test.dart"},"type":"testStart","time":9496}
{"testID":609,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9498}
{"group":{"id":610,"suiteID":490,"parentID":585,"name":"Port Model Tests Port Copy Tests","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":377,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_test.dart"},"type":"group","time":9498}
{"test":{"id":611,"name":"Port Model Tests Port Copy Tests should create modified copy with copyWith","suiteID":490,"groupIDs":[581,585,610],"metadata":{"skip":false,"skipReason":null},"line":378,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_test.dart"},"type":"testStart","time":9498}
{"testID":611,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9500}
{"group":{"id":612,"suiteID":490,"parentID":581,"name":"Direct Properties Tests","metadata":{"skip":false,"skipReason":null},"testCount":9,"line":401,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_test.dart"},"type":"group","time":9500}
{"test":{"id":613,"name":"Direct Properties Tests should create port with poly voice properties","suiteID":490,"groupIDs":[581,612],"metadata":{"skip":false,"skipReason":null},"line":402,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_test.dart"},"type":"testStart","time":9500}
{"testID":613,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9502}
{"test":{"id":614,"name":"Direct Properties Tests should create port with multi-channel properties","suiteID":490,"groupIDs":[581,612],"metadata":{"skip":false,"skipReason":null},"line":416,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_test.dart"},"type":"testStart","time":9502}
{"testID":614,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9503}
{"test":{"id":615,"name":"Direct Properties Tests should create port with bus and parameter properties","suiteID":490,"groupIDs":[581,612],"metadata":{"skip":false,"skipReason":null},"line":436,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_test.dart"},"type":"testStart","time":9503}
{"testID":615,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9505}
{"test":{"id":616,"name":"Direct Properties Tests should create port with default direct property values","suiteID":490,"groupIDs":[581,612],"metadata":{"skip":false,"skipReason":null},"line":454,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_test.dart"},"type":"testStart","time":9505}
{"testID":616,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9506}
{"test":{"id":617,"name":"Direct Properties Tests should serialize direct properties to and from JSON correctly","suiteID":490,"groupIDs":[581,612],"metadata":{"skip":false,"skipReason":null},"line":475,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_test.dart"},"type":"testStart","time":9506}
{"testID":617,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9507}
{"test":{"id":618,"name":"Direct Properties Tests should handle copyWith with direct properties","suiteID":490,"groupIDs":[581,612],"metadata":{"skip":false,"skipReason":null},"line":523,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_test.dart"},"type":"testStart","time":9507}
{"testID":618,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9509}
{"group":{"id":619,"suiteID":490,"parentID":612,"name":"Direct Properties Tests Direct Properties Validation","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":546,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_test.dart"},"type":"group","time":9509}
{"test":{"id":620,"name":"Direct Properties Tests Direct Properties Validation should handle null voice number with poly voice false","suiteID":490,"groupIDs":[581,612,619],"metadata":{"skip":false,"skipReason":null},"line":547,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_test.dart"},"type":"testStart","time":9509}
{"testID":620,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9510}
{"test":{"id":621,"name":"Direct Properties Tests Direct Properties Validation should handle null channel number with multi-channel false","suiteID":490,"groupIDs":[581,612,619],"metadata":{"skip":false,"skipReason":null},"line":561,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_test.dart"},"type":"testStart","time":9511}
{"testID":621,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9512}
{"test":{"id":622,"name":"Direct Properties Tests Direct Properties Validation should handle stereo properties independently","suiteID":490,"groupIDs":[581,612,619],"metadata":{"skip":false,"skipReason":null},"line":575,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/port_test.dart"},"type":"testStart","time":9512}
{"testID":622,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9513}
{"suite":{"id":623,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/core/routing/connection_discovery_service_test.dart"},"type":"suite","time":9517}
{"test":{"id":624,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/core/routing/connection_discovery_service_test.dart","suiteID":623,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":9517}
{"testID":521,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":9689}
{"group":{"id":625,"suiteID":520,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":24,"line":null,"column":null,"url":null},"type":"group","time":9690}
{"group":{"id":626,"suiteID":520,"parentID":625,"name":"RoutingState Model Tests","metadata":{"skip":false,"skipReason":null},"testCount":24,"line":7,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/routing_state_test.dart"},"type":"group","time":9690}
{"test":{"id":627,"name":"RoutingState Model Tests should create routing state with default values","suiteID":520,"groupIDs":[625,626],"metadata":{"skip":false,"skipReason":null},"line":61,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/routing_state_test.dart"},"type":"testStart","time":9690}
{"testID":627,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9704}
{"test":{"id":628,"name":"RoutingState Model Tests should create routing state with all fields","suiteID":520,"groupIDs":[625,626],"metadata":{"skip":false,"skipReason":null},"line":72,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/routing_state_test.dart"},"type":"testStart","time":9704}
{"testID":628,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9708}
{"group":{"id":629,"suiteID":520,"parentID":626,"name":"RoutingState Model Tests Status Check Methods Tests","metadata":{"skip":false,"skipReason":null},"testCount":4,"line":122,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/routing_state_test.dart"},"type":"group","time":9708}
{"test":{"id":630,"name":"RoutingState Model Tests Status Check Methods Tests should correctly identify ready state","suiteID":520,"groupIDs":[625,626,629],"metadata":{"skip":false,"skipReason":null},"line":123,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/routing_state_test.dart"},"type":"testStart","time":9708}
{"testID":630,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9710}
{"test":{"id":631,"name":"RoutingState Model Tests Status Check Methods Tests should correctly identify updating state","suiteID":520,"groupIDs":[625,626,629],"metadata":{"skip":false,"skipReason":null},"line":132,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/routing_state_test.dart"},"type":"testStart","time":9710}
{"testID":631,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9711}
{"test":{"id":632,"name":"RoutingState Model Tests Status Check Methods Tests should correctly identify error state","suiteID":520,"groupIDs":[625,626,629],"metadata":{"skip":false,"skipReason":null},"line":141,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/routing_state_test.dart"},"type":"testStart","time":9711}
{"testID":529,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":9713}
{"group":{"id":633,"suiteID":528,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":4,"line":null,"column":null,"url":null},"type":"group","time":9714}
{"group":{"id":634,"suiteID":528,"parentID":633,"name":"AlgorithmRouting Loading Tests","metadata":{"skip":false,"skipReason":null},"testCount":4,"line":11,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/algorithm_loading_test.dart"},"type":"group","time":9714}
{"test":{"id":635,"name":"AlgorithmRouting Loading Tests (setUpAll)","suiteID":528,"groupIDs":[633,634],"metadata":{"skip":false,"skipReason":null},"line":14,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/algorithm_loading_test.dart"},"type":"testStart","time":9714}
{"testID":632,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9714}
{"test":{"id":636,"name":"RoutingState Model Tests Status Check Methods Tests should correctly identify initializing state","suiteID":520,"groupIDs":[625,626,629],"metadata":{"skip":false,"skipReason":null},"line":150,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/routing_state_test.dart"},"type":"testStart","time":9714}
{"testID":636,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9716}
{"group":{"id":637,"suiteID":520,"parentID":626,"name":"RoutingState Model Tests Port and Connection Access Tests","metadata":{"skip":false,"skipReason":null},"testCount":8,"line":160,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/routing_state_test.dart"},"type":"group","time":9716}
{"test":{"id":638,"name":"RoutingState Model Tests Port and Connection Access Tests should return all ports combined","suiteID":520,"groupIDs":[625,626,637],"metadata":{"skip":false,"skipReason":null},"line":171,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/routing_state_test.dart"},"type":"testStart","time":9716}
{"testID":638,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9718}
{"test":{"id":639,"name":"RoutingState Model Tests Port and Connection Access Tests should count active connections correctly","suiteID":520,"groupIDs":[625,626,637],"metadata":{"skip":false,"skipReason":null},"line":181,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/routing_state_test.dart"},"type":"testStart","time":9718}
{"testID":639,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9720}
{"test":{"id":640,"name":"RoutingState Model Tests Port and Connection Access Tests should count error connections correctly","suiteID":520,"groupIDs":[625,626,637],"metadata":{"skip":false,"skipReason":null},"line":185,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/routing_state_test.dart"},"type":"testStart","time":9720}
{"testID":640,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9721}
{"test":{"id":641,"name":"RoutingState Model Tests Port and Connection Access Tests should find port by ID","suiteID":520,"groupIDs":[625,626,637],"metadata":{"skip":false,"skipReason":null},"line":189,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/routing_state_test.dart"},"type":"testStart","time":9721}
{"testID":641,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9723}
{"test":{"id":642,"name":"RoutingState Model Tests Port and Connection Access Tests should find connection by ID","suiteID":520,"groupIDs":[625,626,637],"metadata":{"skip":false,"skipReason":null},"line":197,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/routing_state_test.dart"},"type":"testStart","time":9723}
{"testID":642,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9724}
{"test":{"id":643,"name":"RoutingState Model Tests Port and Connection Access Tests should get connections for port","suiteID":520,"groupIDs":[625,626,637],"metadata":{"skip":false,"skipReason":null},"line":205,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/routing_state_test.dart"},"type":"testStart","time":9725}
{"testID":643,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9726}
{"test":{"id":644,"name":"RoutingState Model Tests Port and Connection Access Tests should get input connections for port","suiteID":520,"groupIDs":[625,626,637],"metadata":{"skip":false,"skipReason":null},"line":218,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/routing_state_test.dart"},"type":"testStart","time":9726}
{"testID":644,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9727}
{"test":{"id":645,"name":"RoutingState Model Tests Port and Connection Access Tests should get output connections for port","suiteID":520,"groupIDs":[625,626,637],"metadata":{"skip":false,"skipReason":null},"line":227,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/routing_state_test.dart"},"type":"testStart","time":9727}
{"testID":645,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9729}
{"group":{"id":646,"suiteID":520,"parentID":626,"name":"RoutingState Model Tests State Modification Tests","metadata":{"skip":false,"skipReason":null},"testCount":6,"line":237,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/routing_state_test.dart"},"type":"group","time":9729}
{"test":{"id":647,"name":"RoutingState Model Tests State Modification Tests withStatus should update status and lastUpdated","suiteID":520,"groupIDs":[625,626,646],"metadata":{"skip":false,"skipReason":null},"line":238,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/routing_state_test.dart"},"type":"testStart","time":9729}
{"testID":647,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9733}
{"test":{"id":648,"name":"RoutingState Model Tests State Modification Tests withAddedConnection should add connection and update lastUpdated","suiteID":520,"groupIDs":[625,626,646],"metadata":{"skip":false,"skipReason":null},"line":261,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/routing_state_test.dart"},"type":"testStart","time":9733}
{"testID":648,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9735}
{"test":{"id":649,"name":"RoutingState Model Tests State Modification Tests withRemovedConnection should remove connection and update lastUpdated","suiteID":520,"groupIDs":[625,626,646],"metadata":{"skip":false,"skipReason":null},"line":280,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/routing_state_test.dart"},"type":"testStart","time":9735}
{"testID":649,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9736}
{"test":{"id":650,"name":"RoutingState Model Tests State Modification Tests withUpdatedConnection should update existing connection","suiteID":520,"groupIDs":[625,626,646],"metadata":{"skip":false,"skipReason":null},"line":293,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/routing_state_test.dart"},"type":"testStart","time":9737}
{"testID":650,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9740}
{"test":{"id":651,"name":"RoutingState Model Tests State Modification Tests withUpdatedPorts should update ports and lastUpdated","suiteID":520,"groupIDs":[625,626,646],"metadata":{"skip":false,"skipReason":null},"line":309,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/routing_state_test.dart"},"type":"testStart","time":9740}
{"testID":651,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9742}
{"test":{"id":652,"name":"RoutingState Model Tests State Modification Tests withUpdatedPorts should update only specified ports","suiteID":520,"groupIDs":[625,626,646],"metadata":{"skip":false,"skipReason":null},"line":324,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/routing_state_test.dart"},"type":"testStart","time":9742}
{"testID":652,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9744}
{"group":{"id":653,"suiteID":520,"parentID":626,"name":"RoutingState Model Tests State Validation Tests","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":340,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/routing_state_test.dart"},"type":"group","time":9744}
{"test":{"id":654,"name":"RoutingState Model Tests State Validation Tests should validate valid state","suiteID":520,"groupIDs":[625,626,653],"metadata":{"skip":false,"skipReason":null},"line":341,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/routing_state_test.dart"},"type":"testStart","time":9744}
{"testID":654,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9745}
{"test":{"id":655,"name":"RoutingState Model Tests State Validation Tests should invalidate state with invalid connections","suiteID":520,"groupIDs":[625,626,653],"metadata":{"skip":false,"skipReason":null},"line":351,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/routing_state_test.dart"},"type":"testStart","time":9745}
{"testID":635,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":9747}
{"testID":655,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9747}
{"test":{"id":656,"name":"AlgorithmRouting Loading Tests should load all algorithms from JSON without errors","suiteID":528,"groupIDs":[633,634],"metadata":{"skip":false,"skipReason":null},"line":21,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/algorithm_loading_test.dart"},"type":"testStart","time":9747}
{"group":{"id":657,"suiteID":520,"parentID":626,"name":"RoutingState Model Tests Routing State Equality Tests","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":371,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/routing_state_test.dart"},"type":"group","time":9747}
{"test":{"id":658,"name":"RoutingState Model Tests Routing State Equality Tests states with same values should be equal","suiteID":520,"groupIDs":[625,626,657],"metadata":{"skip":false,"skipReason":null},"line":372,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/routing_state_test.dart"},"type":"testStart","time":9747}
{"testID":658,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9751}
{"test":{"id":659,"name":"RoutingState Model Tests Routing State Equality Tests states with different values should not be equal","suiteID":520,"groupIDs":[625,626,657],"metadata":{"skip":false,"skipReason":null},"line":389,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/models/routing_state_test.dart"},"type":"testStart","time":9751}
{"testID":659,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9753}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Scanning 7 parameters for mode parameters","type":"print","time":9755}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Checking output parameter CV Output: unit=1, enums=[Value 1, Value 2, Value 3, Value 4, Value 5, Value 6, Value 7, Value 8, Value 9, Value 10, Value 11, Value 12, Value 13, Value 14, Value 15, Value 16, Value 17, Value 18, Value 19, Value 20, Value 21, Value 22, Value 23, Value 24, Value 25, Value 26, Value 27, Value 28], isModeParam=false","type":"print","time":9756}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Checking output parameter CV Output mode: unit=1, enums=[Add, Replace], isModeParam=true","type":"print","time":9756}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Found mode parameter: CV Output mode -> paramNum=2, value=0","type":"print","time":9756}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Found 1 mode parameters: (CV Output mode)","type":"print","time":9757}
{"suite":{"id":660,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/core/routing/services/connection_validator_test.dart"},"type":"suite","time":9771}
{"test":{"id":661,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/core/routing/services/connection_validator_test.dart","suiteID":660,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":9771}
{"testID":656,"messageType":"print","message":"Found output mode \"CV Output mode\" for output \"CV Output\" with value 0","type":"print","time":9772}
{"testID":656,"messageType":"print","message":"Found mode parameter number mapping for \"CV Output\" using key \"CV Output mode\". Parameter number: 2","type":"print","time":9772}
{"testID":656,"messageType":"print","message":"MultiChannelAlgorithmRouting: Initialized with 1 channels, stereo: false, mix: false","type":"print","time":9772}
{"testID":656,"messageType":"print","message":"MultiChannelAlgorithmRouting: No input ports declared - returning empty","type":"print","time":9772}
{"testID":656,"messageType":"print","message":"MultiChannelRouting: Found mode parameter for CV Output: 2","type":"print","time":9772}
{"testID":656,"messageType":"print","message":"MultiChannelAlgorithmRouting: Generated 1 output ports (declared)","type":"print","time":9772}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Scanning 13 parameters for mode parameters","type":"print","time":9772}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Found mode parameter: Input mode -> paramNum=1, value=0","type":"print","time":9772}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Checking output parameter Output: unit=1, enums=[Value 1, Value 2, Value 3, Value 4, Value 5, Value 6, Value 7, Value 8, Value 9, Value 10, Value 11, Value 12, Value 13, Value 14, Value 15, Value 16, Value 17, Value 18, Value 19, Value 20, Value 21, Value 22, Value 23, Value 24, Value 25, Value 26, Value 27, Value 28], isModeParam=false","type":"print","time":9772}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Checking output parameter Output mode: unit=1, enums=[Add, Replace], isModeParam=true","type":"print","time":9772}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Found mode parameter: Output mode -> paramNum=12, value=0","type":"print","time":9772}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Found 2 mode parameters: (Input mode, Output mode)","type":"print","time":9772}
{"testID":656,"messageType":"print","message":"Found output mode \"Output mode\" for output \"Output\" with value 0","type":"print","time":9772}
{"testID":656,"messageType":"print","message":"Found mode parameter number mapping for \"Output\" using key \"Output mode\". Parameter number: 12","type":"print","time":9772}
{"testID":656,"messageType":"print","message":"MultiChannelAlgorithmRouting: Initialized with 1 channels, stereo: false, mix: false","type":"print","time":9772}
{"testID":656,"messageType":"print","message":"MultiChannelAlgorithmRouting: Generated 1 input ports (declared)","type":"print","time":9772}
{"testID":656,"messageType":"print","message":"MultiChannelRouting: Found mode parameter for Output: 12","type":"print","time":9772}
{"testID":656,"messageType":"print","message":"MultiChannelAlgorithmRouting: Generated 1 output ports (declared)","type":"print","time":9772}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Scanning 9 parameters for mode parameters","type":"print","time":9772}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Checking output parameter Output 1: unit=1, enums=[Value 1, Value 2, Value 3, Value 4, Value 5, Value 6, Value 7, Value 8, Value 9, Value 10, Value 11, Value 12, Value 13, Value 14, Value 15, Value 16, Value 17, Value 18, Value 19, Value 20, Value 21, Value 22, Value 23, Value 24, Value 25, Value 26, Value 27, Value 28], isModeParam=false","type":"print","time":9772}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Checking output parameter Output 1 mode: unit=1, enums=[Add, Replace], isModeParam=true","type":"print","time":9772}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Found mode parameter: Output 1 mode -> paramNum=3, value=0","type":"print","time":9772}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Found 1 mode parameters: (Output 1 mode)","type":"print","time":9772}
{"testID":656,"messageType":"print","message":"Found output mode \"Output 1 mode\" for output \"Output 1\" with value 0","type":"print","time":9772}
{"testID":656,"messageType":"print","message":"Found mode parameter number mapping for \"Output 1\" using key \"Output 1 mode\". Parameter number: 3","type":"print","time":9775}
{"testID":656,"messageType":"print","message":"MultiChannelAlgorithmRouting: Initialized with 1 channels, stereo: false, mix: false","type":"print","time":9775}
{"testID":656,"messageType":"print","message":"MultiChannelAlgorithmRouting: Generated 1 input ports (declared)","type":"print","time":9775}
{"testID":656,"messageType":"print","message":"MultiChannelRouting: Found mode parameter for Output 1: 3","type":"print","time":9775}
{"testID":656,"messageType":"print","message":"MultiChannelAlgorithmRouting: Generated 1 output ports (declared)","type":"print","time":9775}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Scanning 54 parameters for mode parameters","type":"print","time":9775}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Found mode parameter: Reset mode -> paramNum=6, value=0","type":"print","time":9775}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Found mode parameter: Sustain mode -> paramNum=29, value=0","type":"print","time":9775}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Checking output parameter Output to breakout: unit=2, enums=[Value 0, Value 1], isModeParam=false","type":"print","time":9775}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Checking output parameter Output to Select Bus: unit=2, enums=[Value 0, Value 1], isModeParam=false","type":"print","time":9775}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Checking output parameter Output to USB: unit=2, enums=[Value 0, Value 1], isModeParam=false","type":"print","time":9775}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Checking output parameter Output to internal: unit=2, enums=[Value 0, Value 1], isModeParam=false","type":"print","time":9775}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Checking output parameter Gate output: unit=1, enums=[Value 0, Value 1, Value 2, Value 3, Value 4, Value 5, Value 6, Value 7, Value 8, Value 9, Value 10, Value 11, Value 12, Value 13, Value 14, Value 15, Value 16, Value 17, Value 18, Value 19, Value 20, Value 21, Value 22, Value 23, Value 24, Value 25, Value 26, Value 27, Value 28], isModeParam=false","type":"print","time":9775}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Found mode parameter: Gate mode -> paramNum=49, value=0","type":"print","time":9775}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Checking output parameter Pitch output: unit=1, enums=[Value 0, Value 1, Value 2, Value 3, Value 4, Value 5, Value 6, Value 7, Value 8, Value 9, Value 10, Value 11, Value 12, Value 13, Value 14, Value 15, Value 16, Value 17, Value 18, Value 19, Value 20, Value 21, Value 22, Value 23, Value 24, Value 25, Value 26, Value 27, Value 28], isModeParam=false","type":"print","time":9775}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Found mode parameter: Pitch mode -> paramNum=51, value=0","type":"print","time":9775}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Checking output parameter Velocity output: unit=1, enums=[Value 0, Value 1, Value 2, Value 3, Value 4, Value 5, Value 6, Value 7, Value 8, Value 9, Value 10, Value 11, Value 12, Value 13, Value 14, Value 15, Value 16, Value 17, Value 18, Value 19, Value 20, Value 21, Value 22, Value 23, Value 24, Value 25, Value 26, Value 27, Value 28], isModeParam=false","type":"print","time":9776}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Found mode parameter: Velocity mode -> paramNum=53, value=0","type":"print","time":9776}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Found 5 mode parameters: (Reset mode, Sustain mode, Gate mode, Pitch mode, Velocity mode)","type":"print","time":9776}
{"testID":656,"messageType":"print","message":"Found output mode \"Gate mode\" for output \"Gate output\" with value 0","type":"print","time":9776}
{"testID":656,"messageType":"print","message":"Found mode parameter number mapping for \"Gate output\" using key \"Gate mode\". Parameter number: 49","type":"print","time":9776}
{"testID":656,"messageType":"print","message":"Found output mode \"Pitch mode\" for output \"Pitch output\" with value 0","type":"print","time":9776}
{"testID":656,"messageType":"print","message":"Found mode parameter number mapping for \"Pitch output\" using key \"Pitch mode\". Parameter number: 51","type":"print","time":9776}
{"testID":656,"messageType":"print","message":"Found output mode \"Velocity mode\" for output \"Velocity output\" with value 0","type":"print","time":9777}
{"testID":656,"messageType":"print","message":"Found mode parameter number mapping for \"Velocity output\" using key \"Velocity mode\". Parameter number: 53","type":"print","time":9777}
{"testID":656,"messageType":"print","message":"MultiChannelAlgorithmRouting: Initialized with 1 channels, stereo: false, mix: false","type":"print","time":9777}
{"testID":656,"messageType":"print","message":"MultiChannelAlgorithmRouting: Generated 14 input ports (declared)","type":"print","time":9777}
{"testID":656,"messageType":"print","message":"MultiChannelRouting: Found mode parameter for Gate output: 49","type":"print","time":9777}
{"testID":656,"messageType":"print","message":"MultiChannelRouting: Found mode parameter for Pitch output: 51","type":"print","time":9777}
{"testID":656,"messageType":"print","message":"MultiChannelRouting: Found mode parameter for Velocity output: 53","type":"print","time":9777}
{"testID":656,"messageType":"print","message":"MultiChannelAlgorithmRouting: Generated 3 output ports (declared)","type":"print","time":9777}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Scanning 10 parameters for mode parameters","type":"print","time":9778}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Checking output parameter Output: unit=1, enums=[Value 0, Value 1, Value 2, Value 3, Value 4, Value 5, Value 6, Value 7, Value 8, Value 9, Value 10, Value 11, Value 12, Value 13, Value 14, Value 15, Value 16, Value 17, Value 18, Value 19, Value 20, Value 21, Value 22, Value 23, Value 24, Value 25, Value 26, Value 27, Value 28], isModeParam=false","type":"print","time":9778}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Checking output parameter Output mode: unit=1, enums=[Add, Replace], isModeParam=true","type":"print","time":9778}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Found mode parameter: Output mode -> paramNum=9, value=1","type":"print","time":9778}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Found 1 mode parameters: (Output mode)","type":"print","time":9779}
{"testID":656,"messageType":"print","message":"Found output mode \"Output mode\" for output \"Output\" with value 1","type":"print","time":9779}
{"testID":656,"messageType":"print","message":"Found mode parameter number mapping for \"Output\" using key \"Output mode\". Parameter number: 9","type":"print","time":9779}
{"testID":656,"messageType":"print","message":"MultiChannelAlgorithmRouting: Initialized with 1 channels, stereo: false, mix: false","type":"print","time":9779}
{"testID":656,"messageType":"print","message":"MultiChannelAlgorithmRouting: Generated 1 input ports (declared)","type":"print","time":9779}
{"testID":656,"messageType":"print","message":"MultiChannelRouting: Found mode parameter for Output: 9","type":"print","time":9779}
{"testID":656,"messageType":"print","message":"MultiChannelAlgorithmRouting: Generated 1 output ports (declared)","type":"print","time":9779}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Scanning 13 parameters for mode parameters","type":"print","time":9779}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Found 0 mode parameters: ()","type":"print","time":9780}
{"testID":656,"messageType":"print","message":"MultiChannelAlgorithmRouting: Initialized with 1 channels, stereo: false, mix: false","type":"print","time":9780}
{"testID":656,"messageType":"print","message":"MultiChannelAlgorithmRouting: Generated 2 input ports (declared)","type":"print","time":9780}
{"testID":656,"messageType":"print","message":"MultiChannelAlgorithmRouting: No output ports declared - returning empty","type":"print","time":9780}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Scanning 47 parameters for mode parameters","type":"print","time":9781}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Checking output parameter Left output: unit=1, enums=[Value 1, Value 2, Value 3, Value 4, Value 5, Value 6, Value 7, Value 8, Value 9, Value 10, Value 11, Value 12, Value 13, Value 14, Value 15, Value 16, Value 17, Value 18, Value 19, Value 20, Value 21, Value 22, Value 23, Value 24, Value 25, Value 26, Value 27, Value 28], isModeParam=false","type":"print","time":9781}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Checking output parameter Right output: unit=1, enums=[Value 1, Value 2, Value 3, Value 4, Value 5, Value 6, Value 7, Value 8, Value 9, Value 10, Value 11, Value 12, Value 13, Value 14, Value 15, Value 16, Value 17, Value 18, Value 19, Value 20, Value 21, Value 22, Value 23, Value 24, Value 25, Value 26, Value 27, Value 28], isModeParam=false","type":"print","time":9781}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Checking output parameter Output mode: unit=1, enums=[Add, Replace], isModeParam=true","type":"print","time":9781}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Found mode parameter: Output mode -> paramNum=41, value=0","type":"print","time":9782}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Checking output parameter FX Loop output L: unit=1, enums=[Value 0, Value 1, Value 2, Value 3, Value 4, Value 5, Value 6, Value 7, Value 8, Value 9, Value 10, Value 11, Value 12, Value 13, Value 14, Value 15, Value 16, Value 17, Value 18, Value 19, Value 20, Value 21, Value 22, Value 23, Value 24, Value 25, Value 26, Value 27, Value 28], isModeParam=false","type":"print","time":9782}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Checking output parameter FX Loop output R: unit=1, enums=[Value 0, Value 1, Value 2, Value 3, Value 4, Value 5, Value 6, Value 7, Value 8, Value 9, Value 10, Value 11, Value 12, Value 13, Value 14, Value 15, Value 16, Value 17, Value 18, Value 19, Value 20, Value 21, Value 22, Value 23, Value 24, Value 25, Value 26, Value 27, Value 28], isModeParam=false","type":"print","time":9782}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Found 1 mode parameters: (Output mode)","type":"print","time":9782}
{"testID":656,"messageType":"print","message":"MultiChannelAlgorithmRouting: Initialized with 1 channels, stereo: false, mix: false","type":"print","time":9782}
{"testID":656,"messageType":"print","message":"MultiChannelAlgorithmRouting: Generated 6 input ports (declared)","type":"print","time":9782}
{"testID":656,"messageType":"print","message":"MultiChannelAlgorithmRouting: Generated 4 output ports (declared)","type":"print","time":9783}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Scanning 7 parameters for mode parameters","type":"print","time":9783}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Checking output parameter Output 1: unit=1, enums=[Value 1, Value 2, Value 3, Value 4, Value 5, Value 6, Value 7, Value 8, Value 9, Value 10, Value 11, Value 12, Value 13, Value 14, Value 15, Value 16, Value 17, Value 18, Value 19, Value 20, Value 21, Value 22, Value 23, Value 24, Value 25, Value 26, Value 27, Value 28], isModeParam=false","type":"print","time":9783}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Checking output parameter Output 1 mode: unit=1, enums=[Add, Replace], isModeParam=true","type":"print","time":9783}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Found mode parameter: Output 1 mode -> paramNum=3, value=0","type":"print","time":9783}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Found 1 mode parameters: (Output 1 mode)","type":"print","time":9783}
{"testID":656,"messageType":"print","message":"Found output mode \"Output 1 mode\" for output \"Output 1\" with value 0","type":"print","time":9784}
{"testID":656,"messageType":"print","message":"Found mode parameter number mapping for \"Output 1\" using key \"Output 1 mode\". Parameter number: 3","type":"print","time":9784}
{"testID":656,"messageType":"print","message":"MultiChannelAlgorithmRouting: Initialized with 1 channels, stereo: false, mix: false","type":"print","time":9784}
{"testID":656,"messageType":"print","message":"MultiChannelAlgorithmRouting: Generated 1 input ports (declared)","type":"print","time":9784}
{"testID":656,"messageType":"print","message":"MultiChannelRouting: Found mode parameter for Output 1: 3","type":"print","time":9784}
{"testID":656,"messageType":"print","message":"MultiChannelAlgorithmRouting: Generated 1 output ports (declared)","type":"print","time":9784}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Scanning 6 parameters for mode parameters","type":"print","time":9785}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Checking output parameter CV output: unit=1, enums=[Value 1, Value 2, Value 3, Value 4, Value 5, Value 6, Value 7, Value 8, Value 9, Value 10, Value 11, Value 12, Value 13, Value 14, Value 15, Value 16, Value 17, Value 18, Value 19, Value 20, Value 21, Value 22, Value 23, Value 24, Value 25, Value 26, Value 27, Value 28], isModeParam=false","type":"print","time":9785}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Found 0 mode parameters: ()","type":"print","time":9785}
{"testID":656,"messageType":"print","message":"MultiChannelAlgorithmRouting: Initialized with 1 channels, stereo: false, mix: false","type":"print","time":9785}
{"testID":656,"messageType":"print","message":"MultiChannelAlgorithmRouting: Generated 2 input ports (declared)","type":"print","time":9785}
{"testID":656,"messageType":"print","message":"MultiChannelAlgorithmRouting: Generated 1 output ports (declared)","type":"print","time":9785}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Scanning 23 parameters for mode parameters","type":"print","time":9786}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Checking output parameter CV output: unit=1, enums=[Value 0, Value 1, Value 2, Value 3, Value 4, Value 5, Value 6, Value 7, Value 8, Value 9, Value 10, Value 11, Value 12, Value 13, Value 14, Value 15, Value 16, Value 17, Value 18, Value 19, Value 20, Value 21, Value 22, Value 23, Value 24, Value 25, Value 26, Value 27, Value 28], isModeParam=false","type":"print","time":9786}
{"testID":656,"messageType":"print","message":"AlgorithmRouting: Checking output parameter Gate output: unit=1, enums=[Value 0, Value 1, Value 2, Value 3, Value 4, Value 5, Value 6, Value 7, Value 8, Value 9, Value 10, Value 11, Value 12, Value 13, Value 14, Value 15, Value 16, Value 17, Value 18, Value 19, Value 20, Value 21, Value 22, Value 23, Value 24, Value 25, Value 26, Value 27, Value 28], isModeParam=false","type":"print","time":9786}
{"testID":576,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":9798}
{"group":{"id":662,"suiteID":575,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":11,"line":null,"column":null,"url":null},"type":"group","time":9799}
{"group":{"id":663,"suiteID":575,"parentID":662,"name":"Routing Implementations Direct Properties Tests","metadata":{"skip":false,"skipReason":null},"testCount":11,"line":11,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/routing_implementations_test.dart"},"type":"group","time":9799}
{"group":{"id":664,"suiteID":575,"parentID":663,"name":"Routing Implementations Direct Properties Tests PolyAlgorithmRouting Direct Properties","metadata":{"skip":false,"skipReason":null},"testCount":4,"line":12,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/routing_implementations_test.dart"},"type":"group","time":9799}
{"test":{"id":665,"name":"Routing Implementations Direct Properties Tests PolyAlgorithmRouting Direct Properties should create ports with direct properties for gate-driven poly","suiteID":575,"groupIDs":[662,663,664],"metadata":{"skip":false,"skipReason":null},"line":13,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/routing_implementations_test.dart"},"type":"testStart","time":9799}
{"testID":665,"messageType":"print","message":"PolyAlgorithmRouting: Initialized with 4 voices, gates: true, CV: false","type":"print","time":9813}
{"testID":665,"messageType":"print","message":"[PolyRouting] Gate 1: Creating 2 CV inputs","type":"print","time":9814}
{"testID":665,"messageType":"print","message":"[PolyRouting] Gate 2: Creating 1 CV inputs","type":"print","time":9814}
{"testID":665,"messageType":"print","message":"[PolyRouting] Gate 4: Creating 3 CV inputs","type":"print","time":9814}
{"testID":665,"messageType":"print","message":"PolyAlgorithmRouting: Generated 9 input ports","type":"print","time":9814}
{"testID":665,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9818}
{"test":{"id":666,"name":"Routing Implementations Direct Properties Tests PolyAlgorithmRouting Direct Properties should create ports with direct properties for extra inputs","suiteID":575,"groupIDs":[662,663,664],"metadata":{"skip":false,"skipReason":null},"line":66,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/routing_implementations_test.dart"},"type":"testStart","time":9818}
{"testID":656,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9819}
{"test":{"id":667,"name":"AlgorithmRouting Loading Tests should ensure all factory algorithms have at least one input or output port (except special cases)","suiteID":528,"groupIDs":[633,634],"metadata":{"skip":false,"skipReason":null},"line":78,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/algorithm_loading_test.dart"},"type":"testStart","time":9819}
{"testID":666,"messageType":"print","message":"PolyAlgorithmRouting: Initialized with 2 voices, gates: true, CV: true","type":"print","time":9820}
{"testID":666,"messageType":"print","message":"PolyAlgorithmRouting: Generated 2 input ports","type":"print","time":9820}
{"testID":666,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9821}
{"test":{"id":668,"name":"Routing Implementations Direct Properties Tests PolyAlgorithmRouting Direct Properties should create output ports for output-only poly algorithms","suiteID":575,"groupIDs":[662,663,664],"metadata":{"skip":false,"skipReason":null},"line":108,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/routing_implementations_test.dart"},"type":"testStart","time":9821}
{"testID":668,"messageType":"print","message":"PolyAlgorithmRouting: Initialized with 2 voices, gates: false, CV: true","type":"print","time":9823}
{"testID":668,"messageType":"print","message":"PolyAlgorithmRouting: Generated 0 input ports","type":"print","time":9823}
{"testID":668,"messageType":"print","message":"PolyAlgorithmRouting: Generated 4 output ports (declared)","type":"print","time":9824}
{"testID":668,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9824}
{"test":{"id":669,"name":"Routing Implementations Direct Properties Tests PolyAlgorithmRouting Direct Properties should use direct properties in helper methods","suiteID":575,"groupIDs":[662,663,664],"metadata":{"skip":false,"skipReason":null},"line":196,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/routing_implementations_test.dart"},"type":"testStart","time":9825}
{"testID":669,"messageType":"print","message":"PolyAlgorithmRouting: Initialized with 2 voices, gates: true, CV: true","type":"print","time":9826}
{"testID":669,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9827}
{"group":{"id":670,"suiteID":575,"parentID":663,"name":"Routing Implementations Direct Properties Tests MultiChannelAlgorithmRouting Direct Properties","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":223,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/routing_implementations_test.dart"},"type":"group","time":9827}
{"test":{"id":671,"name":"Routing Implementations Direct Properties Tests MultiChannelAlgorithmRouting Direct Properties should create ports with direct properties for stereo channels","suiteID":575,"groupIDs":[662,663,670],"metadata":{"skip":false,"skipReason":null},"line":224,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/routing_implementations_test.dart"},"type":"testStart","time":9827}
{"testID":671,"messageType":"print","message":"MultiChannelAlgorithmRouting: Initialized with 2 channels, stereo: true, mix: true","type":"print","time":9829}
{"testID":671,"messageType":"print","message":"MultiChannelAlgorithmRouting: Generated 6 input ports","type":"print","time":9830}
{"testID":671,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9830}
{"test":{"id":672,"name":"Routing Implementations Direct Properties Tests MultiChannelAlgorithmRouting Direct Properties should create ports with direct properties for declared inputs","suiteID":575,"groupIDs":[662,663,670],"metadata":{"skip":false,"skipReason":null},"line":262,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/routing_implementations_test.dart"},"type":"testStart","time":9831}
{"testID":672,"messageType":"print","message":"MultiChannelAlgorithmRouting: Initialized with 1 channels, stereo: false, mix: true","type":"print","time":9832}
{"testID":672,"messageType":"print","message":"MultiChannelAlgorithmRouting: Generated 1 input ports (declared)","type":"print","time":9832}
{"testID":672,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9832}
{"test":{"id":673,"name":"Routing Implementations Direct Properties Tests MultiChannelAlgorithmRouting Direct Properties should use direct properties in helper methods","suiteID":575,"groupIDs":[662,663,670],"metadata":{"skip":false,"skipReason":null},"line":293,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/routing_implementations_test.dart"},"type":"testStart","time":9833}
{"testID":673,"messageType":"print","message":"MultiChannelAlgorithmRouting: Initialized with 2 channels, stereo: true, mix: true","type":"print","time":9834}
{"testID":673,"messageType":"print","message":"PortCompatibilityValidator: Validation passed for multi_test -> mix_test","type":"print","time":9836}
{"testID":667,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9836}
{"test":{"id":674,"name":"AlgorithmRouting Loading Tests should handle algorithms with various parameter configurations","suiteID":528,"groupIDs":[633,634],"metadata":{"skip":false,"skipReason":null},"line":159,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/algorithm_loading_test.dart"},"type":"testStart","time":9836}
{"testID":673,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9836}
{"group":{"id":675,"suiteID":575,"parentID":663,"name":"Routing Implementations Direct Properties Tests ConnectionDiscoveryService Direct Properties","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":330,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/routing_implementations_test.dart"},"type":"group","time":9836}
{"test":{"id":676,"name":"Routing Implementations Direct Properties Tests ConnectionDiscoveryService Direct Properties should use direct properties for bus discovery","suiteID":575,"groupIDs":[662,663,675],"metadata":{"skip":false,"skipReason":null},"line":331,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/routing_implementations_test.dart"},"type":"testStart","time":9837}
{"testID":676,"messageType":"print","message":"[ConnectionDiscovery] Starting discovery for 1 algorithms","type":"print","time":9839}
{"testID":676,"messageType":"print","message":"[ConnectionDiscovery] Processing algorithm 0 (algo_131129618)","type":"print","time":9840}
{"testID":674,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9840}
{"test":{"id":677,"name":"AlgorithmRouting Loading Tests should extract correct parameter types from algorithms","suiteID":528,"groupIDs":[633,634],"metadata":{"skip":false,"skipReason":null},"line":225,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/algorithm_loading_test.dart"},"type":"testStart","time":9840}
{"testID":676,"messageType":"print","message":"[ConnectionDiscovery]   Input port input_1: bus=1, outputMode=null","type":"print","time":9840}
{"testID":676,"messageType":"print","message":"[ConnectionDiscovery]   Output port output_1: bus=13, outputMode=null","type":"print","time":9840}
{"testID":676,"messageType":"print","message":"[ConnectionDiscovery] Bus registry summary:","type":"print","time":9841}
{"testID":676,"messageType":"print","message":"[ConnectionDiscovery]   Bus 1: 0 outputs, 1 inputs","type":"print","time":9841}
{"testID":676,"messageType":"print","message":"[ConnectionDiscovery]   Bus 13: 1 outputs, 0 inputs","type":"print","time":9841}
{"testID":676,"messageType":"print","message":"[ConnectionDiscovery] Creating partial connections for unmatched ports","type":"print","time":9844}
{"testID":676,"messageType":"print","message":"[ConnectionDiscovery] Created 2 full connections","type":"print","time":9844}
{"testID":676,"messageType":"print","message":"[ConnectionDiscovery] Created 0 partial connections","type":"print","time":9844}
{"testID":676,"messageType":"print","message":"[ConnectionDiscovery] Total connections: 2","type":"print","time":9844}
{"testID":676,"messageType":"print","message":"[ConnectionDiscovery]   Hardware connections: 2","type":"print","time":9845}
{"testID":676,"messageType":"print","message":"[ConnectionDiscovery]   Algorithm-to-algorithm: 0","type":"print","time":9845}
{"testID":676,"messageType":"print","message":"[ConnectionDiscovery]   Partial connections: 0","type":"print","time":9845}
{"testID":676,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9846}
{"test":{"id":678,"name":"Routing Implementations Direct Properties Tests ConnectionDiscoveryService Direct Properties should discover algorithm-to-algorithm connections using direct properties","suiteID":575,"groupIDs":[662,663,675],"metadata":{"skip":false,"skipReason":null},"line":379,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/routing_implementations_test.dart"},"type":"testStart","time":9846}
{"testID":678,"messageType":"print","message":"[ConnectionDiscovery] Starting discovery for 2 algorithms","type":"print","time":9847}
{"testID":678,"messageType":"print","message":"[ConnectionDiscovery] Processing algorithm 0 (algo_302637403)","type":"print","time":9847}
{"testID":678,"messageType":"print","message":"[ConnectionDiscovery]   Output port algo1_out: bus=5, outputMode=null","type":"print","time":9848}
{"testID":678,"messageType":"print","message":"[ConnectionDiscovery] Processing algorithm 1 (algo_632036036)","type":"print","time":9848}
{"testID":678,"messageType":"print","message":"[ConnectionDiscovery]   Input port algo2_in: bus=5, outputMode=null","type":"print","time":9848}
{"testID":678,"messageType":"print","message":"[ConnectionDiscovery] Bus registry summary:","type":"print","time":9848}
{"testID":678,"messageType":"print","message":"[ConnectionDiscovery]   Bus 5: 1 outputs, 1 inputs","type":"print","time":9849}
{"testID":678,"messageType":"print","message":"[ConnectionDiscovery] Creating partial connections for unmatched ports","type":"print","time":9849}
{"testID":678,"messageType":"print","message":"[ConnectionDiscovery] Created 2 full connections","type":"print","time":9849}
{"testID":678,"messageType":"print","message":"[ConnectionDiscovery] Created 0 partial connections","type":"print","time":9849}
{"testID":678,"messageType":"print","message":"[ConnectionDiscovery] Total connections: 2","type":"print","time":9849}
{"testID":678,"messageType":"print","message":"[ConnectionDiscovery]   Hardware connections: 1","type":"print","time":9850}
{"testID":678,"messageType":"print","message":"[ConnectionDiscovery]   Algorithm-to-algorithm: 1","type":"print","time":9850}
{"testID":678,"messageType":"print","message":"[ConnectionDiscovery]   Partial connections: 0","type":"print","time":9850}
{"testID":678,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9850}
{"group":{"id":679,"suiteID":575,"parentID":663,"name":"Routing Implementations Direct Properties Tests Direct Properties Integration Tests","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":431,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/routing_implementations_test.dart"},"type":"group","time":9850}
{"test":{"id":680,"name":"Routing Implementations Direct Properties Tests Direct Properties Integration Tests should work correctly with direct properties only","suiteID":575,"groupIDs":[662,663,679],"metadata":{"skip":false,"skipReason":null},"line":432,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/routing_implementations_test.dart"},"type":"testStart","time":9850}
{"testID":677,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9852}
{"test":{"id":681,"name":"AlgorithmRouting Loading Tests (tearDownAll)","suiteID":528,"groupIDs":[633,634],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":9852}
{"testID":680,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9852}
{"test":{"id":682,"name":"Routing Implementations Direct Properties Tests Direct Properties Integration Tests should serialize and deserialize direct properties correctly","suiteID":575,"groupIDs":[662,663,679],"metadata":{"skip":false,"skipReason":null},"line":467,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/routing_implementations_test.dart"},"type":"testStart","time":9852}
{"testID":681,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":9855}
{"testID":682,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9856}
{"suite":{"id":683,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/core/routing/services/connection_validator_integration_test.dart"},"type":"suite","time":9861}
{"test":{"id":684,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/core/routing/services/connection_validator_integration_test.dart","suiteID":683,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":9861}
{"suite":{"id":685,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/util/topological_sort_test.dart"},"type":"suite","time":9863}
{"test":{"id":686,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/util/topological_sort_test.dart","suiteID":685,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":9863}
{"testID":580,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":9869}
{"group":{"id":687,"suiteID":579,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":5,"line":null,"column":null,"url":null},"type":"group","time":9869}
{"group":{"id":688,"suiteID":579,"parentID":687,"name":"ES-5 Bus Values Tests","metadata":{"skip":false,"skipReason":null},"testCount":5,"line":11,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/es5_bus_values_test.dart"},"type":"group","time":9869}
{"group":{"id":689,"suiteID":579,"parentID":688,"name":"ES-5 Bus Values Tests ConnectionDiscoveryService","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":32,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/es5_bus_values_test.dart"},"type":"group","time":9869}
{"test":{"id":690,"name":"ES-5 Bus Values Tests ConnectionDiscoveryService should handle ES-5 L bus value (29)","suiteID":579,"groupIDs":[687,688,689],"metadata":{"skip":false,"skipReason":null},"line":33,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/es5_bus_values_test.dart"},"type":"testStart","time":9869}
{"testID":690,"messageType":"print","message":"UsbFromAlgorithmRouting.createFromSlot: Algorithm USB Audio (From Host)","type":"print","time":9885}
{"testID":690,"messageType":"print","message":"UsbFromAlgorithmRouting: Initialized with UUID usb_1","type":"print","time":9887}
{"testID":690,"messageType":"print","message":"[ConnectionDiscovery] Starting discovery for 1 algorithms","type":"print","time":9888}
{"testID":690,"messageType":"print","message":"[ConnectionDiscovery] Processing algorithm 0 (usb_1)","type":"print","time":9888}
{"testID":690,"messageType":"print","message":"UsbFromAlgorithmRouting: No input ports (USB from host)","type":"print","time":9889}
{"testID":690,"messageType":"print","message":"UsbFromAlgorithmRouting: Generated 8 output ports from properties","type":"print","time":9890}
{"testID":690,"messageType":"print","message":"[ConnectionDiscovery]   Output port usb_1_usb_ch1: bus=29, outputMode=OutputMode.add","type":"print","time":9890}
{"testID":690,"messageType":"print","message":"[ConnectionDiscovery] Bus registry summary:","type":"print","time":9891}
{"testID":690,"messageType":"print","message":"[ConnectionDiscovery]   Bus 29: 1 outputs, 0 inputs","type":"print","time":9892}
{"testID":690,"messageType":"print","message":"[ConnectionDiscovery] Creating partial connections for unmatched ports","type":"print","time":9895}
{"testID":690,"messageType":"print","message":"[ConnectionDiscovery] Created 1 full connections","type":"print","time":9895}
{"testID":690,"messageType":"print","message":"[ConnectionDiscovery] Created 0 partial connections","type":"print","time":9895}
{"testID":690,"messageType":"print","message":"[ConnectionDiscovery] Total connections: 1","type":"print","time":9895}
{"testID":690,"messageType":"print","message":"[ConnectionDiscovery]   Hardware connections: 1","type":"print","time":9895}
{"testID":690,"messageType":"print","message":"[ConnectionDiscovery]   Algorithm-to-algorithm: 0","type":"print","time":9895}
{"testID":690,"messageType":"print","message":"[ConnectionDiscovery]   Partial connections: 0","type":"print","time":9895}
{"testID":690,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9900}
{"test":{"id":691,"name":"ES-5 Bus Values Tests ConnectionDiscoveryService should handle ES-5 R bus value (30)","suiteID":579,"groupIDs":[687,688,689],"metadata":{"skip":false,"skipReason":null},"line":99,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/es5_bus_values_test.dart"},"type":"testStart","time":9900}
{"testID":691,"messageType":"print","message":"UsbFromAlgorithmRouting.createFromSlot: Algorithm USB Audio (From Host)","type":"print","time":9902}
{"testID":691,"messageType":"print","message":"UsbFromAlgorithmRouting: Initialized with UUID usb_2","type":"print","time":9902}
{"testID":691,"messageType":"print","message":"[ConnectionDiscovery] Starting discovery for 1 algorithms","type":"print","time":9902}
{"testID":691,"messageType":"print","message":"[ConnectionDiscovery] Processing algorithm 0 (usb_2)","type":"print","time":9902}
{"testID":691,"messageType":"print","message":"UsbFromAlgorithmRouting: No input ports (USB from host)","type":"print","time":9902}
{"testID":691,"messageType":"print","message":"UsbFromAlgorithmRouting: Generated 8 output ports from properties","type":"print","time":9902}
{"testID":691,"messageType":"print","message":"[ConnectionDiscovery]   Output port usb_2_usb_ch2: bus=30, outputMode=OutputMode.add","type":"print","time":9903}
{"testID":691,"messageType":"print","message":"[ConnectionDiscovery] Bus registry summary:","type":"print","time":9903}
{"testID":691,"messageType":"print","message":"[ConnectionDiscovery]   Bus 30: 1 outputs, 0 inputs","type":"print","time":9903}
{"testID":691,"messageType":"print","message":"[ConnectionDiscovery] Creating partial connections for unmatched ports","type":"print","time":9903}
{"testID":691,"messageType":"print","message":"[ConnectionDiscovery] Created 1 full connections","type":"print","time":9903}
{"testID":691,"messageType":"print","message":"[ConnectionDiscovery] Created 0 partial connections","type":"print","time":9903}
{"testID":691,"messageType":"print","message":"[ConnectionDiscovery] Total connections: 1","type":"print","time":9903}
{"testID":691,"messageType":"print","message":"[ConnectionDiscovery]   Hardware connections: 1","type":"print","time":9904}
{"testID":691,"messageType":"print","message":"[ConnectionDiscovery]   Algorithm-to-algorithm: 0","type":"print","time":9904}
{"testID":691,"messageType":"print","message":"[ConnectionDiscovery]   Partial connections: 0","type":"print","time":9904}
{"testID":691,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9904}
{"test":{"id":692,"name":"ES-5 Bus Values Tests ConnectionDiscoveryService should create connections between algorithms using ES-5 buses","suiteID":579,"groupIDs":[687,688,689],"metadata":{"skip":false,"skipReason":null},"line":165,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/es5_bus_values_test.dart"},"type":"testStart","time":9904}
{"testID":692,"messageType":"print","message":"MultiChannelAlgorithmRouting: Initialized with 1 channels, stereo: false, mix: false","type":"print","time":9908}
{"testID":692,"messageType":"print","message":"MultiChannelAlgorithmRouting: Initialized with 1 channels, stereo: false, mix: false","type":"print","time":9908}
{"testID":692,"messageType":"print","message":"[ConnectionDiscovery] Starting discovery for 2 algorithms","type":"print","time":9908}
{"testID":692,"messageType":"print","message":"[ConnectionDiscovery] Processing algorithm 0 (out_1)","type":"print","time":9908}
{"testID":692,"messageType":"print","message":"MultiChannelAlgorithmRouting: No input ports declared - returning empty","type":"print","time":9909}
{"testID":692,"messageType":"print","message":"MultiChannelAlgorithmRouting: Generated 1 output ports (declared)","type":"print","time":9909}
{"testID":692,"messageType":"print","message":"[ConnectionDiscovery]   Output port out_1_param_0: bus=29, outputMode=null","type":"print","time":9910}
{"testID":692,"messageType":"print","message":"[ConnectionDiscovery] Processing algorithm 1 (in_1)","type":"print","time":9910}
{"testID":692,"messageType":"print","message":"MultiChannelAlgorithmRouting: Generated 1 input ports (declared)","type":"print","time":9910}
{"testID":692,"messageType":"print","message":"[ConnectionDiscovery]   Input port in_1_param_0: bus=29, outputMode=null","type":"print","time":9910}
{"testID":692,"messageType":"print","message":"MultiChannelAlgorithmRouting: No output ports declared - returning empty","type":"print","time":9911}
{"testID":692,"messageType":"print","message":"[ConnectionDiscovery] Bus registry summary:","type":"print","time":9911}
{"testID":692,"messageType":"print","message":"[ConnectionDiscovery]   Bus 29: 1 outputs, 1 inputs","type":"print","time":9911}
{"testID":692,"messageType":"print","message":"[ConnectionDiscovery] Creating partial connections for unmatched ports","type":"print","time":9911}
{"testID":692,"messageType":"print","message":"[ConnectionDiscovery] Created 2 full connections","type":"print","time":9911}
{"testID":692,"messageType":"print","message":"[ConnectionDiscovery] Created 0 partial connections","type":"print","time":9911}
{"testID":692,"messageType":"print","message":"[ConnectionDiscovery] Total connections: 2","type":"print","time":9911}
{"testID":692,"messageType":"print","message":"[ConnectionDiscovery]   Hardware connections: 1","type":"print","time":9911}
{"testID":692,"messageType":"print","message":"[ConnectionDiscovery]   Algorithm-to-algorithm: 1","type":"print","time":9912}
{"testID":692,"messageType":"print","message":"[ConnectionDiscovery]   Partial connections: 0","type":"print","time":9912}
{"testID":692,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9912}
{"group":{"id":693,"suiteID":579,"parentID":688,"name":"ES-5 Bus Values Tests BusLabelFormatter","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":251,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/es5_bus_values_test.dart"},"type":"group","time":9912}
{"test":{"id":694,"name":"ES-5 Bus Values Tests BusLabelFormatter should format ES-5 L correctly","suiteID":579,"groupIDs":[687,688,693],"metadata":{"skip":false,"skipReason":null},"line":252,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/es5_bus_values_test.dart"},"type":"testStart","time":9912}
{"testID":694,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9915}
{"test":{"id":695,"name":"ES-5 Bus Values Tests BusLabelFormatter should format ES-5 R correctly","suiteID":579,"groupIDs":[687,688,693],"metadata":{"skip":false,"skipReason":null},"line":258,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/es5_bus_values_test.dart"},"type":"testStart","time":9915}
{"testID":695,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":9916}
{"suite":{"id":696,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/models/tidy_result_test.dart"},"type":"suite","time":9921}
{"test":{"id":697,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/models/tidy_result_test.dart","suiteID":696,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":9921}
{"testID":624,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":10277}
{"group":{"id":698,"suiteID":623,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":null,"column":null,"url":null},"type":"group","time":10277}
{"group":{"id":699,"suiteID":623,"parentID":698,"name":"ConnectionDiscoveryService","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":68,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/connection_discovery_service_test.dart"},"type":"group","time":10277}
{"test":{"id":700,"name":"ConnectionDiscoveryService creates algo→algo and hardware input connections on bus 2","suiteID":623,"groupIDs":[698,699],"metadata":{"skip":false,"skipReason":null},"line":69,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/connection_discovery_service_test.dart"},"type":"testStart","time":10277}
{"testID":700,"messageType":"print","message":"[ConnectionDiscovery] Starting discovery for 2 algorithms","type":"print","time":10292}
{"testID":700,"messageType":"print","message":"[ConnectionDiscovery] Processing algorithm 0 (algo_A)","type":"print","time":10292}
{"testID":700,"messageType":"print","message":"[ConnectionDiscovery]   Output port A_out_b2: bus=2, outputMode=null","type":"print","time":10292}
{"testID":700,"messageType":"print","message":"[ConnectionDiscovery] Processing algorithm 1 (algo_B)","type":"print","time":10293}
{"testID":700,"messageType":"print","message":"[ConnectionDiscovery]   Input port B_in_b2: bus=2, outputMode=null","type":"print","time":10293}
{"testID":700,"messageType":"print","message":"[ConnectionDiscovery] Bus registry summary:","type":"print","time":10294}
{"testID":700,"messageType":"print","message":"[ConnectionDiscovery]   Bus 2: 1 outputs, 1 inputs","type":"print","time":10295}
{"testID":700,"messageType":"print","message":"[ConnectionDiscovery] Creating partial connections for unmatched ports","type":"print","time":10298}
{"testID":700,"messageType":"print","message":"[ConnectionDiscovery] Created 2 full connections","type":"print","time":10299}
{"testID":700,"messageType":"print","message":"[ConnectionDiscovery] Created 0 partial connections","type":"print","time":10299}
{"testID":700,"messageType":"print","message":"[ConnectionDiscovery] Total connections: 2","type":"print","time":10299}
{"testID":700,"messageType":"print","message":"[ConnectionDiscovery]   Hardware connections: 1","type":"print","time":10299}
{"testID":700,"messageType":"print","message":"[ConnectionDiscovery]   Algorithm-to-algorithm: 1","type":"print","time":10299}
{"testID":700,"messageType":"print","message":"[ConnectionDiscovery]   Partial connections: 0","type":"print","time":10300}
{"testID":700,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10303}
{"test":{"id":701,"name":"ConnectionDiscoveryService creates algo→algo and hardware output connections on bus 18","suiteID":623,"groupIDs":[698,699],"metadata":{"skip":false,"skipReason":null},"line":96,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/connection_discovery_service_test.dart"},"type":"testStart","time":10303}
{"testID":701,"messageType":"print","message":"[ConnectionDiscovery] Starting discovery for 2 algorithms","type":"print","time":10305}
{"testID":701,"messageType":"print","message":"[ConnectionDiscovery] Processing algorithm 0 (algo_A)","type":"print","time":10305}
{"testID":701,"messageType":"print","message":"[ConnectionDiscovery]   Output port A_out_b18: bus=18, outputMode=null","type":"print","time":10305}
{"testID":701,"messageType":"print","message":"[ConnectionDiscovery] Processing algorithm 1 (algo_B)","type":"print","time":10305}
{"testID":701,"messageType":"print","message":"[ConnectionDiscovery]   Input port B_in_b18: bus=18, outputMode=null","type":"print","time":10305}
{"testID":701,"messageType":"print","message":"[ConnectionDiscovery] Bus registry summary:","type":"print","time":10305}
{"testID":701,"messageType":"print","message":"[ConnectionDiscovery]   Bus 18: 1 outputs, 1 inputs","type":"print","time":10306}
{"testID":701,"messageType":"print","message":"[ConnectionDiscovery] Creating partial connections for unmatched ports","type":"print","time":10306}
{"testID":701,"messageType":"print","message":"[ConnectionDiscovery] Created 2 full connections","type":"print","time":10306}
{"testID":701,"messageType":"print","message":"[ConnectionDiscovery] Created 0 partial connections","type":"print","time":10306}
{"testID":701,"messageType":"print","message":"[ConnectionDiscovery] Total connections: 2","type":"print","time":10307}
{"testID":701,"messageType":"print","message":"[ConnectionDiscovery]   Hardware connections: 1","type":"print","time":10307}
{"testID":701,"messageType":"print","message":"[ConnectionDiscovery]   Algorithm-to-algorithm: 1","type":"print","time":10307}
{"testID":701,"messageType":"print","message":"[ConnectionDiscovery]   Partial connections: 0","type":"print","time":10307}
{"testID":701,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10308}
{"test":{"id":702,"name":"ConnectionDiscoveryService aux bus 25 yields only algo→algo (no hardware edges)","suiteID":623,"groupIDs":[698,699],"metadata":{"skip":false,"skipReason":null},"line":121,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/connection_discovery_service_test.dart"},"type":"testStart","time":10308}
{"testID":702,"messageType":"print","message":"[ConnectionDiscovery] Starting discovery for 2 algorithms","type":"print","time":10310}
{"testID":702,"messageType":"print","message":"[ConnectionDiscovery] Processing algorithm 0 (algo_A)","type":"print","time":10310}
{"testID":702,"messageType":"print","message":"[ConnectionDiscovery]   Output port A_out_b25: bus=25, outputMode=null","type":"print","time":10310}
{"testID":702,"messageType":"print","message":"[ConnectionDiscovery] Processing algorithm 1 (algo_B)","type":"print","time":10310}
{"testID":702,"messageType":"print","message":"[ConnectionDiscovery]   Input port B_in_b25: bus=25, outputMode=null","type":"print","time":10310}
{"testID":702,"messageType":"print","message":"[ConnectionDiscovery] Bus registry summary:","type":"print","time":10310}
{"testID":702,"messageType":"print","message":"[ConnectionDiscovery]   Bus 25: 1 outputs, 1 inputs","type":"print","time":10310}
{"testID":702,"messageType":"print","message":"[ConnectionDiscovery] Creating partial connections for unmatched ports","type":"print","time":10310}
{"testID":702,"messageType":"print","message":"[ConnectionDiscovery] Created 1 full connections","type":"print","time":10311}
{"testID":702,"messageType":"print","message":"[ConnectionDiscovery] Created 0 partial connections","type":"print","time":10311}
{"testID":702,"messageType":"print","message":"[ConnectionDiscovery] Total connections: 1","type":"print","time":10311}
{"testID":702,"messageType":"print","message":"[ConnectionDiscovery]   Hardware connections: 0","type":"print","time":10311}
{"testID":702,"messageType":"print","message":"[ConnectionDiscovery]   Algorithm-to-algorithm: 1","type":"print","time":10311}
{"testID":702,"messageType":"print","message":"[ConnectionDiscovery]   Partial connections: 0","type":"print","time":10311}
{"testID":702,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10312}
{"suite":{"id":703,"platform":"vm","path":"/Users/nealsanche/nosuch/nt_helper/test/sysex_decode_test.dart"},"type":"suite","time":10318}
{"test":{"id":704,"name":"loading /Users/nealsanche/nosuch/nt_helper/test/sysex_decode_test.dart","suiteID":703,"groupIDs":[],"metadata":{"skip":false,"skipReason":null},"line":null,"column":null,"url":null},"type":"testStart","time":10318}
{"testID":686,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":10511}
{"group":{"id":705,"suiteID":685,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":8,"line":null,"column":null,"url":null},"type":"group","time":10512}
{"group":{"id":706,"suiteID":685,"parentID":705,"name":"TopologicalSort","metadata":{"skip":false,"skipReason":null},"testCount":8,"line":5,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/util/topological_sort_test.dart"},"type":"group","time":10512}
{"test":{"id":707,"name":"TopologicalSort should sort simple linear graph","suiteID":685,"groupIDs":[705,706],"metadata":{"skip":false,"skipReason":null},"line":6,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/util/topological_sort_test.dart"},"type":"testStart","time":10512}
{"testID":707,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10526}
{"test":{"id":708,"name":"TopologicalSort should sort branching graph","suiteID":685,"groupIDs":[705,706],"metadata":{"skip":false,"skipReason":null},"line":17,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/util/topological_sort_test.dart"},"type":"testStart","time":10527}
{"testID":708,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10528}
{"test":{"id":709,"name":"TopologicalSort should detect cycle","suiteID":685,"groupIDs":[705,706],"metadata":{"skip":false,"skipReason":null},"line":32,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/util/topological_sort_test.dart"},"type":"testStart","time":10528}
{"testID":709,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10531}
{"test":{"id":710,"name":"TopologicalSort should detect no cycles in valid graph","suiteID":685,"groupIDs":[705,706],"metadata":{"skip":false,"skipReason":null},"line":45,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/util/topological_sort_test.dart"},"type":"testStart","time":10531}
{"testID":710,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10533}
{"test":{"id":711,"name":"TopologicalSort should detect cycles correctly","suiteID":685,"groupIDs":[705,706],"metadata":{"skip":false,"skipReason":null},"line":56,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/util/topological_sort_test.dart"},"type":"testStart","time":10533}
{"testID":711,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10535}
{"test":{"id":712,"name":"TopologicalSort should find cycle path","suiteID":685,"groupIDs":[705,706],"metadata":{"skip":false,"skipReason":null},"line":66,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/util/topological_sort_test.dart"},"type":"testStart","time":10535}
{"testID":712,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10537}
{"test":{"id":713,"name":"TopologicalSort should handle empty graph","suiteID":685,"groupIDs":[705,706],"metadata":{"skip":false,"skipReason":null},"line":80,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/util/topological_sort_test.dart"},"type":"testStart","time":10537}
{"testID":713,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10538}
{"test":{"id":714,"name":"TopologicalSort should handle single node graph","suiteID":685,"groupIDs":[705,706],"metadata":{"skip":false,"skipReason":null},"line":86,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/util/topological_sort_test.dart"},"type":"testStart","time":10538}
{"testID":714,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10539}
{"testID":661,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":10551}
{"group":{"id":715,"suiteID":660,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":17,"line":null,"column":null,"url":null},"type":"group","time":10551}
{"group":{"id":716,"suiteID":660,"parentID":715,"name":"ConnectionValidator Tests","metadata":{"skip":false,"skipReason":null},"testCount":17,"line":9,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/services/connection_validator_test.dart"},"type":"group","time":10551}
{"group":{"id":717,"suiteID":660,"parentID":716,"name":"ConnectionValidator Tests validateConnections","metadata":{"skip":false,"skipReason":null},"testCount":7,"line":93,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/services/connection_validator_test.dart"},"type":"group","time":10551}
{"test":{"id":718,"name":"ConnectionValidator Tests validateConnections should mark connection as invalid when source slot > destination slot","suiteID":660,"groupIDs":[715,716,717],"metadata":{"skip":false,"skipReason":null},"line":94,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/services/connection_validator_test.dart"},"type":"testStart","time":10551}
{"testID":718,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10567}
{"test":{"id":719,"name":"ConnectionValidator Tests validateConnections should keep connection as valid when source slot <= destination slot","suiteID":660,"groupIDs":[715,716,717],"metadata":{"skip":false,"skipReason":null},"line":116,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/services/connection_validator_test.dart"},"type":"testStart","time":10567}
{"testID":719,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10569}
{"test":{"id":720,"name":"ConnectionValidator Tests validateConnections should handle same-slot connections as valid","suiteID":660,"groupIDs":[715,716,717],"metadata":{"skip":false,"skipReason":null},"line":138,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/services/connection_validator_test.dart"},"type":"testStart","time":10569}
{"testID":720,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10570}
{"test":{"id":721,"name":"ConnectionValidator Tests validateConnections should leave physical connections unchanged and valid","suiteID":660,"groupIDs":[715,716,717],"metadata":{"skip":false,"skipReason":null},"line":157,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/services/connection_validator_test.dart"},"type":"testStart","time":10571}
{"testID":721,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10572}
{"test":{"id":722,"name":"ConnectionValidator Tests validateConnections should handle connections with unknown ports as valid","suiteID":660,"groupIDs":[715,716,717],"metadata":{"skip":false,"skipReason":null},"line":184,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/services/connection_validator_test.dart"},"type":"testStart","time":10572}
{"testID":722,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10573}
{"test":{"id":723,"name":"ConnectionValidator Tests validateConnections should handle mixed valid and invalid connections","suiteID":660,"groupIDs":[715,716,717],"metadata":{"skip":false,"skipReason":null},"line":203,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/services/connection_validator_test.dart"},"type":"testStart","time":10574}
{"testID":723,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10575}
{"test":{"id":724,"name":"ConnectionValidator Tests validateConnections should preserve all original connection properties","suiteID":660,"groupIDs":[715,716,717],"metadata":{"skip":false,"skipReason":null},"line":247,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/services/connection_validator_test.dart"},"type":"testStart","time":10575}
{"testID":724,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10577}
{"group":{"id":725,"suiteID":660,"parentID":716,"name":"ConnectionValidator Tests isPhysicalConnection","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":294,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/services/connection_validator_test.dart"},"type":"group","time":10577}
{"test":{"id":726,"name":"ConnectionValidator Tests isPhysicalConnection should identify hardware input connections","suiteID":660,"groupIDs":[715,716,725],"metadata":{"skip":false,"skipReason":null},"line":295,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/services/connection_validator_test.dart"},"type":"testStart","time":10577}
{"testID":726,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10578}
{"test":{"id":727,"name":"ConnectionValidator Tests isPhysicalConnection should identify hardware output connections","suiteID":660,"groupIDs":[715,716,725],"metadata":{"skip":false,"skipReason":null},"line":306,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/services/connection_validator_test.dart"},"type":"testStart","time":10579}
{"testID":727,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10580}
{"test":{"id":728,"name":"ConnectionValidator Tests isPhysicalConnection should identify algorithm-to-algorithm connections as non-physical","suiteID":660,"groupIDs":[715,716,725],"metadata":{"skip":false,"skipReason":null},"line":317,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/services/connection_validator_test.dart"},"type":"testStart","time":10580}
{"testID":728,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10581}
{"group":{"id":729,"suiteID":660,"parentID":716,"name":"ConnectionValidator Tests findAlgorithmIndex","metadata":{"skip":false,"skipReason":null},"testCount":4,"line":332,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/services/connection_validator_test.dart"},"type":"group","time":10582}
{"test":{"id":730,"name":"ConnectionValidator Tests findAlgorithmIndex should find algorithm index for input port","suiteID":660,"groupIDs":[715,716,729],"metadata":{"skip":false,"skipReason":null},"line":333,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/services/connection_validator_test.dart"},"type":"testStart","time":10582}
{"testID":730,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10583}
{"test":{"id":731,"name":"ConnectionValidator Tests findAlgorithmIndex should find algorithm index for output port","suiteID":660,"groupIDs":[715,716,729],"metadata":{"skip":false,"skipReason":null},"line":342,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/services/connection_validator_test.dart"},"type":"testStart","time":10583}
{"testID":731,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10584}
{"test":{"id":732,"name":"ConnectionValidator Tests findAlgorithmIndex should return null for unknown port","suiteID":660,"groupIDs":[715,716,729],"metadata":{"skip":false,"skipReason":null},"line":351,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/services/connection_validator_test.dart"},"type":"testStart","time":10584}
{"testID":732,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10585}
{"test":{"id":733,"name":"ConnectionValidator Tests findAlgorithmIndex should return null for physical port","suiteID":660,"groupIDs":[715,716,729],"metadata":{"skip":false,"skipReason":null},"line":360,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/services/connection_validator_test.dart"},"type":"testStart","time":10586}
{"testID":733,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10587}
{"group":{"id":734,"suiteID":660,"parentID":716,"name":"ConnectionValidator Tests edge cases","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":370,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/services/connection_validator_test.dart"},"type":"group","time":10587}
{"test":{"id":735,"name":"ConnectionValidator Tests edge cases should handle empty connections list","suiteID":660,"groupIDs":[715,716,734],"metadata":{"skip":false,"skipReason":null},"line":371,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/services/connection_validator_test.dart"},"type":"testStart","time":10587}
{"testID":735,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10588}
{"test":{"id":736,"name":"ConnectionValidator Tests edge cases should handle empty algorithms list","suiteID":660,"groupIDs":[715,716,734],"metadata":{"skip":false,"skipReason":null},"line":380,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/services/connection_validator_test.dart"},"type":"testStart","time":10589}
{"testID":736,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10590}
{"test":{"id":737,"name":"ConnectionValidator Tests edge cases should handle partial connections as non-physical","suiteID":660,"groupIDs":[715,716,734],"metadata":{"skip":false,"skipReason":null},"line":399,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/services/connection_validator_test.dart"},"type":"testStart","time":10590}
{"testID":737,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10591}
{"testID":697,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":10612}
{"group":{"id":738,"suiteID":696,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":10,"line":null,"column":null,"url":null},"type":"group","time":10612}
{"group":{"id":739,"suiteID":696,"parentID":738,"name":"TidyResult","metadata":{"skip":false,"skipReason":null},"testCount":7,"line":6,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/models/tidy_result_test.dart"},"type":"group","time":10612}
{"test":{"id":740,"name":"TidyResult should create success result with correct properties","suiteID":696,"groupIDs":[738,739],"metadata":{"skip":false,"skipReason":null},"line":7,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/models/tidy_result_test.dart"},"type":"testStart","time":10612}
{"testID":740,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10629}
{"test":{"id":741,"name":"TidyResult should create failure result with error message","suiteID":696,"groupIDs":[738,739],"metadata":{"skip":false,"skipReason":null},"line":60,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/models/tidy_result_test.dart"},"type":"testStart","time":10629}
{"testID":684,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":10631}
{"group":{"id":742,"suiteID":683,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":4,"line":null,"column":null,"url":null},"type":"group","time":10631}
{"group":{"id":743,"suiteID":683,"parentID":742,"name":"ConnectionValidator State Management Integration Tests","metadata":{"skip":false,"skipReason":null},"testCount":4,"line":9,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/services/connection_validator_integration_test.dart"},"type":"group","time":10631}
{"group":{"id":744,"suiteID":683,"parentID":743,"name":"ConnectionValidator State Management Integration Tests Dynamic Connection Validation","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":10,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/services/connection_validator_integration_test.dart"},"type":"group","time":10631}
{"test":{"id":745,"name":"ConnectionValidator State Management Integration Tests Dynamic Connection Validation should re-validate connections when algorithm order changes","suiteID":683,"groupIDs":[742,743,744],"metadata":{"skip":false,"skipReason":null},"line":11,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/services/connection_validator_integration_test.dart"},"type":"testStart","time":10631}
{"testID":741,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10631}
{"test":{"id":746,"name":"TidyResult should track bus changes correctly","suiteID":696,"groupIDs":[738,739],"metadata":{"skip":false,"skipReason":null},"line":74,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/models/tidy_result_test.dart"},"type":"testStart","time":10631}
{"testID":746,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10633}
{"test":{"id":747,"name":"TidyResult should calculate buses freed accurately","suiteID":696,"groupIDs":[738,739],"metadata":{"skip":false,"skipReason":null},"line":92,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/models/tidy_result_test.dart"},"type":"testStart","time":10633}
{"testID":747,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10635}
{"test":{"id":748,"name":"TidyResult should be immutable","suiteID":696,"groupIDs":[738,739],"metadata":{"skip":false,"skipReason":null},"line":145,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/models/tidy_result_test.dart"},"type":"testStart","time":10635}
{"testID":748,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10636}
{"test":{"id":749,"name":"TidyResult should handle empty optimization result","suiteID":696,"groupIDs":[738,739],"metadata":{"skip":false,"skipReason":null},"line":172,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/models/tidy_result_test.dart"},"type":"testStart","time":10636}
{"testID":749,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10638}
{"test":{"id":750,"name":"TidyResult should handle complex optimization with multiple changes","suiteID":696,"groupIDs":[738,739],"metadata":{"skip":false,"skipReason":null},"line":188,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/models/tidy_result_test.dart"},"type":"testStart","time":10638}
{"testID":750,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10640}
{"group":{"id":751,"suiteID":696,"parentID":738,"name":"BusChange","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":240,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/models/tidy_result_test.dart"},"type":"group","time":10640}
{"test":{"id":752,"name":"BusChange should be created with all required properties","suiteID":696,"groupIDs":[738,751],"metadata":{"skip":false,"skipReason":null},"line":241,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/models/tidy_result_test.dart"},"type":"testStart","time":10640}
{"testID":752,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10642}
{"test":{"id":753,"name":"BusChange should handle same bus optimization","suiteID":696,"groupIDs":[738,751],"metadata":{"skip":false,"skipReason":null},"line":259,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/models/tidy_result_test.dart"},"type":"testStart","time":10642}
{"testID":753,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10643}
{"test":{"id":754,"name":"BusChange should describe bus reassignment","suiteID":696,"groupIDs":[738,751],"metadata":{"skip":false,"skipReason":null},"line":273,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/models/tidy_result_test.dart"},"type":"testStart","time":10644}
{"testID":754,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10645}
{"testID":745,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10650}
{"test":{"id":755,"name":"ConnectionValidator State Management Integration Tests Dynamic Connection Validation should preserve connection data during validation updates","suiteID":683,"groupIDs":[742,743,744],"metadata":{"skip":false,"skipReason":null},"line":147,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/services/connection_validator_integration_test.dart"},"type":"testStart","time":10650}
{"testID":755,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10652}
{"test":{"id":756,"name":"ConnectionValidator State Management Integration Tests Dynamic Connection Validation should handle multiple connections with mixed validity","suiteID":683,"groupIDs":[742,743,744],"metadata":{"skip":false,"skipReason":null},"line":250,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/services/connection_validator_integration_test.dart"},"type":"testStart","time":10652}
{"testID":756,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10653}
{"group":{"id":757,"suiteID":683,"parentID":743,"name":"ConnectionValidator State Management Integration Tests Algorithm Reordering Scenarios","metadata":{"skip":false,"skipReason":null},"testCount":1,"line":399,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/services/connection_validator_integration_test.dart"},"type":"group","time":10654}
{"test":{"id":758,"name":"ConnectionValidator State Management Integration Tests Algorithm Reordering Scenarios should validate complex reordering with multiple connections","suiteID":683,"groupIDs":[742,743,757],"metadata":{"skip":false,"skipReason":null},"line":400,"column":7,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/core/routing/services/connection_validator_integration_test.dart"},"type":"testStart","time":10654}
{"testID":758,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10655}
{"testID":704,"result":"success","skipped":false,"hidden":true,"type":"testDone","time":10851}
{"group":{"id":759,"suiteID":703,"parentID":null,"name":"","metadata":{"skip":false,"skipReason":null},"testCount":5,"line":null,"column":null,"url":null},"type":"group","time":10851}
{"group":{"id":760,"suiteID":703,"parentID":759,"name":"Sysex Message Decoding","metadata":{"skip":false,"skipReason":null},"testCount":2,"line":15,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/sysex_decode_test.dart"},"type":"group","time":10851}
{"test":{"id":761,"name":"Sysex Message Decoding should decode directory listing response correctly","suiteID":703,"groupIDs":[759,760],"metadata":{"skip":false,"skipReason":null},"line":16,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/sysex_decode_test.dart"},"type":"testStart","time":10851}
{"testID":761,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10868}
{"test":{"id":762,"name":"Sysex Message Decoding should decode number of algorithms response correctly","suiteID":703,"groupIDs":[759,760],"metadata":{"skip":false,"skipReason":null},"line":39,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/sysex_decode_test.dart"},"type":"testStart","time":10868}
{"testID":762,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10869}
{"group":{"id":763,"suiteID":703,"parentID":759,"name":"New Sysex Message Encoding","metadata":{"skip":false,"skipReason":null},"testCount":3,"line":68,"column":3,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/sysex_decode_test.dart"},"type":"group","time":10869}
{"test":{"id":764,"name":"New Sysex Message Encoding should encode Execute Lua message correctly","suiteID":703,"groupIDs":[759,763],"metadata":{"skip":false,"skipReason":null},"line":69,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/sysex_decode_test.dart"},"type":"testStart","time":10869}
{"testID":764,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10871}
{"test":{"id":765,"name":"New Sysex Message Encoding should encode Install Lua message correctly","suiteID":703,"groupIDs":[759,763],"metadata":{"skip":false,"skipReason":null},"line":97,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/sysex_decode_test.dart"},"type":"testStart","time":10871}
{"testID":765,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10872}
{"test":{"id":766,"name":"New Sysex Message Encoding should encode Set Parameter String message correctly","suiteID":703,"groupIDs":[759,763],"metadata":{"skip":false,"skipReason":null},"line":127,"column":5,"url":"file:///Users/nealsanche/nosuch/nt_helper/test/sysex_decode_test.dart"},"type":"testStart","time":10873}
{"testID":766,"result":"success","skipped":false,"hidden":false,"type":"testDone","time":10874}
{"success":false,"type":"done","time":10880}
