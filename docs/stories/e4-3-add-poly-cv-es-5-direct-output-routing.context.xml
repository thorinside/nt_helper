<story-context id="bmad/bmm/workflows/4-implementation/story-context/template" v="1.0">
  <metadata>
    <epicId>4</epicId>
    <storyId>3</storyId>
    <title>Add Poly CV ES-5 Direct Output Routing</title>
    <status>ready-for-dev</status>
    <generatedAt>2025-10-28</generatedAt>
    <generator>BMAD Story Context Workflow</generator>
    <sourceStoryPath>docs/stories/e4-3-add-poly-cv-es-5-direct-output-routing.md</sourceStoryPath>
  </metadata>

  <story>
    <asA>a user configuring Poly CV with ES-5 expander</asA>
    <iWant>nt_helper to display ES-5 direct gate output routing in the routing editor</iWant>
    <soThat>I can see where my polyphonic gate outputs are being sent to the ES-5 expander</soThat>
    <tasks>
      - Add ES-5 parameter parsing to PolyAlgorithmRouting (AC: 2-5)
        - Open lib/core/routing/poly_algorithm_routing.dart (DO NOT create new file)
        - Add ES-5 parameter parsing in createFromSlot() or initialization
        - Parse parameter 53: ES-5 Expander (global mode selector)
        - Parse parameter 54: ES-5 Output (base ES-5 port number)
        - Extract voice count from parameter 23: "Voices"
        - Parse output type enables: Gate outputs (8), Pitch outputs (9), Velocity outputs (10)
      - Modify gate output generation for ES-5 routing (AC: 6-7)
        - Locate generateOutputPorts() method
        - Add conditional logic for ES-5 Expander value
        - When ES-5 Expander > 0 and Gate outputs enabled: Generate gate ports with ES-5 routing, use sequential ES-5 port numbers, set busParam = 'es5_direct', set port names: "Voice X Gate → ES-5 Y"
        - When ES-5 Expander = 0: Use existing normal bus allocation for gates (no change)
      - Preserve normal bus allocation for Pitch/Velocity CVs (AC: 8-10)
        - Verify Pitch CV output generation unchanged (always normal buses)
        - Verify Velocity CV output generation unchanged (always normal buses)
        - Test mixed routing: Gates to ES-5, Pitch/Velocity to normal buses
        - Confirm First output parameter controls CV bus assignment
      - Implement synchronized ES-5 toggle UI pattern (AC: 11)
        - Populate es5ChannelToggles map with all gate port channel numbers
        - Set all gate channels to same toggle state (synchronized)
        - Populate es5ExpanderParameterNumbers with parameter 53 for all gates
        - Verify all gate toggles control same global parameter
        - Add tooltip text for global behavior indication
      - Handle edge cases (AC: 12-13)
        - If voice count > 8: Determine clipping or warning strategy
        - Test with voice count changes when ES-5 enabled/disabled
        - Verify specification-driven voice count extraction
        - Handle case where Gate outputs disabled (no gates to route)
      - Run tests and analysis (AC: 14-15)
        - Run full test suite: flutter test
        - Verify all existing Poly CV tests pass
        - Test mixed routing scenarios manually
        - Run flutter analyze
        - Fix any warnings if present
    </tasks>
  </story>

  <acceptanceCriteria>
    1. Poly CV currently displays in routing editor via PolyAlgorithmRouting (guid starts with 'py')
    2. Add ES-5 direct output support to existing PolyAlgorithmRouting class
    3. Parse ES-5 parameters: ES-5 Expander (53), ES-5 Output (54)
    4. Extract voice count from specification-controlled "Voices" parameter (23)
    5. Parse output type enables: Gate outputs (8), Pitch outputs (9), Velocity outputs (10)
    6. IMPORTANT: ES-5 applies to gate outputs ONLY, not to pitch/velocity CVs
    7. When ES-5 Expander > 0 and Gate outputs enabled: Gates route to ES-5 ports sequentially starting from ES-5 Output value, port names: "Voice 1 Gate → ES-5 1", use es5_direct bus param marker
    8. Pitch and Velocity CVs always use normal bus allocation starting from First output parameter (ES-5 does not affect CVs)
    9. When ES-5 Expander = 0: All outputs (gates + CVs) use normal bus allocation (existing behavior)
    10. Handle mixed routing: Gates to ES-5, CVs to normal buses (most common ES-5 use case)
    11. UI Pattern: Use synchronized per-gate ES-5 toggles (Option B). Each gate output port displays an ES-5 toggle button. All gate toggles are synchronized. All toggles control the same global parameter 53 (ES-5 Expander). Populate es5ChannelToggles for all gate port channel numbers. Populate es5ExpanderParameterNumbers with parameter 53 for all gates. Tooltip indicates global behavior: "ES-5 Mode: On (all gates)" / "ES-5 Mode: Off"
    12. Handle edge case: If gate count exceeds 8 ES-5 ports, warn or clip appropriately
    13. Voice count may increase when ES-5 is enabled (specification change observed in testing)
    14. All existing tests pass
    15. flutter analyze passes with zero warnings
  </acceptanceCriteria>

  <artifacts>
    <docs>
      <doc>
        <path>docs/epic-4-context.md</path>
        <title>Epic 4: ES-5 Direct Output Support - Technical Context</title>
        <section>Algorithm 3: Poly CV (pycv) - MOST COMPLEX</section>
        <snippet>Polyphonic MIDI/CV with multiple output types per voice and global ES-5 configuration. ES-5 applies to GATE OUTPUTS ONLY. Pitch and Velocity CVs ALWAYS use normal bus allocation. Voice count controlled by specifications (varies with output configuration).</snippet>
      </doc>
      <doc>
        <path>docs/epic-4-context.md</path>
        <title>Epic 4: ES-5 Direct Output Support - Technical Context</title>
        <section>Existing Infrastructure (ES-5 Pattern Already Established)</section>
        <snippet>Base class pattern fully implemented as Es5DirectOutputAlgorithmRouting. Dual-mode behavior: ES-5 Mode (expander > 0) routes directly to ES-5 port ignoring normal Output parameter. Normal Mode (expander = 0) uses normal bus assignment. Special bus marker: es5DirectBusParam = 'es5_direct'.</snippet>
      </doc>
      <doc>
        <path>docs/epic-4-context.md</path>
        <title>Epic 4: ES-5 Direct Output Support - Technical Context</title>
        <section>Story E4.3: Poly CV (Most Complex)</section>
        <snippet>Estimated 4-6 hours. DO NOT create new file - extend existing PolyAlgorithmRouting class. Modify generateOutputPorts() for gates only. Implement synchronized ES-5 toggle pattern. Handle edge cases (voice count > 8). Pitch/Velocity CVs always use normal buses.</snippet>
      </doc>
      <doc>
        <path>docs/architecture.md</path>
        <title>nt_helper Brownfield Architecture Document</title>
        <section>Routing System (Object-Oriented Framework)</section>
        <snippet>All routing logic lives in lib/core/routing/. AlgorithmRouting base class with factory pattern. ConnectionDiscoveryService discovers connections via bus assignments. Port model uses typesafe direct properties (no generic metadata maps). Visualization layer contains no business logic.</snippet>
      </doc>
      <doc>
        <path>CLAUDE.md</path>
        <title>Project Instructions</title>
        <section>Routing System</section>
        <snippet>The routing editor uses an object-oriented framework for data-driven routing visualization. Source of Truth: DistingCubit exposes synchronized Slots. AlgorithmRouting.fromSlot() factory creates routing instances from live Slot data. ConnectionDiscoveryService discovers connections via bus assignments (1-12 inputs, 13-20 outputs).</snippet>
      </doc>
    </docs>
    <code>
      <artifact>
        <path>lib/core/routing/poly_algorithm_routing.dart</path>
        <kind>class</kind>
        <symbol>PolyAlgorithmRouting</symbol>
        <lines>79-650</lines>
        <reason>CRITICAL: This is the existing class that must be extended for ES-5 support. Contains generateOutputPorts() method that needs modification for gate-only ES-5 routing. DO NOT create new file.</reason>
      </artifact>
      <artifact>
        <path>lib/core/routing/poly_algorithm_routing.dart</path>
        <kind>method</kind>
        <symbol>createFromSlot</symbol>
        <lines>490-650</lines>
        <reason>Factory method that creates PolyAlgorithmRouting instances from slots. Must be extended to parse ES-5 parameters (53, 54) and voice count (23).</reason>
      </artifact>
      <artifact>
        <path>lib/core/routing/poly_algorithm_routing.dart</path>
        <kind>method</kind>
        <symbol>generateOutputPorts</symbol>
        <lines>257-330</lines>
        <reason>Method that generates output ports. Must be modified to add conditional ES-5 routing for gate outputs only while preserving normal bus allocation for Pitch/Velocity CVs.</reason>
      </artifact>
      <artifact>
        <path>lib/core/routing/es5_direct_output_algorithm_routing.dart</path>
        <kind>class</kind>
        <symbol>Es5DirectOutputAlgorithmRouting</symbol>
        <lines>15-206</lines>
        <reason>Reference implementation showing ES-5 direct output pattern. Demonstrates dual-mode behavior (ES-5 vs normal), getChannelParameter() helper, and es5DirectBusParam marker.</reason>
      </artifact>
      <artifact>
        <path>lib/core/routing/clock_algorithm_routing.dart</path>
        <kind>class</kind>
        <symbol>ClockAlgorithmRouting</symbol>
        <lines>1-50</lines>
        <reason>Reference implementation of ES-5 direct output for simple algorithm. Shows canHandle() and createFromSlot() pattern.</reason>
      </artifact>
      <artifact>
        <path>lib/core/routing/algorithm_routing.dart</path>
        <kind>method</kind>
        <symbol>fromSlot</symbol>
        <lines>280-350</lines>
        <reason>Factory method that routes to specific algorithm routing implementations. Shows registration pattern. Poly CV already registered (line 327-334).</reason>
      </artifact>
      <artifact>
        <path>lib/core/routing/models/port.dart</path>
        <kind>class</kind>
        <symbol>Port</symbol>
        <lines>60-150</lines>
        <reason>Port model with direct properties. Shows busValue, busParam, channelNumber, parameterNumber properties needed for ES-5 routing.</reason>
      </artifact>
      <artifact>
        <path>lib/ui/widgets/routing/routing_editor_widget.dart</path>
        <kind>method</kind>
        <symbol>_extractEs5ToggleData</symbol>
        <lines>1500-1565</lines>
        <reason>Shows how ES-5 toggle data is extracted for Clock/Euclidean algorithms. Pattern must be extended to support Poly CV with global ES-5 configuration.</reason>
      </artifact>
      <artifact>
        <path>lib/ui/widgets/routing/algorithm_node_widget.dart</path>
        <kind>class</kind>
        <symbol>AlgorithmNodeWidget</symbol>
        <lines>67-103</lines>
        <reason>Widget that displays ES-5 toggles. Shows es5ChannelToggles and es5ExpanderParameterNumbers properties that Poly CV must populate.</reason>
      </artifact>
      <artifact>
        <path>lib/cubit/disting_cubit.dart</path>
        <kind>class</kind>
        <symbol>DistingCubit</symbol>
        <lines>1-100</lines>
        <reason>Primary application state. Source of truth for synchronized Slots. Routing system reads from this state.</reason>
      </artifact>
    </code>
    <dependencies>
      <flutter>
        <package name="flutter" version="sdk" />
        <package name="flutter_bloc" version="^9.1.1" />
        <package name="freezed_annotation" version="^2.4.4" />
      </flutter>
      <dart>
        <package name="dart" version=">=3.8.1 &lt;4.0.0" />
      </dart>
    </dependencies>
  </artifacts>

  <constraints>
    - DO NOT create a new file - extend existing PolyAlgorithmRouting class in lib/core/routing/poly_algorithm_routing.dart
    - ES-5 is an additive feature to existing poly routing logic
    - Preserve all existing functionality for non-ES-5 configurations
    - ES-5 applies to gate outputs ONLY, never to Pitch/Velocity CVs
    - All gate toggles must be synchronized (global ES-5 configuration)
    - Voice count is specification-controlled and may change when ES-5 toggled
    - Zero tolerance for flutter analyze errors
    - Always use debugPrint(), never print()
    - Must handle edge case: voice count > 8 ES-5 ports
    - Mixed routing (gates to ES-5, CVs to normal buses) is the most common use case
    - ConnectionDiscoveryService already recognizes es5_direct bus marker
    - Routing editor widget is purely display-driven (no logic)
    - All routing logic must live in the OO framework (lib/core/routing/)
  </constraints>

  <interfaces>
    <interface>
      <name>AlgorithmRouting.generateOutputPorts</name>
      <kind>abstract method</kind>
      <signature>List&lt;Port&gt; generateOutputPorts()</signature>
      <path>lib/core/routing/algorithm_routing.dart</path>
      <description>Must be overridden to generate output ports. Poly CV implementation must add ES-5 conditional logic for gate outputs only.</description>
    </interface>
    <interface>
      <name>Port construction for ES-5 direct output</name>
      <kind>pattern</kind>
      <signature>Port(id: String, name: String, busParam: 'es5_direct', channelNumber: int, ...)</signature>
      <path>lib/core/routing/models/port.dart</path>
      <description>ES-5 direct output ports must use busParam = 'es5_direct' marker and set channelNumber to ES-5 port number (1-8).</description>
    </interface>
    <interface>
      <name>Port construction for normal bus output</name>
      <kind>pattern</kind>
      <signature>Port(id: String, name: String, busValue: int, ...)</signature>
      <path>lib/core/routing/models/port.dart</path>
      <description>Normal output ports use busValue property for bus assignment (13-20). Pitch/Velocity CVs always use this pattern.</description>
    </interface>
    <interface>
      <name>ES-5 toggle data structure</name>
      <kind>record</kind>
      <signature>({Map&lt;int, bool&gt; toggles, Map&lt;int, int&gt; parameterNumbers, List&lt;int&gt; channelNumbers})?</signature>
      <path>lib/ui/widgets/routing/routing_editor_widget.dart</path>
      <description>Must be populated for Poly CV. toggles: ES-5 port number to enabled state. parameterNumbers: ES-5 port number to parameter 53. channelNumbers: list of all gate port ES-5 numbers.</description>
    </interface>
    <interface>
      <name>Parameter extraction from Slot</name>
      <kind>pattern</kind>
      <signature>slot.parameters.firstWhere((p) => p.name == paramName); slot.values.firstWhere((v) => v.parameterNumber == paramNumber).value</signature>
      <path>lib/cubit/disting_cubit.dart</path>
      <description>Standard pattern for extracting parameter values from Slot. Used to get ES-5 Expander (53), ES-5 Output (54), Voices (23), and output type enables.</description>
    </interface>
  </interfaces>

  <tests>
    <standards>
      Testing uses flutter_test framework. Test files mirror source structure in test/ directory. Existing poly algorithm routing tests in test/core/routing/. ES-5 pattern tests in test/core/routing/clock_euclidean_es5_test.dart show helper functions for creating test slots with ES-5 parameters. Tests must verify dual-mode behavior (ES-5 vs normal), mixed routing (gates to ES-5, CVs to normal buses), and voice count edge cases.
    </standards>
    <locations>
      - test/core/routing/poly_algorithm_routing_test.dart (existing Poly CV tests)
      - test/core/routing/clock_euclidean_es5_test.dart (ES-5 pattern reference)
      - test/core/routing/poly_cv_es5_test.dart (new tests for Story E4.5)
    </locations>
    <ideas>
      <test id="AC-7">
        <criteria>AC-7: ES-5 mode creates gate ports with es5_direct marker</criteria>
        <idea>Create Poly CV slot with ES-5 Expander = 1, ES-5 Output = 3, Gate outputs enabled, 4 voices. Verify: 4 gate ports generated, each with busParam = 'es5_direct', channelNumbers 3,4,5,6, names "Voice X Gate → ES-5 Y".</idea>
      </test>
      <test id="AC-8-9-10">
        <criteria>AC-8,9,10: Mixed routing - gates to ES-5, CVs to normal buses</criteria>
        <idea>Create Poly CV slot with ES-5 Expander = 1, Gate outputs enabled, Pitch outputs enabled, Velocity outputs enabled, 4 voices, First output = 13. Verify: 4 gate ports use ES-5, 4 pitch CV ports use buses 13-16, 4 velocity CV ports use buses 17-20.</idea>
      </test>
      <test id="AC-9">
        <criteria>AC-9: ES-5 Expander = 0 uses normal bus allocation for all outputs</criteria>
        <idea>Create Poly CV slot with ES-5 Expander = 0, all output types enabled, 4 voices, First output = 13. Verify: All outputs (gates + CVs) use normal buses 13-24 sequentially.</idea>
      </test>
      <test id="AC-11">
        <criteria>AC-11: Synchronized ES-5 toggles for all gates</criteria>
        <idea>Verify es5ChannelToggles populated for all gate ES-5 port numbers. Verify all toggle values are same (synchronized). Verify es5ExpanderParameterNumbers all map to parameter 53.</idea>
      </test>
      <test id="AC-12">
        <criteria>AC-12: Voice count > 8 edge case</criteria>
        <idea>Create Poly CV slot with ES-5 Expander = 1, 10 voices, Gate outputs enabled. Verify handling: either clip to 8 ES-5 ports, or handle overflow appropriately.</idea>
      </test>
      <test id="AC-6">
        <criteria>AC-6: Gate outputs disabled - no gates generated</criteria>
        <idea>Create Poly CV slot with ES-5 Expander = 1, Gate outputs = 0, Pitch/Velocity enabled. Verify: No gate ports generated, only Pitch/Velocity CV ports using normal buses.</idea>
      </test>
      <test id="AC-13">
        <criteria>AC-13: Voice count may change when ES-5 toggled</criteria>
        <idea>Test voice count extraction dynamically. Verify parameter 23 (Voices) is read correctly and voice count updates when specifications change.</idea>
      </test>
    </ideas>
  </tests>
</story-context>
