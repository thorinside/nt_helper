{
  "guid": "logi",
  "name": "Logic",
  "description": "This algorithm is based on the disting mk4 algorithm of the same name. You may like to review the [video on that algorithm, which is here. It also includes comparator functions, thus fulfilling the role of](https://www.youtube.com/watch?v=xmPFQmb91uI) [the disting mk4 Comparator algorithm, the video for which is here](https://www.youtube.com/watch?v=Ttp7RCtofg0) [76] . Each channel of the algorithm is independent and performs logical operations on its X & Y inputs. The following operations are available: |â€˜Operationâ€™ value|Operation|---|---|0|AND|1|OR|2|XOR|3|NAND|4|NOR|5|XNOR|6|SR flip-flop|7|D flip-flop|8|> (greater than)|9|< (less than)| The SR flip-flop is set high by a rising edge on input X, and cleared low by a rising edge on input Y. The D flip-flop takes the level of input X on a rising edge on input Y. The global parameters set the threshold and hysteresis of the input comparators which generate logical signals from arbitrary CVs (for an explanation of hysteresis see here](http://en.wikipedia.org/wiki/Hysteresis#Electronic_circuits) [77] ). Complex logical operations can be constructed by combining operations. The inputs of each channel can be set to the outputs of other channels, allowing you to chain them internally to the algorithm. 76 https://www.youtube.com/watch?v=Ttp7RCtofg0 77 http://en.wikipedia.org/wiki/Hysteresis#Electronic_circuits Page 167",
  "categories": [
    "logic"
  ],
  "short_description": "Performs various logical operations",
  "specifications": [
    {
      "name": "Channels",
      "min": 1,
      "max": 8
    }
  ],
  "parameters": [
    {
      "name": "Enable",
      "min": 0,
      "max": 1,
      "default": "0",
      "type": "enum",
      "is_per_channel": true
    },
    {
      "name": "Operation",
      "min": 0,
      "max": 9,
      "default": "0",
      "type": "enum",
      "is_per_channel": true
    },
    {
      "name": "Invert X",
      "min": 0,
      "max": 1,
      "default": "0",
      "type": "enum",
      "is_per_channel": true
    },
    {
      "name": "Invert Y",
      "min": 0,
      "max": 1,
      "default": "0",
      "type": "enum",
      "is_per_channel": true
    },
    {
      "name": "Invert output",
      "min": 0,
      "max": 1,
      "default": "0",
      "type": "enum",
      "is_per_channel": true
    },
    {
      "name": "Input X",
      "min": 1,
      "max": 1,
      "default": "1",
      "type": "enum",
      "is_per_channel": true
    },
    {
      "name": "Input Y",
      "min": 1,
      "max": 2,
      "default": "2",
      "type": "enum",
      "is_per_channel": true
    },
    {
      "name": "Output",
      "min": 0,
      "max": 28,
      "default": "15",
      "type": "enum",
      "is_per_channel": true
    },
    {
      "name": "Output mode",
      "min": 0,
      "max": 1,
      "default": "0",
      "type": "enum",
      "is_per_channel": true
    }
  ],
  "input_ports": [
    {
      "name": "X",
      "description": "Input X"
    }
  ],
  "output_ports": [
    {
      "name": "Output",
      "description": "Output"
    }
  ]
}