{
  "name": "Arpeggiator",
  "guid": "arpg",
  "short_description": "Makes sequences from held chords",
  "description": "This algorithm is a very flexible arpeggiator, in some respects an interactive, performance-oriented sequencer. It is based on the arpeggiator in our FH-2 module. It takes MIDI or CV/gate input and generates MIDI and/or CV/gate output. The key to using this as an interactive sequencer is to map the 'Commands' parameters, so you can use them alongside playing notes to manipulate your patterns. When using it as a MIDI-to-MIDI arpeggiator, and sending the MIDI internally to other algorithms, remember that algorithms in the disting NT do not 'consume' their input MIDI - the MIDI entering the arpeggiator will still arrive at the other algorithms as well. So, set the output channel of the arpeggiator to a different channel than the input, and have the other algorithms listen to that channel. For the purposes of MIDI and CV/gate input this algorithm is a polysynth.",
  "categories": [
    "Sequencer",
    "Arpeggiator",
    "MIDI"
  ],
  "use_cases": [
    "Interactive sequencing",
    "Chord arpeggiation",
    "MIDI pattern generation",
    "CV/gate pattern generation",
    "Performance sequencing"
  ],
  "gui_description": "The display shows various information relating to the current arpeggiation pattern. On the left you see the current output note, whether the pattern is currently latched, and the current root note. The three lines in the main section of the display show, from top to bottom, a representation of the entire arpeggiation pattern, the octaves of the pattern (when 'Range' is used), and the note within a single octave of the pattern. For the 'as played' modes, the lowest line instead shows actual note numbers. A '--' represents a rest added with the 'Rest' command. When 'Truncate' is used, the omitted steps are greyed out.",
  "specifications": [],
  "parameters": [
    {
      "page": "Arp parameters",
      "params": [
        {
          "name": "Mode",
          "min": 0,
          "max": 11,
          "default": 0,
          "unit": null,
          "description": "The arpeggiation mode - see below.",
          "enum_values": [
            "Off",
            "Up",
            "Down",
            "Alt",
            "Alt2",
            "As Played",
            "Step Up",
            "Step Down",
            "Step As Played",
            "Random",
            "Random2",
            "Random3"
          ]
        },
        {
          "name": "Range",
          "min": 1,
          "max": 3,
          "default": 1,
          "unit": null,
          "description": "The number of octaves to repeat the arpeggiation pattern over."
        },
        {
          "name": "Latch",
          "min": 0,
          "max": 1,
          "default": 0,
          "unit": null,
          "description": "Enables latching. See above.",
          "enum_values": [
            "Off",
            "On"
          ]
        },
        {
          "name": "Truncate",
          "min": 0,
          "max": 100,
          "default": 100,
          "unit": "%",
          "description": "Shortens the arpeggiation pattern by only playing the first portion, according to the percentage set."
        },
        {
          "name": "Gate type",
          "min": 0,
          "max": 1,
          "default": 0,
          "unit": null,
          "description": "Sets the gate type: \"Trigger\" or \"% of clock\".",
          "enum_values": [
            "Trigger",
            "% of clock"
          ]
        },
        {
          "name": "Length (ms)",
          "min": 1,
          "max": 100,
          "default": 10,
          "unit": "ms",
          "description": "Sets the length of the gate output if the type is \"Trigger\"."
        },
        {
          "name": "Length (%)",
          "min": 1,
          "max": 100,
          "default": 50,
          "unit": "%",
          "description": "Sets the length of the gate output if the type is \"% of clock\"."
        }
      ]
    },
    {
      "page": "Commands parameters",
      "params": [
        {
          "name": "Add",
          "min": 0,
          "max": 1,
          "default": 0,
          "unit": null,
          "description": "While enabled, incoming notes will be added to the arpeggiation pattern. This is most useful when the Mode is 'As Played' and Latch is on. It allows you to have repeated notes in the pattern.",
          "enum_values": [
            "Off",
            "On"
          ]
        },
        {
          "name": "Remove",
          "min": 0,
          "max": 1,
          "default": 0,
          "unit": null,
          "description": "While enabled, incoming notes will be removed from the pattern (if the note in question is actually in the pattern already). If the same note appears multiple times, the last occurrence will be removed.",
          "enum_values": [
            "Off",
            "On"
          ]
        },
        {
          "name": "Rest",
          "min": 0,
          "max": 1,
          "default": 0,
          "unit": null,
          "description": "When enabled, a rest is added to or removed from the arpeggiation pattern, according to whether Add or Remove is currently active.",
          "enum_values": [
            "Off",
            "On"
          ]
        },
        {
          "name": "Transpose",
          "min": 0,
          "max": 1,
          "default": 0,
          "unit": null,
          "description": "While enabled, incoming notes will transpose the current pattern, by the amount of the difference between the incoming note and the root note of the pattern. The root note is by default the lowest note of the pattern, but see 'Root note' below.",
          "enum_values": [
            "Off",
            "On"
          ]
        },
        {
          "name": "Transpose in key",
          "min": 0,
          "max": 1,
          "default": 0,
          "unit": null,
          "description": "Like Transpose, but rather than a straight chromatic transposition, the pattern is transposed within the key defined by the root note. For example, if the pattern is C-E-G (root note C) and D is played, 'Transpose' will produce D-F-A, whereas 'Transpose in key' will produce D-F-A.",
          "enum_values": [
            "Off",
            "On"
          ]
        },
        {
          "name": "Root note",
          "min": 0,
          "max": 1,
          "default": 0,
          "unit": null,
          "description": "While enabled, an incoming note overrides the root note, so that subsequent transposition is based on the overridden note. For example, if the pattern is E-G-C, the default root note will be E, but you could use the 'Root note' command to let the arpeggiator know the key is C.",
          "enum_values": [
            "Off",
            "On"
          ]
        }
      ]
    },
    {
      "page": "MIDI/I2C parameters",
      "params": [
        {
          "name": "MIDI channel",
          "min": 0,
          "max": 16,
          "default": 1,
          "unit": null,
          "description": "The MIDI channel to listen on."
        },
        {
          "name": "MPE channels",
          "min": 1,
          "max": 16,
          "default": 1,
          "unit": null,
          "description": "Controls how the algorithm will respond to MPE. See above."
        },
        {
          "name": "I2C channel",
          "min": 0,
          "max": 255,
          "default": 1,
          "unit": null,
          "description": "Sets the I2C channel."
        },
        {
          "name": "Sustain",
          "min": 0,
          "max": 1,
          "default": 0,
          "unit": null,
          "description": "Directly controls the sustain (like a MIDI sustain pedal).",
          "enum_values": [
            "Off",
            "On"
          ]
        },
        {
          "name": "Sustain mode",
          "min": 0,
          "max": 1,
          "default": 0,
          "unit": null,
          "description": "The standard polysynth sustain mode parameter. See above.",
          "enum_values": [
            "Mode 0",
            "Mode 1"
          ]
        }
      ]
    },
    {
      "page": "Sync parameters",
      "params": [
        {
          "name": "Clock input",
          "min": 0,
          "max": 28,
          "default": 0,
          "unit": null,
          "description": "The bus to use for the clock input.",
          "is_bus": true
        },
        {
          "name": "Reset input",
          "min": 0,
          "max": 28,
          "default": 0,
          "unit": null,
          "description": "The bus to use for the reset input.",
          "is_bus": true
        },
        {
          "name": "Reset mode",
          "min": 0,
          "max": 1,
          "default": 0,
          "unit": null,
          "description": "The reset mode, one of 'Trigger' or 'Run/stop'.",
          "enum_values": [
            "Trigger",
            "Run/stop"
          ]
        },
        {
          "name": "Follow MIDI clock",
          "min": 0,
          "max": 1,
          "default": 0,
          "unit": null,
          "description": "Sets whether the arpeggiator follows MIDI clock.",
          "enum_values": [
            "Off",
            "On"
          ]
        },
        {
          "name": "Divisor",
          "min": 0,
          "max": 19,
          "default": 4,
          "unit": null,
          "description": "Sets the clock divisor when following MIDI clock."
        },
        {
          "name": "Auto reset",
          "min": 0,
          "max": 128,
          "default": 0,
          "unit": null,
          "description": "Sets a number of quarter notes after which the arpeggiator will automatically reset to step 1 (only available when following MIDI clock)."
        }
      ]
    },
    {
      "page": "MIDI out parameters",
      "params": [
        {
          "name": "MIDI channel",
          "min": 0,
          "max": 16,
          "default": 0,
          "unit": null,
          "description": "The output MIDI channel."
        },
        {
          "name": "Output to breakout",
          "min": 0,
          "max": 1,
          "default": 0,
          "unit": null,
          "description": "Enables MIDI output to the breakout.",
          "enum_values": [
            "Off",
            "On"
          ]
        },
        {
          "name": "Output to Select Bus",
          "min": 0,
          "max": 1,
          "default": 0,
          "unit": null,
          "description": "Enables MIDI output to the Select Bus.",
          "enum_values": [
            "Off",
            "On"
          ]
        },
        {
          "name": "Output to USB",
          "min": 0,
          "max": 1,
          "default": 0,
          "unit": null,
          "description": "Enables MIDI output to USB.",
          "enum_values": [
            "Off",
            "On"
          ]
        },
        {
          "name": "Output to internal",
          "min": 0,
          "max": 1,
          "default": 0,
          "unit": null,
          "description": "Enables internal MIDI output - that is, MIDI is sent to the other algorithms.",
          "enum_values": [
            "Off",
            "On"
          ]
        }
      ]
    },
    {
      "page": "CV/gate out parameters",
      "params": [
        {
          "name": "Gate output",
          "min": 0,
          "max": 28,
          "default": 0,
          "unit": null,
          "description": "The bus to use for the gate output.",
          "is_bus": true
        },
        {
          "name": "Gate mode",
          "min": 0,
          "max": 1,
          "default": 0,
          "unit": null,
          "description": "The standard Add/Replace mode selector as described above, for the gate output.",
          "enum_values": [
            "Replace",
            "Add"
          ],
          "is_common": true
        },
        {
          "name": "Pitch output",
          "min": 0,
          "max": 28,
          "default": 0,
          "unit": null,
          "description": "The bus to use for the pitch output.",
          "is_bus": true
        },
        {
          "name": "Pitch mode",
          "min": 0,
          "max": 1,
          "default": 0,
          "unit": null,
          "description": "The standard Add/Replace mode selector as described above, for the pitch output.",
          "enum_values": [
            "Replace",
            "Add"
          ],
          "is_common": true
        },
        {
          "name": "Velocity output",
          "min": 0,
          "max": 28,
          "default": 0,
          "unit": null,
          "description": "The bus to use for the velocity output.",
          "is_bus": true
        },
        {
          "name": "Velocity mode",
          "min": 0,
          "max": 1,
          "default": 0,
          "unit": null,
          "description": "The standard Add/Replace mode selector as described above, for the velocity output.",
          "enum_values": [
            "Replace",
            "Add"
          ],
          "is_common": true
        }
      ]
    }
  ],
  "input_ports": [
    {
      "name": "Clock input",
      "busIdRef": "Clock input"
    },
    {
      "name": "Reset input",
      "busIdRef": "Reset input"
    }
  ],
  "output_ports": [
    {
      "name": "Gate output",
      "busIdRef": "Gate output"
    },
    {
      "name": "Pitch output",
      "busIdRef": "Pitch output"
    },
    {
      "name": "Velocity output",
      "busIdRef": "Velocity output"
    }
  ]
}