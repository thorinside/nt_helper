{
  "guid": "pycv",
  "name": "Poly CV",
  "categories": [
    "CV",
    "Utility",
    "Polysynth"
  ],
  "description": "A polyphonic MIDI/CV converter that takes polysynth control logic (MIDI, I2C, CV/Gate, Chord/Arp) and outputs CVs/gates instead of sound. Supports microtuning.",
  "specifications": [
    {
      "name": "Voices",
      "value": {
        "minValue": 1,
        "maxValue": 14,
        "defaultValue": 1
      },
      "description": "The number of simultaneous voices."
    }
  ],
  "parameters": [
    {
      "name": "MIDI channel",
      "unit": null,
      "defaultValue": 1,
      "minValue": 0,
      "maxValue": 16,
      "description": "The MIDI channel to listen on (0=Omni).",
      "scope": "global"
    },
    {
      "name": "MPE channels",
      "unit": null,
      "defaultValue": 1,
      "minValue": 1,
      "maxValue": 16,
      "description": "Controls how the algorithm responds to MPE.",
      "scope": "global"
    },
    {
      "name": "I2C channel",
      "unit": null,
      "defaultValue": 1,
      "minValue": 0,
      "maxValue": 255,
      "description": "Sets the I2C channel (0=Off).",
      "scope": "global"
    },
    {
      "name": "Transpose",
      "unit": "ST",
      "defaultValue": 0,
      "minValue": -60,
      "maxValue": 60,
      "description": "Coarse tuning control.",
      "scope": "global"
    },
    {
      "name": "Fine tune",
      "unit": "cents",
      "defaultValue": 0,
      "minValue": -100,
      "maxValue": 100,
      "description": "Fine tuning control.",
      "scope": "global",
      "min": -100,
      "max": 100,
      "default": 0
    },
    {
      "name": "Bend range",
      "unit": null,
      "defaultValue": 2,
      "minValue": 0,
      "maxValue": 48,
      "description": "The MIDI pitch bend range in semitones.",
      "scope": "global",
      "min": 0,
      "max": 48,
      "default": 2
    },
    {
      "name": "Min vel gate",
      "unit": "V",
      "defaultValue": 1.0,
      "minValue": 0.0,
      "maxValue": 5.0,
      "description": "Minimum gate voltage if gates are scaled by velocity (Velocity=0). Max is 5V (Velocity=127).",
      "scope": "global",
      "min": 0,
      "max": 5,
      "default": 1
    },
    {
      "name": "Voices",
      "unit": null,
      "defaultValue": 1,
      "minValue": 1,
      "maxValue": 14,
      "description": "The number of voices to use (up to the specification limit).",
      "scope": "global",
      "min": 1,
      "max": 14,
      "default": 1
    },
    {
      "name": "First output",
      "unit": "bus",
      "defaultValue": 15,
      "minValue": 1,
      "maxValue": 28,
      "description": "The first output bus to use for voice allocation (gate, pitch, velocity).",
      "scope": "global"
    },
    {
      "name": "Gate outputs",
      "unit": null,
      "defaultValue": 1,
      "minValue": 0,
      "maxValue": 2,
      "enumValues": [
        "Off",
        "On",
        "Velocity"
      ],
      "description": "Whether to include gate outputs, and if they are scaled by velocity.",
      "scope": "global"
    },
    {
      "name": "Pitch outputs",
      "unit": null,
      "defaultValue": 1,
      "minValue": 0,
      "maxValue": 1,
      "description": "Whether to include pitch CV outputs.",
      "scope": "global"
    },
    {
      "name": "Velocity outputs",
      "unit": null,
      "defaultValue": 0,
      "minValue": 0,
      "maxValue": 1,
      "description": "Whether to include velocity outputs.",
      "scope": "global"
    },
    {
      "name": "Gate mode",
      "unit": null,
      "defaultValue": 1,
      "minValue": 0,
      "maxValue": 1,
      "enumValues": [
        "Add",
        "Replace"
      ],
      "description": "Add/Replace mode for gate outputs.",
      "scope": "global",
      "min": 0,
      "max": 1,
      "default": 1
    },
    {
      "name": "Pitch mode",
      "unit": null,
      "defaultValue": 1,
      "minValue": 0,
      "maxValue": 1,
      "enumValues": [
        "Add",
        "Replace"
      ],
      "description": "Add/Replace mode for pitch CV outputs.",
      "scope": "global",
      "min": 0,
      "max": 1,
      "default": 1
    },
    {
      "name": "Velocity mode",
      "unit": null,
      "defaultValue": 1,
      "minValue": 0,
      "maxValue": 1,
      "enumValues": [
        "Add",
        "Replace"
      ],
      "description": "Add/Replace mode for velocity outputs.",
      "scope": "global"
    },
    {
      "name": "1 16 1 Controls how the algorithm will respond to MPE. See above. I2C channel",
      "min": 0,
      "max": 255,
      "default": 1,
      "description": "Sets the I2C channel."
    },
    {
      "name": "0 1 0 The standard polysynth sustain mode parameter. See above. Sustain",
      "min": 0,
      "max": 1,
      "default": 0,
      "description": "Directly controls the sustain (like a MIDI sustain"
    },
    {
      "name": "pedal). Transpose",
      "unit": "ST",
      "min": -60,
      "max": 60,
      "default": 0,
      "description": "Coarse tuning control."
    },
    {
      "name": "set by the specification). First output",
      "min": 1,
      "max": 28,
      "default": 15,
      "description": "The first output bus to use.",
      "scope": "routing"
    },
    {
      "name": "1 16 1 Controls how the algorithm will respond to MPE. See above. I2C channel",
      "min": 0,
      "max": 255,
      "default": 1,
      "description": "Sets the I2C channel."
    },
    {
      "name": "0 1 0 The standard polysynth sustain mode parameter. See above. Sustain",
      "min": 0,
      "max": 1,
      "default": 0,
      "description": "Directly controls the sustain (like a MIDI sustain"
    },
    {
      "name": "pedal). Transpose",
      "unit": "ST",
      "min": -60,
      "max": 60,
      "default": 0,
      "description": "Coarse tuning control."
    },
    {
      "name": "set by the specification). First output",
      "min": 1,
      "max": 28,
      "default": 15,
      "description": "The first output bus to use.",
      "scope": "routing"
    }
  ],
  "features": [
    "feat_poly_params"
  ],
  "input_ports": [],
  "output_ports": [
    {
      "id": "gate",
      "name": "Gate Output",
      "description": "Gate output for a voice. Bus determined by 'First output' and voice index."
    },
    {
      "id": "pitch",
      "name": "Pitch Output",
      "description": "Pitch CV output for a voice. Bus determined by 'First output' and voice index."
    },
    {
      "id": "velocity",
      "name": "Velocity Output",
      "description": "Velocity CV output for a voice. Bus determined by 'First output' and voice index."
    }
  ]
}