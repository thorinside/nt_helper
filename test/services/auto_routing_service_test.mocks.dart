// Mocks generated by Mockito 5.4.6 from annotations
// in nt_helper/test/services/auto_routing_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:typed_data' as _i9;

import 'package:bloc/bloc.dart' as _i17;
import 'package:flutter_midi_command/flutter_midi_command.dart' as _i10;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;
import 'package:nt_helper/cubit/disting_cubit.dart' as _i4;
import 'package:nt_helper/db/daos/presets_dao.dart' as _i11;
import 'package:nt_helper/db/database.dart' as _i2;
import 'package:nt_helper/domain/disting_nt_sysex.dart' as _i12;
import 'package:nt_helper/domain/i_disting_midi_manager.dart' as _i3;
import 'package:nt_helper/domain/video/video_stream_state.dart' as _i7;
import 'package:nt_helper/models/cpu_usage.dart' as _i6;
import 'package:nt_helper/models/package_file.dart' as _i16;
import 'package:nt_helper/models/packed_mapping_data.dart' as _i13;
import 'package:nt_helper/models/plugin_info.dart' as _i15;
import 'package:nt_helper/models/routing_information.dart' as _i14;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAppDatabase_0 extends _i1.SmartFake implements _i2.AppDatabase {
  _FakeAppDatabase_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIDistingMidiManager_1 extends _i1.SmartFake
    implements _i3.IDistingMidiManager {
  _FakeIDistingMidiManager_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [DistingCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockDistingCubit extends _i1.Mock implements _i4.DistingCubit {
  MockDistingCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AppDatabase get database =>
      (super.noSuchMethod(
            Invocation.getter(#database),
            returnValue: _FakeAppDatabase_0(this, Invocation.getter(#database)),
          )
          as _i2.AppDatabase);

  @override
  _i5.Stream<_i6.CpuUsage> get cpuUsageStream =>
      (super.noSuchMethod(
            Invocation.getter(#cpuUsageStream),
            returnValue: _i5.Stream<_i6.CpuUsage>.empty(),
          )
          as _i5.Stream<_i6.CpuUsage>);

  @override
  _i5.Stream<_i7.VideoStreamState?> get videoStreamState =>
      (super.noSuchMethod(
            Invocation.getter(#videoStreamState),
            returnValue: _i5.Stream<_i7.VideoStreamState?>.empty(),
          )
          as _i5.Stream<_i7.VideoStreamState?>);

  @override
  _i4.DistingState get state =>
      (super.noSuchMethod(
            Invocation.getter(#state),
            returnValue: _i8.dummyValue<_i4.DistingState>(
              this,
              Invocation.getter(#state),
            ),
          )
          as _i4.DistingState);

  @override
  _i5.Stream<_i4.DistingState> get stream =>
      (super.noSuchMethod(
            Invocation.getter(#stream),
            returnValue: _i5.Stream<_i4.DistingState>.empty(),
          )
          as _i5.Stream<_i4.DistingState>);

  @override
  bool get isClosed =>
      (super.noSuchMethod(Invocation.getter(#isClosed), returnValue: false)
          as bool);

  @override
  _i5.Future<void> close() =>
      (super.noSuchMethod(
            Invocation.method(#close, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> onDemo() =>
      (super.noSuchMethod(
            Invocation.method(#onDemo, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> loadDevices() =>
      (super.noSuchMethod(
            Invocation.method(#loadDevices, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i9.Uint8List?> getHardwareScreenshot() =>
      (super.noSuchMethod(
            Invocation.method(#getHardwareScreenshot, []),
            returnValue: _i5.Future<_i9.Uint8List?>.value(),
          )
          as _i5.Future<_i9.Uint8List?>);

  @override
  _i5.Future<void> updateScreenshot() =>
      (super.noSuchMethod(
            Invocation.method(#updateScreenshot, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i6.CpuUsage?> getCpuUsage() =>
      (super.noSuchMethod(
            Invocation.method(#getCpuUsage, []),
            returnValue: _i5.Future<_i6.CpuUsage?>.value(),
          )
          as _i5.Future<_i6.CpuUsage?>);

  @override
  void disconnect() => super.noSuchMethod(
    Invocation.method(#disconnect, []),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<void> connectToDevices(
    _i10.MidiDevice? inputDevice,
    _i10.MidiDevice? outputDevice,
    int? sysExId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#connectToDevices, [
              inputDevice,
              outputDevice,
              sysExId,
            ]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> goOffline() =>
      (super.noSuchMethod(
            Invocation.method(#goOffline, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> goOnline() =>
      (super.noSuchMethod(
            Invocation.method(#goOnline, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> cancelSync() =>
      (super.noSuchMethod(
            Invocation.method(#cancelSync, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> loadPresetOffline(_i11.FullPresetDetails? presetDetails) =>
      (super.noSuchMethod(
            Invocation.method(#loadPresetOffline, [presetDetails]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> refresh({bool? fullRefresh = false}) =>
      (super.noSuchMethod(
            Invocation.method(#refresh, [], {#fullRefresh: fullRefresh}),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i3.IDistingMidiManager requireDisting() =>
      (super.noSuchMethod(
            Invocation.method(#requireDisting, []),
            returnValue: _FakeIDistingMidiManager_1(
              this,
              Invocation.method(#requireDisting, []),
            ),
          )
          as _i3.IDistingMidiManager);

  @override
  List<T> replaceInList<T>(
    List<T>? original,
    T? element, {
    required int? index,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #replaceInList,
              [original, element],
              {#index: index},
            ),
            returnValue: <T>[],
          )
          as List<T>);

  @override
  List<_i4.Slot> updateSlot(
    int? algorithmIndex,
    List<_i4.Slot>? slots,
    _i4.Slot Function(_i4.Slot)? updateFunction,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateSlot, [
              algorithmIndex,
              slots,
              updateFunction,
            ]),
            returnValue: <_i4.Slot>[],
          )
          as List<_i4.Slot>);

  @override
  _i5.Future<void> updateParameterValue({
    required int? algorithmIndex,
    required int? parameterNumber,
    required int? value,
    required bool? userIsChangingTheValue,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateParameterValue, [], {
              #algorithmIndex: algorithmIndex,
              #parameterNumber: parameterNumber,
              #value: value,
              #userIsChangingTheValue: userIsChangingTheValue,
            }),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> onAlgorithmSelected(
    _i12.AlgorithmInfo? algorithm,
    List<int>? specifications,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#onAlgorithmSelected, [
              algorithm,
              specifications,
            ]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> onRemoveAlgorithm(int? algorithmIndex) =>
      (super.noSuchMethod(
            Invocation.method(#onRemoveAlgorithm, [algorithmIndex]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  void renamePreset(String? newName) => super.noSuchMethod(
    Invocation.method(#renamePreset, [newName]),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<int> moveAlgorithmUp(int? algorithmIndex) =>
      (super.noSuchMethod(
            Invocation.method(#moveAlgorithmUp, [algorithmIndex]),
            returnValue: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<int> moveAlgorithmDown(int? algorithmIndex) =>
      (super.noSuchMethod(
            Invocation.method(#moveAlgorithmDown, [algorithmIndex]),
            returnValue: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<void> newPreset() =>
      (super.noSuchMethod(
            Invocation.method(#newPreset, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> loadPreset(String? name, bool? append) =>
      (super.noSuchMethod(
            Invocation.method(#loadPreset, [name, append]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> saveMapping(
    int? algorithmIndex,
    int? parameterNumber,
    _i13.PackedMappingData? data,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#saveMapping, [
              algorithmIndex,
              parameterNumber,
              data,
            ]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  void renameSlot(int? algorithmIndex, String? newName) => super.noSuchMethod(
    Invocation.method(#renameSlot, [algorithmIndex, newName]),
    returnValueForMissingStub: null,
  );

  @override
  List<_i14.RoutingInformation> buildRoutingInformation() =>
      (super.noSuchMethod(
            Invocation.method(#buildRoutingInformation, []),
            returnValue: <_i14.RoutingInformation>[],
          )
          as List<_i14.RoutingInformation>);

  @override
  void setDisplayMode(_i12.DisplayMode? displayMode) => super.noSuchMethod(
    Invocation.method(#setDisplayMode, [displayMode]),
    returnValueForMissingStub: null,
  );

  @override
  List<_i4.MappedParameter> buildMappedParameterList() =>
      (super.noSuchMethod(
            Invocation.method(#buildMappedParameterList, []),
            returnValue: <_i4.MappedParameter>[],
          )
          as List<_i4.MappedParameter>);

  @override
  void startPollingMappedParameters() => super.noSuchMethod(
    Invocation.method(#startPollingMappedParameters, []),
    returnValueForMissingStub: null,
  );

  @override
  void stopPollingMappedParameters() => super.noSuchMethod(
    Invocation.method(#stopPollingMappedParameters, []),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<void> resetOutputs(_i4.Slot? slot, int? outputIndex) =>
      (super.noSuchMethod(
            Invocation.method(#resetOutputs, [slot, outputIndex]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<_i4.Slot>> fetchSlots(
    int? numAlgorithmsInPreset,
    _i3.IDistingMidiManager? disting,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#fetchSlots, [numAlgorithmsInPreset, disting]),
            returnValue: _i5.Future<List<_i4.Slot>>.value(<_i4.Slot>[]),
          )
          as _i5.Future<List<_i4.Slot>>);

  @override
  _i5.Future<_i4.Slot> fetchSlot(
    _i3.IDistingMidiManager? disting,
    int? algorithmIndex,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#fetchSlot, [disting, algorithmIndex]),
            returnValue: _i5.Future<_i4.Slot>.value(
              _i8.dummyValue<_i4.Slot>(
                this,
                Invocation.method(#fetchSlot, [disting, algorithmIndex]),
              ),
            ),
          )
          as _i5.Future<_i4.Slot>);

  @override
  _i5.Future<void> refreshRouting() =>
      (super.noSuchMethod(
            Invocation.method(#refreshRouting, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<String>> scanSdCardPresets() =>
      (super.noSuchMethod(
            Invocation.method(#scanSdCardPresets, []),
            returnValue: _i5.Future<List<String>>.value(<String>[]),
          )
          as _i5.Future<List<String>>);

  @override
  _i5.Future<List<String>> fetchSdCardPresets() =>
      (super.noSuchMethod(
            Invocation.method(#fetchSdCardPresets, []),
            returnValue: _i5.Future<List<String>>.value(<String>[]),
          )
          as _i5.Future<List<String>>);

  @override
  _i5.Future<List<_i15.PluginInfo>> fetchLuaPlugins() =>
      (super.noSuchMethod(
            Invocation.method(#fetchLuaPlugins, []),
            returnValue: _i5.Future<List<_i15.PluginInfo>>.value(
              <_i15.PluginInfo>[],
            ),
          )
          as _i5.Future<List<_i15.PluginInfo>>);

  @override
  _i5.Future<List<_i15.PluginInfo>> fetch3potPlugins() =>
      (super.noSuchMethod(
            Invocation.method(#fetch3potPlugins, []),
            returnValue: _i5.Future<List<_i15.PluginInfo>>.value(
              <_i15.PluginInfo>[],
            ),
          )
          as _i5.Future<List<_i15.PluginInfo>>);

  @override
  _i5.Future<List<_i15.PluginInfo>> fetchCppPlugins() =>
      (super.noSuchMethod(
            Invocation.method(#fetchCppPlugins, []),
            returnValue: _i5.Future<List<_i15.PluginInfo>>.value(
              <_i15.PluginInfo>[],
            ),
          )
          as _i5.Future<List<_i15.PluginInfo>>);

  @override
  _i5.Future<void> refreshSlotParameterStrings(int? algorithmIndex) =>
      (super.noSuchMethod(
            Invocation.method(#refreshSlotParameterStrings, [algorithmIndex]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> refreshSlot(int? algorithmIndex) =>
      (super.noSuchMethod(
            Invocation.method(#refreshSlot, [algorithmIndex]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> updateParameterString({
    required int? algorithmIndex,
    required int? parameterNumber,
    required String? value,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateParameterString, [], {
              #algorithmIndex: algorithmIndex,
              #parameterNumber: parameterNumber,
              #value: value,
            }),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> startVideoStream() =>
      (super.noSuchMethod(
            Invocation.method(#startVideoStream, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> stopVideoStream() =>
      (super.noSuchMethod(
            Invocation.method(#stopVideoStream, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  void pauseCpuMonitoring() => super.noSuchMethod(
    Invocation.method(#pauseCpuMonitoring, []),
    returnValueForMissingStub: null,
  );

  @override
  void resumeCpuMonitoring() => super.noSuchMethod(
    Invocation.method(#resumeCpuMonitoring, []),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<void> deletePlugin(_i15.PluginInfo? plugin) =>
      (super.noSuchMethod(
            Invocation.method(#deletePlugin, [plugin]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> installPlugin(
    String? fileName,
    _i9.Uint8List? fileData, {
    dynamic Function(double)? onProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #installPlugin,
              [fileName, fileData],
              {#onProgress: onProgress},
            ),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> forceReloadLuaScriptWithStatePreservation(
    int? algorithmIndex,
    int? programParameterNumber,
    int? currentProgramValue,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#forceReloadLuaScriptWithStatePreservation, [
              algorithmIndex,
              programParameterNumber,
              currentProgramValue,
            ]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> backupPlugins(
    String? backupDirectory, {
    void Function(double, String)? onProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #backupPlugins,
              [backupDirectory],
              {#onProgress: onProgress},
            ),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> installPackageFiles(
    List<_i16.PackageFile>? files,
    Map<String, _i9.Uint8List>? fileData, {
    dynamic Function(String, int, int)? onFileStart,
    dynamic Function(String, double)? onFileProgress,
    dynamic Function(String)? onFileComplete,
    dynamic Function(String, String)? onFileError,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #installPackageFiles,
              [files, fileData],
              {
                #onFileStart: onFileStart,
                #onFileProgress: onFileProgress,
                #onFileComplete: onFileComplete,
                #onFileError: onFileError,
              },
            ),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> installFileToPath(
    String? targetPath,
    _i9.Uint8List? fileData, {
    dynamic Function(double)? onProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #installFileToPath,
              [targetPath, fileData],
              {#onProgress: onProgress},
            ),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i12.AlgorithmInfo?> loadPlugin(String? guid) =>
      (super.noSuchMethod(
            Invocation.method(#loadPlugin, [guid]),
            returnValue: _i5.Future<_i12.AlgorithmInfo?>.value(),
          )
          as _i5.Future<_i12.AlgorithmInfo?>);

  @override
  void emit(_i4.DistingState? state) => super.noSuchMethod(
    Invocation.method(#emit, [state]),
    returnValueForMissingStub: null,
  );

  @override
  void onChange(_i17.Change<_i4.DistingState>? change) => super.noSuchMethod(
    Invocation.method(#onChange, [change]),
    returnValueForMissingStub: null,
  );

  @override
  void addError(Object? error, [StackTrace? stackTrace]) => super.noSuchMethod(
    Invocation.method(#addError, [error, stackTrace]),
    returnValueForMissingStub: null,
  );

  @override
  void onError(Object? error, StackTrace? stackTrace) => super.noSuchMethod(
    Invocation.method(#onError, [error, stackTrace]),
    returnValueForMissingStub: null,
  );
}
