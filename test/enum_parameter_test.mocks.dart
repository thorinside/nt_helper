// Mocks generated by Mockito 5.4.6 from annotations
// in nt_helper/test/enum_parameter_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;
import 'dart:typed_data' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;
import 'package:nt_helper/domain/disting_nt_sysex.dart' as _i5;
import 'package:nt_helper/models/cpu_usage.dart' as _i7;
import 'package:nt_helper/services/disting_controller.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [DistingController].
///
/// See the documentation for Mockito's code generation for more information.
class MockDistingController extends _i1.Mock implements _i2.DistingController {
  MockDistingController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<String> getCurrentPresetName() =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentPresetName, []),
            returnValue: _i3.Future<String>.value(
              _i4.dummyValue<String>(
                this,
                Invocation.method(#getCurrentPresetName, []),
              ),
            ),
          )
          as _i3.Future<String>);

  @override
  _i3.Future<void> setPresetName(String? name) =>
      (super.noSuchMethod(
            Invocation.method(#setPresetName, [name]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<_i5.Algorithm?> getAlgorithmInSlot(int? slotIndex) =>
      (super.noSuchMethod(
            Invocation.method(#getAlgorithmInSlot, [slotIndex]),
            returnValue: _i3.Future<_i5.Algorithm?>.value(),
          )
          as _i3.Future<_i5.Algorithm?>);

  @override
  _i3.Future<List<_i5.ParameterInfo>> getParametersForSlot(int? slotIndex) =>
      (super.noSuchMethod(
            Invocation.method(#getParametersForSlot, [slotIndex]),
            returnValue: _i3.Future<List<_i5.ParameterInfo>>.value(
              <_i5.ParameterInfo>[],
            ),
          )
          as _i3.Future<List<_i5.ParameterInfo>>);

  @override
  _i3.Future<void> addAlgorithm(_i5.Algorithm? algorithm) =>
      (super.noSuchMethod(
            Invocation.method(#addAlgorithm, [algorithm]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> clearSlot(int? slotIndex) =>
      (super.noSuchMethod(
            Invocation.method(#clearSlot, [slotIndex]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> moveAlgorithmUp(int? slotIndex) =>
      (super.noSuchMethod(
            Invocation.method(#moveAlgorithmUp, [slotIndex]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> moveAlgorithmDown(int? slotIndex) =>
      (super.noSuchMethod(
            Invocation.method(#moveAlgorithmDown, [slotIndex]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> updateParameterValue(
    int? slotIndex,
    int? parameterNumber,
    dynamic value,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateParameterValue, [
              slotIndex,
              parameterNumber,
              value,
            ]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> updateParameterString(
    int? slotIndex,
    int? parameterNumber,
    String? value,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateParameterString, [
              slotIndex,
              parameterNumber,
              value,
            ]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<Map<int, _i5.Algorithm?>> getAllSlots() =>
      (super.noSuchMethod(
            Invocation.method(#getAllSlots, []),
            returnValue: _i3.Future<Map<int, _i5.Algorithm?>>.value(
              <int, _i5.Algorithm?>{},
            ),
          )
          as _i3.Future<Map<int, _i5.Algorithm?>>);

  @override
  _i3.Future<int?> getParameterValue(int? slotIndex, int? parameterNumber) =>
      (super.noSuchMethod(
            Invocation.method(#getParameterValue, [slotIndex, parameterNumber]),
            returnValue: _i3.Future<int?>.value(),
          )
          as _i3.Future<int?>);

  @override
  _i3.Future<String?> getParameterStringValue(
    int? slotIndex,
    int? parameterNumber,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getParameterStringValue, [
              slotIndex,
              parameterNumber,
            ]),
            returnValue: _i3.Future<String?>.value(),
          )
          as _i3.Future<String?>);

  @override
  _i3.Future<void> setSlotName(int? slotIndex, String? name) =>
      (super.noSuchMethod(
            Invocation.method(#setSlotName, [slotIndex, name]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<String?> getSlotName(int? slotIndex) =>
      (super.noSuchMethod(
            Invocation.method(#getSlotName, [slotIndex]),
            returnValue: _i3.Future<String?>.value(),
          )
          as _i3.Future<String?>);

  @override
  _i3.Future<void> newPreset() =>
      (super.noSuchMethod(
            Invocation.method(#newPreset, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> savePreset() =>
      (super.noSuchMethod(
            Invocation.method(#savePreset, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<_i6.Uint8List?> getModuleScreenshot() =>
      (super.noSuchMethod(
            Invocation.method(#getModuleScreenshot, []),
            returnValue: _i3.Future<_i6.Uint8List?>.value(),
          )
          as _i3.Future<_i6.Uint8List?>);

  @override
  _i3.Future<void> refreshSlot(int? slotIndex) =>
      (super.noSuchMethod(
            Invocation.method(#refreshSlot, [slotIndex]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<_i7.CpuUsage?> getCpuUsage() =>
      (super.noSuchMethod(
            Invocation.method(#getCpuUsage, []),
            returnValue: _i3.Future<_i7.CpuUsage?>.value(),
          )
          as _i3.Future<_i7.CpuUsage?>);

  @override
  _i3.Future<_i5.ParameterEnumStrings?> getParameterEnumStrings(
    int? slotIndex,
    int? parameterNumber,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getParameterEnumStrings, [
              slotIndex,
              parameterNumber,
            ]),
            returnValue: _i3.Future<_i5.ParameterEnumStrings?>.value(),
          )
          as _i3.Future<_i5.ParameterEnumStrings?>);
}
