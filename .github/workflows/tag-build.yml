name: Multi-Platform Build

on:
  push:
    tags:
      - 'v*'  # e.g., v1.0, v1.2.3, etc.

permissions:
  contents: write  # Needed for creating/updating GitHub releases

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract Version (for the create-release job)
        id: extract_version
        run: |
          # e.g. "v1.2.3" => "1.2.3"
          VERSION="${{ github.ref_name }}"
          VERSION="${VERSION#v}"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
          name: "Release ${{ github.ref_name }}"
          body: "Automated release for version ${{ github.ref_name }}"
          draft: false
          prerelease: false
          # We do NOT specify "createRelease", "releaseName" in this action,
          # because those inputs are not recognized here.
          # If you plan to re-run the workflow and want to update the existing
          # release, you could also set allowUpdates: true
          # but that can wait until the artifact steps.

  android:
    name: Build and Sign Android APK
    runs-on: ubuntu-latest
    needs: create-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract Version
        id: extract_version
        run: |
          VERSION="${{ github.ref_name }}"
          VERSION="${VERSION#v}"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: '3.27.2'

      - name: Install dependencies
        run: flutter pub get

      - name: Decode and Save Keystore
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > release-key.jks

      - name: Build Android APK
        env:
          KEYSTORE_PATH: release-key.jks
          KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        run: flutter build apk --release

      - name: Rename Android APK
        run: mv build/app/outputs/flutter-apk/app-release.apk \
          build/app/outputs/flutter-apk/nt_helper-${VERSION}.apk

      - name: List build output (debug)
        run: ls -R build/app/outputs/flutter-apk

      - name: Upload Android Artifact to Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
          allowUpdates: true
          # Artifacts *must* be listed line-by-line:
          artifacts: |
            build/app/outputs/flutter-apk/nt_helper-${{ env.VERSION }}.apk => nt_helper-${{ env.VERSION }}-android.apk

  macos:
    name: Build macOS App
    runs-on: macos-latest
    needs: create-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract Version
        id: extract_version
        run: |
          VERSION="${{ github.ref_name }}"
          VERSION="${VERSION#v}"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: '3.27.2'

      - name: Install dependencies
        run: flutter pub get

      - name: Build macOS
        run: flutter build macos

      - name: Zip macOS App
        run: |
          cd build/macos/Build/Products/Release
          zip -r nt_helper-${VERSION}.zip nt_helper.app

      - name: List build output (debug)
        run: ls -R build/macos/Build/Products/Release

      - name: Upload macOS Artifact to Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
          allowUpdates: true
          artifacts: |
            build/macos/Build/Products/Release/nt_helper-${{ env.VERSION }}.zip => nt_helper-${{ env.VERSION }}-macos.zip

  windows:
    name: Build Windows App
    runs-on: windows-latest
    needs: create-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract Version
        id: extract_version
        shell: bash
        run: |
          VERSION="${{ github.ref_name }}"
          VERSION="${VERSION#v}"
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: '3.27.2'

      - name: Install dependencies
        run: flutter pub get

      - name: Build Windows
        run: flutter build windows

      - name: Zip Windows App
        shell: pwsh
        run: |
          cd build/windows/x64/runner/Release
          Compress-Archive -Path * -DestinationPath "nt_helper-${env:VERSION}.zip"

      - name: List build output (debug)
        run: ls -R build/windows/x64/runner/Release

      - name: Upload Windows Artifact to Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
          allowUpdates: true
          artifacts: |
            build/windows/x64/runner/Release/nt_helper-${{ env.VERSION }}.zip => nt_helper-${{ env.VERSION }}-windows.zip

  linux:
    name: Build Linux App
    runs-on: ubuntu-latest
    needs: create-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract Version
        id: extract_version
        run: |
          VERSION="${{ github.ref_name }}"
          VERSION="${VERSION#v}"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: '3.27.2'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev
          flutter pub get

      - name: Build Linux
        run: flutter build linux

      - name: Zip Linux App
        run: |
          cd build/linux/x64/release/bundle
          zip -r nt_helper-${VERSION}.zip *

      - name: List build output (debug)
        run: ls -R build/linux/x64/release/bundle

      - name: Upload Linux Artifact to Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
          allowUpdates: true
          # Each artifact path on its own line; rename with "=>"
          artifacts: |
            build/linux/x64/release/bundle/nt_helper-${{ env.VERSION }}.zip => nt_helper-${{ env.VERSION }}-linux.zip
